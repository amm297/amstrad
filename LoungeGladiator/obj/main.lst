                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Sep 26 2015) (CYGWIN)
                              4 ; This file was generated Fri Oct  2 14:59:01 2015
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _loadMap
                             14 	.globl _game
                             15 	.globl _drawMap
                             16 	.globl _menu
                             17 	.globl _init
                             18 	.globl _cpct_getScreenPtr
                             19 	.globl _cpct_setPalette
                             20 	.globl _cpct_fw2hw
                             21 	.globl _cpct_waitVSYNC
                             22 	.globl _cpct_setVideoMode
                             23 	.globl _cpct_drawStringM0
                             24 	.globl _cpct_drawSolidBox
                             25 	.globl _cpct_drawSpriteMasked
                             26 	.globl _cpct_isKeyPressed
                             27 	.globl _cpct_scanKeyboard_f
                             28 	.globl _cpct_memset
                             29 	.globl _cpct_disableFirmware
                             30 	.globl _scene
                             31 	.globl _g_palette
                             32 	.globl _mapa2
                             33 	.globl _mapa1
                             34 	.globl _p
                             35 ;--------------------------------------------------------
                             36 ; special function registers
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; ram data
                             40 ;--------------------------------------------------------
                             41 	.area _DATA
   0000                      42 _scene::
   0000                      43 	.ds 6
                             44 ;--------------------------------------------------------
                             45 ; ram data
                             46 ;--------------------------------------------------------
                             47 	.area _INITIALIZED
                             48 ;--------------------------------------------------------
                             49 ; absolute external ram data
                             50 ;--------------------------------------------------------
                             51 	.area _DABS (ABS)
                             52 ;--------------------------------------------------------
                             53 ; global & static initialisations
                             54 ;--------------------------------------------------------
                             55 	.area _HOME
                             56 	.area _GSINIT
                             57 	.area _GSFINAL
                             58 	.area _GSINIT
                             59 ;--------------------------------------------------------
                             60 ; Home
                             61 ;--------------------------------------------------------
                             62 	.area _HOME
                             63 	.area _HOME
                             64 ;--------------------------------------------------------
                             65 ; code
                             66 ;--------------------------------------------------------
                             67 	.area _CODE
                             68 ;src/main.c:65: void init(){
                             69 ;	---------------------------------
                             70 ; Function init
                             71 ; ---------------------------------
   0000                      72 _init::
                             73 ;src/main.c:66: cpct_disableFirmware();
   0000 CDr00r00      [17]   74 	call	_cpct_disableFirmware
                             75 ;src/main.c:67: cpct_setVideoMode(0);
   0003 AF            [ 4]   76 	xor	a, a
   0004 F5            [11]   77 	push	af
   0005 33            [ 6]   78 	inc	sp
   0006 CDr00r00      [17]   79 	call	_cpct_setVideoMode
   0009 33            [ 6]   80 	inc	sp
                             81 ;src/main.c:68: cpct_fw2hw(g_palette,4);
   000A 11rB7r02      [10]   82 	ld	de,#_g_palette
   000D 3E 04         [ 7]   83 	ld	a,#0x04
   000F F5            [11]   84 	push	af
   0010 33            [ 6]   85 	inc	sp
   0011 D5            [11]   86 	push	de
   0012 CDr00r00      [17]   87 	call	_cpct_fw2hw
   0015 F1            [10]   88 	pop	af
   0016 33            [ 6]   89 	inc	sp
                             90 ;src/main.c:69: cpct_setPalette(g_palette,4);
   0017 11rB7r02      [10]   91 	ld	de,#_g_palette
   001A 3E 04         [ 7]   92 	ld	a,#0x04
   001C F5            [11]   93 	push	af
   001D 33            [ 6]   94 	inc	sp
   001E D5            [11]   95 	push	de
   001F CDr00r00      [17]   96 	call	_cpct_setPalette
   0022 F1            [10]   97 	pop	af
   0023 33            [ 6]   98 	inc	sp
   0024 C9            [10]   99 	ret
   0025                     100 _p:
   0025 01 00               101 	.dw #0x0001
   0027 01 00               102 	.dw #0x0001
   0029 01 00               103 	.dw #0x0001
   002B 00 00               104 	.dw #0x0000
   002D 01 00               105 	.dw #0x0001
   002F 00 00               106 	.dw #0x0000
   0031 01 00               107 	.dw #0x0001
   0033 01 00               108 	.dw #0x0001
   0035 01 00               109 	.dw #0x0001
   0037                     110 _mapa1:
   0037 01 00               111 	.dw #0x0001
   0039 01 00               112 	.dw #0x0001
   003B 01 00               113 	.dw #0x0001
   003D 01 00               114 	.dw #0x0001
   003F 01 00               115 	.dw #0x0001
   0041 01 00               116 	.dw #0x0001
   0043 01 00               117 	.dw #0x0001
   0045 01 00               118 	.dw #0x0001
   0047 01 00               119 	.dw #0x0001
   0049 01 00               120 	.dw #0x0001
   004B 01 00               121 	.dw #0x0001
   004D 01 00               122 	.dw #0x0001
   004F 01 00               123 	.dw #0x0001
   0051 01 00               124 	.dw #0x0001
   0053 01 00               125 	.dw #0x0001
   0055 01 00               126 	.dw #0x0001
   0057 01 00               127 	.dw #0x0001
   0059 00 00               128 	.dw #0x0000
   005B 00 00               129 	.dw #0x0000
   005D 00 00               130 	.dw #0x0000
   005F 00 00               131 	.dw #0x0000
   0061 00 00               132 	.dw #0x0000
   0063 00 00               133 	.dw #0x0000
   0065 00 00               134 	.dw #0x0000
   0067 00 00               135 	.dw #0x0000
   0069 00 00               136 	.dw #0x0000
   006B 00 00               137 	.dw #0x0000
   006D 00 00               138 	.dw #0x0000
   006F 00 00               139 	.dw #0x0000
   0071 00 00               140 	.dw #0x0000
   0073 00 00               141 	.dw #0x0000
   0075 01 00               142 	.dw #0x0001
   0077 01 00               143 	.dw #0x0001
   0079 00 00               144 	.dw #0x0000
   007B 00 00               145 	.dw #0x0000
   007D 00 00               146 	.dw #0x0000
   007F 00 00               147 	.dw #0x0000
   0081 00 00               148 	.dw #0x0000
   0083 00 00               149 	.dw #0x0000
   0085 00 00               150 	.dw #0x0000
   0087 00 00               151 	.dw #0x0000
   0089 00 00               152 	.dw #0x0000
   008B 00 00               153 	.dw #0x0000
   008D 00 00               154 	.dw #0x0000
   008F 00 00               155 	.dw #0x0000
   0091 00 00               156 	.dw #0x0000
   0093 00 00               157 	.dw #0x0000
   0095 01 00               158 	.dw #0x0001
   0097 01 00               159 	.dw #0x0001
   0099 00 00               160 	.dw #0x0000
   009B 00 00               161 	.dw #0x0000
   009D 00 00               162 	.dw #0x0000
   009F 00 00               163 	.dw #0x0000
   00A1 00 00               164 	.dw #0x0000
   00A3 00 00               165 	.dw #0x0000
   00A5 00 00               166 	.dw #0x0000
   00A7 00 00               167 	.dw #0x0000
   00A9 00 00               168 	.dw #0x0000
   00AB 00 00               169 	.dw #0x0000
   00AD 00 00               170 	.dw #0x0000
   00AF 00 00               171 	.dw #0x0000
   00B1 00 00               172 	.dw #0x0000
   00B3 00 00               173 	.dw #0x0000
   00B5 01 00               174 	.dw #0x0001
   00B7 01 00               175 	.dw #0x0001
   00B9 00 00               176 	.dw #0x0000
   00BB 00 00               177 	.dw #0x0000
   00BD 00 00               178 	.dw #0x0000
   00BF 00 00               179 	.dw #0x0000
   00C1 00 00               180 	.dw #0x0000
   00C3 00 00               181 	.dw #0x0000
   00C5 00 00               182 	.dw #0x0000
   00C7 00 00               183 	.dw #0x0000
   00C9 00 00               184 	.dw #0x0000
   00CB 00 00               185 	.dw #0x0000
   00CD 00 00               186 	.dw #0x0000
   00CF 00 00               187 	.dw #0x0000
   00D1 00 00               188 	.dw #0x0000
   00D3 00 00               189 	.dw #0x0000
   00D5 01 00               190 	.dw #0x0001
   00D7 00 00               191 	.dw #0x0000
   00D9 00 00               192 	.dw #0x0000
   00DB 00 00               193 	.dw #0x0000
   00DD 00 00               194 	.dw #0x0000
   00DF 00 00               195 	.dw #0x0000
   00E1 00 00               196 	.dw #0x0000
   00E3 00 00               197 	.dw #0x0000
   00E5 00 00               198 	.dw #0x0000
   00E7 00 00               199 	.dw #0x0000
   00E9 00 00               200 	.dw #0x0000
   00EB 00 00               201 	.dw #0x0000
   00ED 00 00               202 	.dw #0x0000
   00EF 00 00               203 	.dw #0x0000
   00F1 00 00               204 	.dw #0x0000
   00F3 00 00               205 	.dw #0x0000
   00F5 01 00               206 	.dw #0x0001
   00F7 01 00               207 	.dw #0x0001
   00F9 00 00               208 	.dw #0x0000
   00FB 00 00               209 	.dw #0x0000
   00FD 00 00               210 	.dw #0x0000
   00FF 00 00               211 	.dw #0x0000
   0101 00 00               212 	.dw #0x0000
   0103 00 00               213 	.dw #0x0000
   0105 00 00               214 	.dw #0x0000
   0107 00 00               215 	.dw #0x0000
   0109 00 00               216 	.dw #0x0000
   010B 00 00               217 	.dw #0x0000
   010D 00 00               218 	.dw #0x0000
   010F 00 00               219 	.dw #0x0000
   0111 00 00               220 	.dw #0x0000
   0113 00 00               221 	.dw #0x0000
   0115 01 00               222 	.dw #0x0001
   0117 01 00               223 	.dw #0x0001
   0119 00 00               224 	.dw #0x0000
   011B 00 00               225 	.dw #0x0000
   011D 00 00               226 	.dw #0x0000
   011F 00 00               227 	.dw #0x0000
   0121 00 00               228 	.dw #0x0000
   0123 00 00               229 	.dw #0x0000
   0125 00 00               230 	.dw #0x0000
   0127 00 00               231 	.dw #0x0000
   0129 00 00               232 	.dw #0x0000
   012B 00 00               233 	.dw #0x0000
   012D 00 00               234 	.dw #0x0000
   012F 00 00               235 	.dw #0x0000
   0131 00 00               236 	.dw #0x0000
   0133 00 00               237 	.dw #0x0000
   0135 01 00               238 	.dw #0x0001
   0137 01 00               239 	.dw #0x0001
   0139 00 00               240 	.dw #0x0000
   013B 00 00               241 	.dw #0x0000
   013D 00 00               242 	.dw #0x0000
   013F 00 00               243 	.dw #0x0000
   0141 00 00               244 	.dw #0x0000
   0143 00 00               245 	.dw #0x0000
   0145 00 00               246 	.dw #0x0000
   0147 00 00               247 	.dw #0x0000
   0149 00 00               248 	.dw #0x0000
   014B 00 00               249 	.dw #0x0000
   014D 00 00               250 	.dw #0x0000
   014F 00 00               251 	.dw #0x0000
   0151 00 00               252 	.dw #0x0000
   0153 00 00               253 	.dw #0x0000
   0155 01 00               254 	.dw #0x0001
   0157 01 00               255 	.dw #0x0001
   0159 01 00               256 	.dw #0x0001
   015B 01 00               257 	.dw #0x0001
   015D 01 00               258 	.dw #0x0001
   015F 01 00               259 	.dw #0x0001
   0161 01 00               260 	.dw #0x0001
   0163 01 00               261 	.dw #0x0001
   0165 01 00               262 	.dw #0x0001
   0167 01 00               263 	.dw #0x0001
   0169 01 00               264 	.dw #0x0001
   016B 01 00               265 	.dw #0x0001
   016D 01 00               266 	.dw #0x0001
   016F 01 00               267 	.dw #0x0001
   0171 01 00               268 	.dw #0x0001
   0173 01 00               269 	.dw #0x0001
   0175 01 00               270 	.dw #0x0001
   0177                     271 _mapa2:
   0177 01 00               272 	.dw #0x0001
   0179 01 00               273 	.dw #0x0001
   017B 01 00               274 	.dw #0x0001
   017D 01 00               275 	.dw #0x0001
   017F 01 00               276 	.dw #0x0001
   0181 01 00               277 	.dw #0x0001
   0183 01 00               278 	.dw #0x0001
   0185 01 00               279 	.dw #0x0001
   0187 01 00               280 	.dw #0x0001
   0189 01 00               281 	.dw #0x0001
   018B 01 00               282 	.dw #0x0001
   018D 01 00               283 	.dw #0x0001
   018F 01 00               284 	.dw #0x0001
   0191 01 00               285 	.dw #0x0001
   0193 01 00               286 	.dw #0x0001
   0195 01 00               287 	.dw #0x0001
   0197 01 00               288 	.dw #0x0001
   0199 01 00               289 	.dw #0x0001
   019B 01 00               290 	.dw #0x0001
   019D 00 00               291 	.dw #0x0000
   019F 00 00               292 	.dw #0x0000
   01A1 00 00               293 	.dw #0x0000
   01A3 00 00               294 	.dw #0x0000
   01A5 00 00               295 	.dw #0x0000
   01A7 00 00               296 	.dw #0x0000
   01A9 00 00               297 	.dw #0x0000
   01AB 00 00               298 	.dw #0x0000
   01AD 00 00               299 	.dw #0x0000
   01AF 00 00               300 	.dw #0x0000
   01B1 01 00               301 	.dw #0x0001
   01B3 01 00               302 	.dw #0x0001
   01B5 01 00               303 	.dw #0x0001
   01B7 01 00               304 	.dw #0x0001
   01B9 01 00               305 	.dw #0x0001
   01BB 01 00               306 	.dw #0x0001
   01BD 00 00               307 	.dw #0x0000
   01BF 00 00               308 	.dw #0x0000
   01C1 00 00               309 	.dw #0x0000
   01C3 00 00               310 	.dw #0x0000
   01C5 00 00               311 	.dw #0x0000
   01C7 00 00               312 	.dw #0x0000
   01C9 00 00               313 	.dw #0x0000
   01CB 00 00               314 	.dw #0x0000
   01CD 00 00               315 	.dw #0x0000
   01CF 00 00               316 	.dw #0x0000
   01D1 01 00               317 	.dw #0x0001
   01D3 01 00               318 	.dw #0x0001
   01D5 01 00               319 	.dw #0x0001
   01D7 01 00               320 	.dw #0x0001
   01D9 00 00               321 	.dw #0x0000
   01DB 01 00               322 	.dw #0x0001
   01DD 00 00               323 	.dw #0x0000
   01DF 00 00               324 	.dw #0x0000
   01E1 00 00               325 	.dw #0x0000
   01E3 00 00               326 	.dw #0x0000
   01E5 01 00               327 	.dw #0x0001
   01E7 01 00               328 	.dw #0x0001
   01E9 01 00               329 	.dw #0x0001
   01EB 00 00               330 	.dw #0x0000
   01ED 00 00               331 	.dw #0x0000
   01EF 00 00               332 	.dw #0x0000
   01F1 01 00               333 	.dw #0x0001
   01F3 00 00               334 	.dw #0x0000
   01F5 01 00               335 	.dw #0x0001
   01F7 01 00               336 	.dw #0x0001
   01F9 00 00               337 	.dw #0x0000
   01FB 01 00               338 	.dw #0x0001
   01FD 00 00               339 	.dw #0x0000
   01FF 00 00               340 	.dw #0x0000
   0201 00 00               341 	.dw #0x0000
   0203 00 00               342 	.dw #0x0000
   0205 01 00               343 	.dw #0x0001
   0207 01 00               344 	.dw #0x0001
   0209 01 00               345 	.dw #0x0001
   020B 00 00               346 	.dw #0x0000
   020D 00 00               347 	.dw #0x0000
   020F 00 00               348 	.dw #0x0000
   0211 01 00               349 	.dw #0x0001
   0213 00 00               350 	.dw #0x0000
   0215 01 00               351 	.dw #0x0001
   0217 00 00               352 	.dw #0x0000
   0219 00 00               353 	.dw #0x0000
   021B 01 00               354 	.dw #0x0001
   021D 00 00               355 	.dw #0x0000
   021F 00 00               356 	.dw #0x0000
   0221 00 00               357 	.dw #0x0000
   0223 00 00               358 	.dw #0x0000
   0225 01 00               359 	.dw #0x0001
   0227 00 00               360 	.dw #0x0000
   0229 01 00               361 	.dw #0x0001
   022B 00 00               362 	.dw #0x0000
   022D 00 00               363 	.dw #0x0000
   022F 00 00               364 	.dw #0x0000
   0231 01 00               365 	.dw #0x0001
   0233 00 00               366 	.dw #0x0000
   0235 01 00               367 	.dw #0x0001
   0237 01 00               368 	.dw #0x0001
   0239 00 00               369 	.dw #0x0000
   023B 01 00               370 	.dw #0x0001
   023D 01 00               371 	.dw #0x0001
   023F 01 00               372 	.dw #0x0001
   0241 01 00               373 	.dw #0x0001
   0243 01 00               374 	.dw #0x0001
   0245 00 00               375 	.dw #0x0000
   0247 00 00               376 	.dw #0x0000
   0249 00 00               377 	.dw #0x0000
   024B 01 00               378 	.dw #0x0001
   024D 01 00               379 	.dw #0x0001
   024F 01 00               380 	.dw #0x0001
   0251 01 00               381 	.dw #0x0001
   0253 00 00               382 	.dw #0x0000
   0255 01 00               383 	.dw #0x0001
   0257 01 00               384 	.dw #0x0001
   0259 00 00               385 	.dw #0x0000
   025B 01 00               386 	.dw #0x0001
   025D 01 00               387 	.dw #0x0001
   025F 01 00               388 	.dw #0x0001
   0261 01 00               389 	.dw #0x0001
   0263 01 00               390 	.dw #0x0001
   0265 00 00               391 	.dw #0x0000
   0267 00 00               392 	.dw #0x0000
   0269 00 00               393 	.dw #0x0000
   026B 01 00               394 	.dw #0x0001
   026D 01 00               395 	.dw #0x0001
   026F 01 00               396 	.dw #0x0001
   0271 01 00               397 	.dw #0x0001
   0273 00 00               398 	.dw #0x0000
   0275 01 00               399 	.dw #0x0001
   0277 01 00               400 	.dw #0x0001
   0279 00 00               401 	.dw #0x0000
   027B 00 00               402 	.dw #0x0000
   027D 00 00               403 	.dw #0x0000
   027F 00 00               404 	.dw #0x0000
   0281 00 00               405 	.dw #0x0000
   0283 00 00               406 	.dw #0x0000
   0285 00 00               407 	.dw #0x0000
   0287 00 00               408 	.dw #0x0000
   0289 00 00               409 	.dw #0x0000
   028B 00 00               410 	.dw #0x0000
   028D 00 00               411 	.dw #0x0000
   028F 00 00               412 	.dw #0x0000
   0291 00 00               413 	.dw #0x0000
   0293 00 00               414 	.dw #0x0000
   0295 01 00               415 	.dw #0x0001
   0297 01 00               416 	.dw #0x0001
   0299 01 00               417 	.dw #0x0001
   029B 01 00               418 	.dw #0x0001
   029D 01 00               419 	.dw #0x0001
   029F 01 00               420 	.dw #0x0001
   02A1 01 00               421 	.dw #0x0001
   02A3 01 00               422 	.dw #0x0001
   02A5 01 00               423 	.dw #0x0001
   02A7 01 00               424 	.dw #0x0001
   02A9 01 00               425 	.dw #0x0001
   02AB 01 00               426 	.dw #0x0001
   02AD 01 00               427 	.dw #0x0001
   02AF 01 00               428 	.dw #0x0001
   02B1 01 00               429 	.dw #0x0001
   02B3 01 00               430 	.dw #0x0001
   02B5 01 00               431 	.dw #0x0001
   02B7                     432 _g_palette:
   02B7 00                  433 	.db #0x00	; 0
   02B8 1A                  434 	.db #0x1A	; 26
   02B9 06                  435 	.db #0x06	; 6
   02BA 12                  436 	.db #0x12	; 18
                            437 ;src/main.c:73: void menu(){
                            438 ;	---------------------------------
                            439 ; Function menu
                            440 ; ---------------------------------
   02BB                     441 _menu::
                            442 ;src/main.c:75: cpct_clearScreen(0);
   02BB 21 00 40      [10]  443 	ld	hl,#0x4000
   02BE E5            [11]  444 	push	hl
   02BF AF            [ 4]  445 	xor	a, a
   02C0 F5            [11]  446 	push	af
   02C1 33            [ 6]  447 	inc	sp
   02C2 26 C0         [ 7]  448 	ld	h, #0xC0
   02C4 E5            [11]  449 	push	hl
   02C5 CDr00r00      [17]  450 	call	_cpct_memset
                            451 ;src/main.c:77: memptr = cpct_getScreenPtr(VMEM,20,10);
   02C8 21 14 0A      [10]  452 	ld	hl,#0x0A14
   02CB E5            [11]  453 	push	hl
   02CC 21 00 C0      [10]  454 	ld	hl,#0xC000
   02CF E5            [11]  455 	push	hl
   02D0 CDr00r00      [17]  456 	call	_cpct_getScreenPtr
                            457 ;src/main.c:78: cpct_drawStringM0("MENU",memptr,2,3);
   02D3 EB            [ 4]  458 	ex	de,hl
   02D4 01r10r03      [10]  459 	ld	bc,#___str_0+0
   02D7 21 02 03      [10]  460 	ld	hl,#0x0302
   02DA E5            [11]  461 	push	hl
   02DB D5            [11]  462 	push	de
   02DC C5            [11]  463 	push	bc
   02DD CDr00r00      [17]  464 	call	_cpct_drawStringM0
   02E0 21 06 00      [10]  465 	ld	hl,#6
   02E3 39            [11]  466 	add	hl,sp
   02E4 F9            [ 6]  467 	ld	sp,hl
                            468 ;src/main.c:80: memptr = cpct_getScreenPtr(VMEM,18,180);
   02E5 21 12 B4      [10]  469 	ld	hl,#0xB412
   02E8 E5            [11]  470 	push	hl
   02E9 21 00 C0      [10]  471 	ld	hl,#0xC000
   02EC E5            [11]  472 	push	hl
   02ED CDr00r00      [17]  473 	call	_cpct_getScreenPtr
                            474 ;src/main.c:81: cpct_drawStringM0("Pulsa Intro",memptr,4,5);
   02F0 EB            [ 4]  475 	ex	de,hl
   02F1 01r15r03      [10]  476 	ld	bc,#___str_1+0
   02F4 21 04 05      [10]  477 	ld	hl,#0x0504
   02F7 E5            [11]  478 	push	hl
   02F8 D5            [11]  479 	push	de
   02F9 C5            [11]  480 	push	bc
   02FA CDr00r00      [17]  481 	call	_cpct_drawStringM0
   02FD 21 06 00      [10]  482 	ld	hl,#6
   0300 39            [11]  483 	add	hl,sp
   0301 F9            [ 6]  484 	ld	sp,hl
                            485 ;src/main.c:83: do{
   0302                     486 00101$:
                            487 ;src/main.c:84: cpct_scanKeyboard_f();
   0302 CDr00r00      [17]  488 	call	_cpct_scanKeyboard_f
                            489 ;src/main.c:85: }while(!cpct_isKeyPressed(Key_Enter));
   0305 21 00 40      [10]  490 	ld	hl,#0x4000
   0308 CDr00r00      [17]  491 	call	_cpct_isKeyPressed
   030B 7D            [ 4]  492 	ld	a,l
   030C B7            [ 4]  493 	or	a, a
   030D 28 F3         [12]  494 	jr	Z,00101$
   030F C9            [10]  495 	ret
   0310                     496 ___str_0:
   0310 4D 45 4E 55         497 	.ascii "MENU"
   0314 00                  498 	.db 0x00
   0315                     499 ___str_1:
   0315 50 75 6C 73 61 20   500 	.ascii "Pulsa Intro"
        49 6E 74 72 6F
   0320 00                  501 	.db 0x00
                            502 ;src/main.c:91: void drawMap(int t){
                            503 ;	---------------------------------
                            504 ; Function drawMap
                            505 ; ---------------------------------
   0321                     506 _drawMap::
   0321 DD E5         [15]  507 	push	ix
   0323 DD 21 00 00   [14]  508 	ld	ix,#0
   0327 DD 39         [15]  509 	add	ix,sp
   0329 21 FA FF      [10]  510 	ld	hl,#-6
   032C 39            [11]  511 	add	hl,sp
   032D F9            [ 6]  512 	ld	sp,hl
                            513 ;src/main.c:95: if(t == 1){ 
   032E DD 7E 04      [19]  514 	ld	a,4 (ix)
   0331 3D            [ 4]  515 	dec	a
   0332 20 3A         [12]  516 	jr	NZ,00103$
   0334 DD 7E 05      [19]  517 	ld	a,5 (ix)
   0337 B7            [ 4]  518 	or	a, a
   0338 20 34         [12]  519 	jr	NZ,00103$
                            520 ;src/main.c:96: for(x=0;x<height;x++){
   033A 11 00 00      [10]  521 	ld	de,#0x0000
   033D                     522 00111$:
                            523 ;src/main.c:97: scene[x] = mapa1[x];
   033D 6B            [ 4]  524 	ld	l, e
   033E 62            [ 4]  525 	ld	h, d
   033F 29            [11]  526 	add	hl, hl
   0340 3Er00         [ 7]  527 	ld	a,#<(_scene)
   0342 85            [ 4]  528 	add	a, l
   0343 DD 77 FE      [19]  529 	ld	-2 (ix),a
   0346 3Es00         [ 7]  530 	ld	a,#>(_scene)
   0348 8C            [ 4]  531 	adc	a, h
   0349 DD 77 FF      [19]  532 	ld	-1 (ix),a
   034C 6B            [ 4]  533 	ld	l, e
   034D 62            [ 4]  534 	ld	h, d
   034E 29            [11]  535 	add	hl, hl
   034F 29            [11]  536 	add	hl, hl
   0350 29            [11]  537 	add	hl, hl
   0351 29            [11]  538 	add	hl, hl
   0352 29            [11]  539 	add	hl, hl
   0353 01r37r00      [10]  540 	ld	bc,#_mapa1
   0356 09            [11]  541 	add	hl,bc
   0357 45            [ 4]  542 	ld	b,l
   0358 4C            [ 4]  543 	ld	c,h
   0359 DD 6E FE      [19]  544 	ld	l,-2 (ix)
   035C DD 66 FF      [19]  545 	ld	h,-1 (ix)
   035F 70            [ 7]  546 	ld	(hl),b
   0360 23            [ 6]  547 	inc	hl
   0361 71            [ 7]  548 	ld	(hl),c
                            549 ;src/main.c:96: for(x=0;x<height;x++){
   0362 13            [ 6]  550 	inc	de
   0363 7B            [ 4]  551 	ld	a,e
   0364 D6 0A         [ 7]  552 	sub	a, #0x0A
   0366 7A            [ 4]  553 	ld	a,d
   0367 17            [ 4]  554 	rla
   0368 3F            [ 4]  555 	ccf
   0369 1F            [ 4]  556 	rra
   036A DE 80         [ 7]  557 	sbc	a, #0x80
   036C 38 CF         [12]  558 	jr	C,00111$
   036E                     559 00103$:
                            560 ;src/main.c:101: if(t == 2){ 
   036E DD 7E 04      [19]  561 	ld	a,4 (ix)
   0371 D6 02         [ 7]  562 	sub	a, #0x02
   0373 20 30         [12]  563 	jr	NZ,00128$
   0375 DD 7E 05      [19]  564 	ld	a,5 (ix)
   0378 B7            [ 4]  565 	or	a, a
   0379 20 2A         [12]  566 	jr	NZ,00128$
                            567 ;src/main.c:102: for(x=0;x<height;x++){
   037B 01 00 00      [10]  568 	ld	bc,#0x0000
   037E                     569 00113$:
                            570 ;src/main.c:103: scene[x] = mapa2[x];
   037E 69            [ 4]  571 	ld	l, c
   037F 60            [ 4]  572 	ld	h, b
   0380 29            [11]  573 	add	hl, hl
   0381 FD 21r00r00   [14]  574 	ld	iy,#_scene
   0385 EB            [ 4]  575 	ex	de,hl
   0386 FD 19         [15]  576 	add	iy, de
   0388 69            [ 4]  577 	ld	l, c
   0389 60            [ 4]  578 	ld	h, b
   038A 29            [11]  579 	add	hl, hl
   038B 29            [11]  580 	add	hl, hl
   038C 29            [11]  581 	add	hl, hl
   038D 29            [11]  582 	add	hl, hl
   038E 29            [11]  583 	add	hl, hl
   038F 11r77r01      [10]  584 	ld	de,#_mapa2
   0392 19            [11]  585 	add	hl,de
   0393 FD 75 00      [19]  586 	ld	0 (iy),l
   0396 FD 74 01      [19]  587 	ld	1 (iy),h
                            588 ;src/main.c:102: for(x=0;x<height;x++){
   0399 03            [ 6]  589 	inc	bc
   039A 79            [ 4]  590 	ld	a,c
   039B D6 0A         [ 7]  591 	sub	a, #0x0A
   039D 78            [ 4]  592 	ld	a,b
   039E 17            [ 4]  593 	rla
   039F 3F            [ 4]  594 	ccf
   03A0 1F            [ 4]  595 	rra
   03A1 DE 80         [ 7]  596 	sbc	a, #0x80
   03A3 38 D9         [12]  597 	jr	C,00113$
                            598 ;src/main.c:107: for(posY=0; posY<height;posY++){
   03A5                     599 00128$:
   03A5 DD 36 FC 00   [19]  600 	ld	-4 (ix),#0x00
   03A9 DD 36 FD 00   [19]  601 	ld	-3 (ix),#0x00
                            602 ;src/main.c:108: for(posX=0; posX<width;posX++){
   03AD                     603 00126$:
   03AD C1            [10]  604 	pop	bc
   03AE E1            [10]  605 	pop	hl
   03AF E5            [11]  606 	push	hl
   03B0 C5            [11]  607 	push	bc
   03B1 29            [11]  608 	add	hl, hl
   03B2 3Er00         [ 7]  609 	ld	a,#<(_scene)
   03B4 85            [ 4]  610 	add	a, l
   03B5 DD 77 FE      [19]  611 	ld	-2 (ix),a
   03B8 3Es00         [ 7]  612 	ld	a,#>(_scene)
   03BA 8C            [ 4]  613 	adc	a, h
   03BB DD 77 FF      [19]  614 	ld	-1 (ix),a
   03BE 11 00 00      [10]  615 	ld	de,#0x0000
   03C1                     616 00115$:
                            617 ;src/main.c:109: memptr = cpct_getScreenPtr(VMEM, posX*5, posY*20); 
   03C1 DD 7E FC      [19]  618 	ld	a,-4 (ix)
   03C4 4F            [ 4]  619 	ld	c,a
   03C5 87            [ 4]  620 	add	a, a
   03C6 87            [ 4]  621 	add	a, a
   03C7 81            [ 4]  622 	add	a, c
   03C8 87            [ 4]  623 	add	a, a
   03C9 87            [ 4]  624 	add	a, a
   03CA 47            [ 4]  625 	ld	b,a
   03CB 4B            [ 4]  626 	ld	c,e
   03CC 79            [ 4]  627 	ld	a,c
   03CD 87            [ 4]  628 	add	a, a
   03CE 87            [ 4]  629 	add	a, a
   03CF 81            [ 4]  630 	add	a, c
   03D0 D5            [11]  631 	push	de
   03D1 C5            [11]  632 	push	bc
   03D2 33            [ 6]  633 	inc	sp
   03D3 F5            [11]  634 	push	af
   03D4 33            [ 6]  635 	inc	sp
   03D5 21 00 C0      [10]  636 	ld	hl,#0xC000
   03D8 E5            [11]  637 	push	hl
   03D9 CDr00r00      [17]  638 	call	_cpct_getScreenPtr
   03DC D1            [10]  639 	pop	de
   03DD 33            [ 6]  640 	inc	sp
   03DE 33            [ 6]  641 	inc	sp
   03DF E5            [11]  642 	push	hl
                            643 ;src/main.c:110: if(scene[posY][posX] == 1){
   03E0 DD 6E FE      [19]  644 	ld	l,-2 (ix)
   03E3 DD 66 FF      [19]  645 	ld	h,-1 (ix)
   03E6 4E            [ 7]  646 	ld	c,(hl)
   03E7 23            [ 6]  647 	inc	hl
   03E8 46            [ 7]  648 	ld	b,(hl)
   03E9 6B            [ 4]  649 	ld	l, e
   03EA 62            [ 4]  650 	ld	h, d
   03EB 29            [11]  651 	add	hl, hl
   03EC 09            [11]  652 	add	hl,bc
   03ED 46            [ 7]  653 	ld	b,(hl)
   03EE 23            [ 6]  654 	inc	hl
   03EF 66            [ 7]  655 	ld	h,(hl)
   03F0 10 17         [13]  656 	djnz	00116$
   03F2 7C            [ 4]  657 	ld	a,h
   03F3 B7            [ 4]  658 	or	a, a
   03F4 20 13         [12]  659 	jr	NZ,00116$
                            660 ;src/main.c:111: cpct_drawSolidBox(memptr, 3, 5, 20);
   03F6 C1            [10]  661 	pop	bc
   03F7 C5            [11]  662 	push	bc
   03F8 D5            [11]  663 	push	de
   03F9 21 05 14      [10]  664 	ld	hl,#0x1405
   03FC E5            [11]  665 	push	hl
   03FD 3E 03         [ 7]  666 	ld	a,#0x03
   03FF F5            [11]  667 	push	af
   0400 33            [ 6]  668 	inc	sp
   0401 C5            [11]  669 	push	bc
   0402 CDr00r00      [17]  670 	call	_cpct_drawSolidBox
   0405 F1            [10]  671 	pop	af
   0406 F1            [10]  672 	pop	af
   0407 33            [ 6]  673 	inc	sp
   0408 D1            [10]  674 	pop	de
   0409                     675 00116$:
                            676 ;src/main.c:108: for(posX=0; posX<width;posX++){
   0409 13            [ 6]  677 	inc	de
   040A 7B            [ 4]  678 	ld	a,e
   040B D6 10         [ 7]  679 	sub	a, #0x10
   040D 7A            [ 4]  680 	ld	a,d
   040E 17            [ 4]  681 	rla
   040F 3F            [ 4]  682 	ccf
   0410 1F            [ 4]  683 	rra
   0411 DE 80         [ 7]  684 	sbc	a, #0x80
   0413 38 AC         [12]  685 	jr	C,00115$
                            686 ;src/main.c:107: for(posY=0; posY<height;posY++){
   0415 DD 34 FC      [23]  687 	inc	-4 (ix)
   0418 20 03         [12]  688 	jr	NZ,00163$
   041A DD 34 FD      [23]  689 	inc	-3 (ix)
   041D                     690 00163$:
   041D DD 7E FC      [19]  691 	ld	a,-4 (ix)
   0420 D6 0A         [ 7]  692 	sub	a, #0x0A
   0422 DD 7E FD      [19]  693 	ld	a,-3 (ix)
   0425 17            [ 4]  694 	rla
   0426 3F            [ 4]  695 	ccf
   0427 1F            [ 4]  696 	rra
   0428 DE 80         [ 7]  697 	sbc	a, #0x80
   042A DArADr03      [10]  698 	jp	C,00126$
   042D DD F9         [10]  699 	ld	sp, ix
   042F DD E1         [14]  700 	pop	ix
   0431 C9            [10]  701 	ret
                            702 ;src/main.c:120: void game(){
                            703 ;	---------------------------------
                            704 ; Function game
                            705 ; ---------------------------------
   0432                     706 _game::
   0432 DD E5         [15]  707 	push	ix
   0434 DD 21 00 00   [14]  708 	ld	ix,#0
   0438 DD 39         [15]  709 	add	ix,sp
   043A 21 F0 FF      [10]  710 	ld	hl,#-16
   043D 39            [11]  711 	add	hl,sp
                            712 ;src/main.c:121: TPlayer p = { 0,100 };
   043E F9            [ 6]  713 	ld	sp, hl
   043F 23            [ 6]  714 	inc	hl
   0440 23            [ 6]  715 	inc	hl
   0441 36 00         [10]  716 	ld	(hl),#0x00
   0443 21 02 00      [10]  717 	ld	hl,#0x0002
   0446 39            [11]  718 	add	hl,sp
   0447 DD 75 FC      [19]  719 	ld	-4 (ix),l
   044A DD 74 FD      [19]  720 	ld	-3 (ix),h
   044D DD 7E FC      [19]  721 	ld	a,-4 (ix)
   0450 C6 01         [ 7]  722 	add	a, #0x01
   0452 DD 77 FE      [19]  723 	ld	-2 (ix),a
   0455 DD 7E FD      [19]  724 	ld	a,-3 (ix)
   0458 CE 00         [ 7]  725 	adc	a, #0x00
   045A DD 77 FF      [19]  726 	ld	-1 (ix),a
   045D DD 6E FE      [19]  727 	ld	l,-2 (ix)
   0460 DD 66 FF      [19]  728 	ld	h,-1 (ix)
   0463 36 64         [10]  729 	ld	(hl),#0x64
                            730 ;src/main.c:123: int i =1;
   0465 21 01 00      [10]  731 	ld	hl,#0x0001
   0468 E3            [19]  732 	ex	(sp), hl
                            733 ;src/main.c:124: u8* sprite = gladis_quieto_dcha;
   0469 DD 36 F6r00   [19]  734 	ld	-10 (ix),#<(_gladis_quieto_dcha)
   046D DD 36 F7s00   [19]  735 	ld	-9 (ix),#>(_gladis_quieto_dcha)
                            736 ;src/main.c:125: cpct_clearScreen(0);
   0471 21 00 40      [10]  737 	ld	hl,#0x4000
   0474 E5            [11]  738 	push	hl
   0475 AF            [ 4]  739 	xor	a, a
   0476 F5            [11]  740 	push	af
   0477 33            [ 6]  741 	inc	sp
   0478 26 C0         [ 7]  742 	ld	h, #0xC0
   047A E5            [11]  743 	push	hl
   047B CDr00r00      [17]  744 	call	_cpct_memset
                            745 ;src/main.c:126: drawMap(i);
   047E 21 01 00      [10]  746 	ld	hl,#0x0001
   0481 E5            [11]  747 	push	hl
   0482 CDr21r03      [17]  748 	call	_drawMap
   0485 F1            [10]  749 	pop	af
                            750 ;src/main.c:127: while (1){
   0486                     751 00118$:
                            752 ;src/main.c:130: cpct_waitVSYNC();
   0486 CDr00r00      [17]  753 	call	_cpct_waitVSYNC
                            754 ;src/main.c:133: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   0489 DD 6E FE      [19]  755 	ld	l,-2 (ix)
   048C DD 66 FF      [19]  756 	ld	h,-1 (ix)
   048F 46            [ 7]  757 	ld	b,(hl)
   0490 DD 6E FC      [19]  758 	ld	l,-4 (ix)
   0493 DD 66 FD      [19]  759 	ld	h,-3 (ix)
   0496 4E            [ 7]  760 	ld	c, (hl)
   0497 C5            [11]  761 	push	bc
   0498 21 00 C0      [10]  762 	ld	hl,#0xC000
   049B E5            [11]  763 	push	hl
   049C CDr00r00      [17]  764 	call	_cpct_getScreenPtr
   049F DD 74 F5      [19]  765 	ld	-11 (ix),h
   04A2 DD 75 F4      [19]  766 	ld	-12 (ix), l
   04A5 DD 75 FA      [19]  767 	ld	-6 (ix), l
   04A8 DD 7E F5      [19]  768 	ld	a,-11 (ix)
   04AB DD 77 FB      [19]  769 	ld	-5 (ix),a
                            770 ;src/main.c:134: cpct_drawSolidBox(memptr,0,4,16);
   04AE 21 04 10      [10]  771 	ld	hl,#0x1004
   04B1 E5            [11]  772 	push	hl
   04B2 AF            [ 4]  773 	xor	a, a
   04B3 F5            [11]  774 	push	af
   04B4 33            [ 6]  775 	inc	sp
   04B5 DD 6E FA      [19]  776 	ld	l,-6 (ix)
   04B8 DD 66 FB      [19]  777 	ld	h,-5 (ix)
   04BB E5            [11]  778 	push	hl
   04BC CDr00r00      [17]  779 	call	_cpct_drawSolidBox
   04BF F1            [10]  780 	pop	af
   04C0 F1            [10]  781 	pop	af
   04C1 33            [ 6]  782 	inc	sp
                            783 ;src/main.c:138: cpct_scanKeyboard_f();
   04C2 CDr00r00      [17]  784 	call	_cpct_scanKeyboard_f
                            785 ;src/main.c:139: if(cpct_isKeyPressed(Key_CursorRight) && p.x < 76 ){
   04C5 21 00 02      [10]  786 	ld	hl,#0x0200
   04C8 CDr00r00      [17]  787 	call	_cpct_isKeyPressed
   04CB DD 75 FA      [19]  788 	ld	-6 (ix), l
   04CE 7D            [ 4]  789 	ld	a, l
   04CF B7            [ 4]  790 	or	a, a
   04D0 28 1E         [12]  791 	jr	Z,00114$
   04D2 DD 6E FC      [19]  792 	ld	l,-4 (ix)
   04D5 DD 66 FD      [19]  793 	ld	h,-3 (ix)
   04D8 56            [ 7]  794 	ld	d,(hl)
   04D9 7A            [ 4]  795 	ld	a,d
   04DA D6 4C         [ 7]  796 	sub	a, #0x4C
   04DC 30 12         [12]  797 	jr	NC,00114$
                            798 ;src/main.c:140: p.x += 1;
   04DE 14            [ 4]  799 	inc	d
   04DF DD 6E FC      [19]  800 	ld	l,-4 (ix)
   04E2 DD 66 FD      [19]  801 	ld	h,-3 (ix)
   04E5 72            [ 7]  802 	ld	(hl),d
                            803 ;src/main.c:141: sprite = gladis_quieto_dcha;
   04E6 DD 36 F6r00   [19]  804 	ld	-10 (ix),#<(_gladis_quieto_dcha)
   04EA DD 36 F7s00   [19]  805 	ld	-9 (ix),#>(_gladis_quieto_dcha)
   04EE 18 6A         [12]  806 	jr	00115$
   04F0                     807 00114$:
                            808 ;src/main.c:142: }else if(cpct_isKeyPressed(Key_CursorLeft) && p.x > 0 ){
   04F0 21 01 01      [10]  809 	ld	hl,#0x0101
   04F3 CDr00r00      [17]  810 	call	_cpct_isKeyPressed
   04F6 7D            [ 4]  811 	ld	a,l
   04F7 B7            [ 4]  812 	or	a, a
   04F8 28 1D         [12]  813 	jr	Z,00110$
   04FA DD 6E FC      [19]  814 	ld	l,-4 (ix)
   04FD DD 66 FD      [19]  815 	ld	h,-3 (ix)
   0500 7E            [ 7]  816 	ld	a,(hl)
   0501 B7            [ 4]  817 	or	a, a
   0502 28 13         [12]  818 	jr	Z,00110$
                            819 ;src/main.c:143: p.x -= 1;
   0504 C6 FF         [ 7]  820 	add	a,#0xFF
   0506 DD 6E FC      [19]  821 	ld	l,-4 (ix)
   0509 DD 66 FD      [19]  822 	ld	h,-3 (ix)
   050C 77            [ 7]  823 	ld	(hl),a
                            824 ;src/main.c:144: sprite = gladis_quieto_izda;
   050D DD 36 F6r00   [19]  825 	ld	-10 (ix),#<(_gladis_quieto_izda)
   0511 DD 36 F7s00   [19]  826 	ld	-9 (ix),#>(_gladis_quieto_izda)
   0515 18 43         [12]  827 	jr	00115$
   0517                     828 00110$:
                            829 ;src/main.c:145: }else  if(cpct_isKeyPressed(Key_Esc)){
   0517 21 08 04      [10]  830 	ld	hl,#0x0408
   051A CDr00r00      [17]  831 	call	_cpct_isKeyPressed
   051D 7D            [ 4]  832 	ld	a,l
   051E B7            [ 4]  833 	or	a, a
                            834 ;src/main.c:146: return;
   051F C2rB2r05      [10]  835 	jp	NZ,00120$
                            836 ;src/main.c:147: }else if(cpct_isKeyPressed(Key_Space)){
   0522 21 05 80      [10]  837 	ld	hl,#0x8005
   0525 CDr00r00      [17]  838 	call	_cpct_isKeyPressed
   0528 7D            [ 4]  839 	ld	a,l
   0529 B7            [ 4]  840 	or	a, a
   052A 28 2E         [12]  841 	jr	Z,00115$
                            842 ;src/main.c:148: cpct_clearScreen(0);
   052C 21 00 40      [10]  843 	ld	hl,#0x4000
   052F E5            [11]  844 	push	hl
   0530 AF            [ 4]  845 	xor	a, a
   0531 F5            [11]  846 	push	af
   0532 33            [ 6]  847 	inc	sp
   0533 26 C0         [ 7]  848 	ld	h, #0xC0
   0535 E5            [11]  849 	push	hl
   0536 CDr00r00      [17]  850 	call	_cpct_memset
                            851 ;src/main.c:149: if(i ==1 ) {i++;}
   0539 DD 7E F0      [19]  852 	ld	a,-16 (ix)
   053C 3D            [ 4]  853 	dec	a
   053D 20 10         [12]  854 	jr	NZ,00102$
   053F DD 7E F1      [19]  855 	ld	a,-15 (ix)
   0542 B7            [ 4]  856 	or	a, a
   0543 20 0A         [12]  857 	jr	NZ,00102$
   0545 DD 34 F0      [23]  858 	inc	-16 (ix)
   0548 20 09         [12]  859 	jr	NZ,00103$
   054A DD 34 F1      [23]  860 	inc	-15 (ix)
   054D 18 04         [12]  861 	jr	00103$
   054F                     862 00102$:
                            863 ;src/main.c:150: else {i--;}
   054F E1            [10]  864 	pop	hl
   0550 E5            [11]  865 	push	hl
   0551 2B            [ 6]  866 	dec	hl
   0552 E3            [19]  867 	ex	(sp), hl
   0553                     868 00103$:
                            869 ;src/main.c:151: drawMap(i);
   0553 E1            [10]  870 	pop	hl
   0554 E5            [11]  871 	push	hl
   0555 E5            [11]  872 	push	hl
   0556 CDr21r03      [17]  873 	call	_drawMap
   0559 F1            [10]  874 	pop	af
   055A                     875 00115$:
                            876 ;src/main.c:156: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   055A DD 6E FE      [19]  877 	ld	l,-2 (ix)
   055D DD 66 FF      [19]  878 	ld	h,-1 (ix)
   0560 56            [ 7]  879 	ld	d,(hl)
   0561 DD 6E FC      [19]  880 	ld	l,-4 (ix)
   0564 DD 66 FD      [19]  881 	ld	h,-3 (ix)
   0567 46            [ 7]  882 	ld	b,(hl)
   0568 D5            [11]  883 	push	de
   0569 33            [ 6]  884 	inc	sp
   056A C5            [11]  885 	push	bc
   056B 33            [ 6]  886 	inc	sp
   056C 21 00 C0      [10]  887 	ld	hl,#0xC000
   056F E5            [11]  888 	push	hl
   0570 CDr00r00      [17]  889 	call	_cpct_getScreenPtr
   0573 DD 74 FB      [19]  890 	ld	-5 (ix),h
   0576 DD 75 FA      [19]  891 	ld	-6 (ix), l
   0579 DD 75 F4      [19]  892 	ld	-12 (ix), l
   057C DD 7E FB      [19]  893 	ld	a,-5 (ix)
   057F DD 77 F5      [19]  894 	ld	-11 (ix),a
                            895 ;src/main.c:157: cpct_drawSpriteMasked(sprite,memptr,4,16);
   0582 DD 7E F4      [19]  896 	ld	a,-12 (ix)
   0585 DD 77 FA      [19]  897 	ld	-6 (ix),a
   0588 DD 7E F5      [19]  898 	ld	a,-11 (ix)
   058B DD 77 FB      [19]  899 	ld	-5 (ix),a
   058E DD 7E F6      [19]  900 	ld	a,-10 (ix)
   0591 DD 77 F8      [19]  901 	ld	-8 (ix),a
   0594 DD 7E F7      [19]  902 	ld	a,-9 (ix)
   0597 DD 77 F9      [19]  903 	ld	-7 (ix),a
   059A 21 04 10      [10]  904 	ld	hl,#0x1004
   059D E5            [11]  905 	push	hl
   059E DD 6E FA      [19]  906 	ld	l,-6 (ix)
   05A1 DD 66 FB      [19]  907 	ld	h,-5 (ix)
   05A4 E5            [11]  908 	push	hl
   05A5 DD 6E F8      [19]  909 	ld	l,-8 (ix)
   05A8 DD 66 F9      [19]  910 	ld	h,-7 (ix)
   05AB E5            [11]  911 	push	hl
   05AC CDr00r00      [17]  912 	call	_cpct_drawSpriteMasked
   05AF C3r86r04      [10]  913 	jp	00118$
   05B2                     914 00120$:
   05B2 DD F9         [10]  915 	ld	sp, ix
   05B4 DD E1         [14]  916 	pop	ix
   05B6 C9            [10]  917 	ret
                            918 ;src/main.c:168: void loadMap(){
                            919 ;	---------------------------------
                            920 ; Function loadMap
                            921 ; ---------------------------------
   05B7                     922 _loadMap::
                            923 ;src/main.c:170: }
   05B7 C9            [10]  924 	ret
                            925 ;src/main.c:175: void main(void) {
                            926 ;	---------------------------------
                            927 ; Function main
                            928 ; ---------------------------------
   05B8                     929 _main::
                            930 ;src/main.c:177: init();
   05B8 CDr00r00      [17]  931 	call	_init
                            932 ;src/main.c:181: while(1){
   05BB                     933 00102$:
                            934 ;src/main.c:182: menu();
   05BB CDrBBr02      [17]  935 	call	_menu
                            936 ;src/main.c:184: game();
   05BE CDr32r04      [17]  937 	call	_game
   05C1 18 F8         [12]  938 	jr	00102$
                            939 	.area _CODE
                            940 	.area _INITIALIZER
                            941 	.area _CABS (ABS)
