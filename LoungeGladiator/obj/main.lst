                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
<<<<<<< HEAD
                              3 ; Version 3.5.0 #9253 (Sep 26 2015) (CYGWIN)
                              4 ; This file was generated Mon Oct  5 18:09:37 2015
=======
                              3 ; Version 3.5.0 #9253 (Sep 22 2015) (CYGWIN)
                              4 ; This file was generated Mon Oct  5 18:00:45 2015
>>>>>>> 100f2f53c950a4f5642a7437e7ddf52df6d2a2ee
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _game
<<<<<<< HEAD
                             14 	.globl _drawSomething
                             15 	.globl _create_Player
                             16 	.globl _move
                             17 	.globl _checkKeyboard
                             18 	.globl _checkEnemiesCollisions
                             19 	.globl _checkBoundsCollisions
                             20 	.globl _initPlayers
                             21 	.globl _drawPlayers
                             22 	.globl _cleanScreenPlayers
                             23 	.globl _drawMap
                             24 	.globl _menu
                             25 	.globl _init
                             26 	.globl _cpct_getScreenPtr
                             27 	.globl _cpct_setPalette
                             28 	.globl _cpct_fw2hw
                             29 	.globl _cpct_waitVSYNC
                             30 	.globl _cpct_setVideoMode
                             31 	.globl _cpct_drawStringM0
                             32 	.globl _cpct_drawSolidBox
                             33 	.globl _cpct_drawSpriteMasked
                             34 	.globl _cpct_isKeyPressed
                             35 	.globl _cpct_scanKeyboard_f
                             36 	.globl _cpct_memset
                             37 	.globl _cpct_disableFirmware
                             38 	.globl _rand
                             39 	.globl _free
                             40 	.globl _malloc
                             41 	.globl __assert
                             42 	.globl _scene
                             43 	.globl _mapa2
                             44 	.globl _mapa1
                             45 	.globl _g_palette
                             46 ;--------------------------------------------------------
                             47 ; special function registers
                             48 ;--------------------------------------------------------
                             49 ;--------------------------------------------------------
                             50 ; ram data
                             51 ;--------------------------------------------------------
                             52 	.area _DATA
   0000                      53 _scene::
   0000                      54 	.ds 24
                             55 ;--------------------------------------------------------
                             56 ; ram data
                             57 ;--------------------------------------------------------
                             58 	.area _INITIALIZED
                             59 ;--------------------------------------------------------
                             60 ; absolute external ram data
                             61 ;--------------------------------------------------------
                             62 	.area _DABS (ABS)
                             63 ;--------------------------------------------------------
                             64 ; global & static initialisations
                             65 ;--------------------------------------------------------
                             66 	.area _HOME
                             67 	.area _GSINIT
                             68 	.area _GSFINAL
                             69 	.area _GSINIT
                             70 ;--------------------------------------------------------
                             71 ; Home
                             72 ;--------------------------------------------------------
                             73 	.area _HOME
                             74 	.area _HOME
                             75 ;--------------------------------------------------------
                             76 ; code
                             77 ;--------------------------------------------------------
                             78 	.area _CODE
                             79 ;src/main.c:34: void init(){
                             80 ;	---------------------------------
                             81 ; Function init
                             82 ; ---------------------------------
   0000                      83 _init::
                             84 ;src/main.c:35: cpct_disableFirmware();
   0000 CDr00r00      [17]   85 	call	_cpct_disableFirmware
                             86 ;src/main.c:36: cpct_setVideoMode(0);
   0003 AF            [ 4]   87 	xor	a, a
   0004 F5            [11]   88 	push	af
   0005 33            [ 6]   89 	inc	sp
   0006 CDr00r00      [17]   90 	call	_cpct_setVideoMode
   0009 33            [ 6]   91 	inc	sp
                             92 ;src/main.c:37: cpct_fw2hw(g_palette,4);
   000A 11r25r00      [10]   93 	ld	de,#_g_palette
   000D 3E 04         [ 7]   94 	ld	a,#0x04
   000F F5            [11]   95 	push	af
   0010 33            [ 6]   96 	inc	sp
   0011 D5            [11]   97 	push	de
   0012 CDr00r00      [17]   98 	call	_cpct_fw2hw
   0015 F1            [10]   99 	pop	af
   0016 33            [ 6]  100 	inc	sp
                            101 ;src/main.c:38: cpct_setPalette(g_palette,4);
   0017 11r25r00      [10]  102 	ld	de,#_g_palette
   001A 3E 04         [ 7]  103 	ld	a,#0x04
   001C F5            [11]  104 	push	af
   001D 33            [ 6]  105 	inc	sp
   001E D5            [11]  106 	push	de
   001F CDr00r00      [17]  107 	call	_cpct_setPalette
   0022 F1            [10]  108 	pop	af
   0023 33            [ 6]  109 	inc	sp
   0024 C9            [10]  110 	ret
   0025                     111 _g_palette:
   0025 00                  112 	.db #0x00	; 0
   0026 1A                  113 	.db #0x1A	; 26
   0027 06                  114 	.db #0x06	; 6
   0028 12                  115 	.db #0x12	; 18
   0029                     116 _mapa1:
   0029 01 00               117 	.dw #0x0001
   002B 01 00               118 	.dw #0x0001
   002D 01 00               119 	.dw #0x0001
   002F 01 00               120 	.dw #0x0001
   0031 01 00               121 	.dw #0x0001
   0033 01 00               122 	.dw #0x0001
   0035 01 00               123 	.dw #0x0001
   0037 01 00               124 	.dw #0x0001
   0039 01 00               125 	.dw #0x0001
   003B 01 00               126 	.dw #0x0001
   003D 01 00               127 	.dw #0x0001
   003F 01 00               128 	.dw #0x0001
   0041 01 00               129 	.dw #0x0001
   0043 01 00               130 	.dw #0x0001
   0045 01 00               131 	.dw #0x0001
   0047 01 00               132 	.dw #0x0001
   0049 01 00               133 	.dw #0x0001
   004B 01 00               134 	.dw #0x0001
   004D 01 00               135 	.dw #0x0001
   004F 01 00               136 	.dw #0x0001
   0051 01 00               137 	.dw #0x0001
   0053 00 00               138 	.dw #0x0000
   0055 00 00               139 	.dw #0x0000
   0057 00 00               140 	.dw #0x0000
   0059 00 00               141 	.dw #0x0000
   005B 00 00               142 	.dw #0x0000
   005D 00 00               143 	.dw #0x0000
   005F 00 00               144 	.dw #0x0000
   0061 00 00               145 	.dw #0x0000
   0063 00 00               146 	.dw #0x0000
   0065 00 00               147 	.dw #0x0000
   0067 00 00               148 	.dw #0x0000
   0069 00 00               149 	.dw #0x0000
   006B 00 00               150 	.dw #0x0000
   006D 00 00               151 	.dw #0x0000
   006F 00 00               152 	.dw #0x0000
   0071 00 00               153 	.dw #0x0000
   0073 00 00               154 	.dw #0x0000
   0075 00 00               155 	.dw #0x0000
   0077 01 00               156 	.dw #0x0001
   0079 01 00               157 	.dw #0x0001
   007B 00 00               158 	.dw #0x0000
   007D 00 00               159 	.dw #0x0000
   007F 00 00               160 	.dw #0x0000
   0081 00 00               161 	.dw #0x0000
   0083 00 00               162 	.dw #0x0000
   0085 00 00               163 	.dw #0x0000
   0087 00 00               164 	.dw #0x0000
   0089 00 00               165 	.dw #0x0000
   008B 00 00               166 	.dw #0x0000
   008D 00 00               167 	.dw #0x0000
   008F 00 00               168 	.dw #0x0000
   0091 00 00               169 	.dw #0x0000
   0093 00 00               170 	.dw #0x0000
   0095 00 00               171 	.dw #0x0000
   0097 00 00               172 	.dw #0x0000
   0099 00 00               173 	.dw #0x0000
   009B 00 00               174 	.dw #0x0000
   009D 00 00               175 	.dw #0x0000
   009F 01 00               176 	.dw #0x0001
   00A1 01 00               177 	.dw #0x0001
   00A3 01 00               178 	.dw #0x0001
   00A5 01 00               179 	.dw #0x0001
   00A7 01 00               180 	.dw #0x0001
   00A9 01 00               181 	.dw #0x0001
   00AB 01 00               182 	.dw #0x0001
   00AD 01 00               183 	.dw #0x0001
   00AF 01 00               184 	.dw #0x0001
   00B1 01 00               185 	.dw #0x0001
   00B3 01 00               186 	.dw #0x0001
   00B5 01 00               187 	.dw #0x0001
   00B7 01 00               188 	.dw #0x0001
   00B9 01 00               189 	.dw #0x0001
   00BB 01 00               190 	.dw #0x0001
   00BD 01 00               191 	.dw #0x0001
   00BF 00 00               192 	.dw #0x0000
   00C1 01 00               193 	.dw #0x0001
   00C3 01 00               194 	.dw #0x0001
   00C5 01 00               195 	.dw #0x0001
   00C7 01 00               196 	.dw #0x0001
   00C9 01 00               197 	.dw #0x0001
   00CB 00 00               198 	.dw #0x0000
   00CD 00 00               199 	.dw #0x0000
   00CF 00 00               200 	.dw #0x0000
   00D1 00 00               201 	.dw #0x0000
   00D3 00 00               202 	.dw #0x0000
   00D5 00 00               203 	.dw #0x0000
   00D7 00 00               204 	.dw #0x0000
   00D9 00 00               205 	.dw #0x0000
   00DB 00 00               206 	.dw #0x0000
   00DD 00 00               207 	.dw #0x0000
   00DF 01 00               208 	.dw #0x0001
   00E1 00 00               209 	.dw #0x0000
   00E3 00 00               210 	.dw #0x0000
   00E5 00 00               211 	.dw #0x0000
   00E7 00 00               212 	.dw #0x0000
   00E9 00 00               213 	.dw #0x0000
   00EB 00 00               214 	.dw #0x0000
   00ED 00 00               215 	.dw #0x0000
   00EF 01 00               216 	.dw #0x0001
   00F1 00 00               217 	.dw #0x0000
   00F3 00 00               218 	.dw #0x0000
   00F5 01 00               219 	.dw #0x0001
   00F7 01 00               220 	.dw #0x0001
   00F9 00 00               221 	.dw #0x0000
   00FB 01 00               222 	.dw #0x0001
   00FD 01 00               223 	.dw #0x0001
   00FF 01 00               224 	.dw #0x0001
   0101 02 00               225 	.dw #0x0002
   0103 02 00               226 	.dw #0x0002
   0105 02 00               227 	.dw #0x0002
   0107 01 00               228 	.dw #0x0001
   0109 00 00               229 	.dw #0x0000
   010B 00 00               230 	.dw #0x0000
   010D 00 00               231 	.dw #0x0000
   010F 00 00               232 	.dw #0x0000
   0111 00 00               233 	.dw #0x0000
   0113 00 00               234 	.dw #0x0000
   0115 00 00               235 	.dw #0x0000
   0117 01 00               236 	.dw #0x0001
   0119 01 00               237 	.dw #0x0001
   011B 00 00               238 	.dw #0x0000
   011D 01 00               239 	.dw #0x0001
   011F 02 00               240 	.dw #0x0002
   0121 02 00               241 	.dw #0x0002
   0123 02 00               242 	.dw #0x0002
   0125 02 00               243 	.dw #0x0002
   0127 01 00               244 	.dw #0x0001
   0129 00 00               245 	.dw #0x0000
   012B 00 00               246 	.dw #0x0000
   012D 00 00               247 	.dw #0x0000
   012F 01 00               248 	.dw #0x0001
   0131 00 00               249 	.dw #0x0000
   0133 00 00               250 	.dw #0x0000
   0135 00 00               251 	.dw #0x0000
   0137 00 00               252 	.dw #0x0000
   0139 00 00               253 	.dw #0x0000
   013B 00 00               254 	.dw #0x0000
   013D 00 00               255 	.dw #0x0000
   013F 01 00               256 	.dw #0x0001
   0141 01 00               257 	.dw #0x0001
   0143 00 00               258 	.dw #0x0000
   0145 01 00               259 	.dw #0x0001
   0147 02 00               260 	.dw #0x0002
   0149 02 00               261 	.dw #0x0002
   014B 02 00               262 	.dw #0x0002
   014D 02 00               263 	.dw #0x0002
   014F 01 00               264 	.dw #0x0001
   0151 02 00               265 	.dw #0x0002
   0153 02 00               266 	.dw #0x0002
   0155 02 00               267 	.dw #0x0002
   0157 01 00               268 	.dw #0x0001
   0159 00 00               269 	.dw #0x0000
   015B 00 00               270 	.dw #0x0000
   015D 00 00               271 	.dw #0x0000
   015F 00 00               272 	.dw #0x0000
   0161 00 00               273 	.dw #0x0000
   0163 00 00               274 	.dw #0x0000
   0165 00 00               275 	.dw #0x0000
   0167 01 00               276 	.dw #0x0001
   0169 01 00               277 	.dw #0x0001
   016B 00 00               278 	.dw #0x0000
   016D 01 00               279 	.dw #0x0001
   016F 02 00               280 	.dw #0x0002
   0171 02 00               281 	.dw #0x0002
   0173 02 00               282 	.dw #0x0002
   0175 02 00               283 	.dw #0x0002
   0177 01 00               284 	.dw #0x0001
   0179 00 00               285 	.dw #0x0000
   017B 00 00               286 	.dw #0x0000
   017D 00 00               287 	.dw #0x0000
   017F 01 00               288 	.dw #0x0001
   0181 00 00               289 	.dw #0x0000
   0183 00 00               290 	.dw #0x0000
   0185 00 00               291 	.dw #0x0000
   0187 00 00               292 	.dw #0x0000
   0189 00 00               293 	.dw #0x0000
   018B 00 00               294 	.dw #0x0000
   018D 00 00               295 	.dw #0x0000
   018F 01 00               296 	.dw #0x0001
   0191 01 00               297 	.dw #0x0001
   0193 00 00               298 	.dw #0x0000
   0195 01 00               299 	.dw #0x0001
   0197 02 00               300 	.dw #0x0002
   0199 02 00               301 	.dw #0x0002
   019B 02 00               302 	.dw #0x0002
   019D 02 00               303 	.dw #0x0002
   019F 01 00               304 	.dw #0x0001
   01A1 02 00               305 	.dw #0x0002
   01A3 02 00               306 	.dw #0x0002
   01A5 02 00               307 	.dw #0x0002
   01A7 01 00               308 	.dw #0x0001
   01A9 00 00               309 	.dw #0x0000
   01AB 00 00               310 	.dw #0x0000
   01AD 00 00               311 	.dw #0x0000
   01AF 00 00               312 	.dw #0x0000
   01B1 00 00               313 	.dw #0x0000
   01B3 00 00               314 	.dw #0x0000
   01B5 00 00               315 	.dw #0x0000
   01B7 01 00               316 	.dw #0x0001
   01B9 01 00               317 	.dw #0x0001
   01BB 05 00               318 	.dw #0x0005
   01BD 01 00               319 	.dw #0x0001
   01BF 02 00               320 	.dw #0x0002
   01C1 02 00               321 	.dw #0x0002
   01C3 02 00               322 	.dw #0x0002
   01C5 02 00               323 	.dw #0x0002
   01C7 01 00               324 	.dw #0x0001
   01C9 00 00               325 	.dw #0x0000
   01CB 00 00               326 	.dw #0x0000
   01CD 00 00               327 	.dw #0x0000
   01CF 00 00               328 	.dw #0x0000
   01D1 00 00               329 	.dw #0x0000
   01D3 00 00               330 	.dw #0x0000
   01D5 00 00               331 	.dw #0x0000
   01D7 00 00               332 	.dw #0x0000
   01D9 00 00               333 	.dw #0x0000
   01DB 00 00               334 	.dw #0x0000
   01DD 00 00               335 	.dw #0x0000
   01DF 01 00               336 	.dw #0x0001
   01E1 01 00               337 	.dw #0x0001
   01E3 01 00               338 	.dw #0x0001
   01E5 01 00               339 	.dw #0x0001
   01E7 01 00               340 	.dw #0x0001
   01E9 01 00               341 	.dw #0x0001
   01EB 01 00               342 	.dw #0x0001
   01ED 01 00               343 	.dw #0x0001
   01EF 01 00               344 	.dw #0x0001
   01F1 01 00               345 	.dw #0x0001
   01F3 01 00               346 	.dw #0x0001
   01F5 01 00               347 	.dw #0x0001
   01F7 01 00               348 	.dw #0x0001
   01F9 01 00               349 	.dw #0x0001
   01FB 01 00               350 	.dw #0x0001
   01FD 01 00               351 	.dw #0x0001
   01FF 06 00               352 	.dw #0x0006
   0201 01 00               353 	.dw #0x0001
   0203 01 00               354 	.dw #0x0001
   0205 01 00               355 	.dw #0x0001
   0207 01 00               356 	.dw #0x0001
   0209                     357 _mapa2:
   0209 01 00               358 	.dw #0x0001
   020B 01 00               359 	.dw #0x0001
   020D 01 00               360 	.dw #0x0001
   020F 01 00               361 	.dw #0x0001
   0211 01 00               362 	.dw #0x0001
   0213 01 00               363 	.dw #0x0001
   0215 01 00               364 	.dw #0x0001
   0217 01 00               365 	.dw #0x0001
   0219 01 00               366 	.dw #0x0001
   021B 01 00               367 	.dw #0x0001
   021D 01 00               368 	.dw #0x0001
   021F 01 00               369 	.dw #0x0001
   0221 01 00               370 	.dw #0x0001
   0223 01 00               371 	.dw #0x0001
   0225 01 00               372 	.dw #0x0001
   0227 01 00               373 	.dw #0x0001
   0229 01 00               374 	.dw #0x0001
   022B 01 00               375 	.dw #0x0001
   022D 01 00               376 	.dw #0x0001
   022F 01 00               377 	.dw #0x0001
   0231 01 00               378 	.dw #0x0001
   0233 00 00               379 	.dw #0x0000
   0235 00 00               380 	.dw #0x0000
   0237 00 00               381 	.dw #0x0000
   0239 00 00               382 	.dw #0x0000
   023B 01 00               383 	.dw #0x0001
   023D 00 00               384 	.dw #0x0000
   023F 00 00               385 	.dw #0x0000
   0241 00 00               386 	.dw #0x0000
   0243 00 00               387 	.dw #0x0000
   0245 00 00               388 	.dw #0x0000
   0247 00 00               389 	.dw #0x0000
   0249 00 00               390 	.dw #0x0000
   024B 00 00               391 	.dw #0x0000
   024D 00 00               392 	.dw #0x0000
   024F 00 00               393 	.dw #0x0000
   0251 00 00               394 	.dw #0x0000
   0253 00 00               395 	.dw #0x0000
   0255 00 00               396 	.dw #0x0000
   0257 06 00               397 	.dw #0x0006
   0259 01 00               398 	.dw #0x0001
   025B 00 00               399 	.dw #0x0000
   025D 00 00               400 	.dw #0x0000
   025F 01 00               401 	.dw #0x0001
   0261 00 00               402 	.dw #0x0000
   0263 00 00               403 	.dw #0x0000
   0265 00 00               404 	.dw #0x0000
   0267 00 00               405 	.dw #0x0000
   0269 00 00               406 	.dw #0x0000
   026B 00 00               407 	.dw #0x0000
   026D 00 00               408 	.dw #0x0000
   026F 00 00               409 	.dw #0x0000
   0271 00 00               410 	.dw #0x0000
   0273 00 00               411 	.dw #0x0000
   0275 00 00               412 	.dw #0x0000
   0277 00 00               413 	.dw #0x0000
   0279 00 00               414 	.dw #0x0000
   027B 00 00               415 	.dw #0x0000
   027D 00 00               416 	.dw #0x0000
   027F 01 00               417 	.dw #0x0001
   0281 01 00               418 	.dw #0x0001
   0283 00 00               419 	.dw #0x0000
   0285 01 00               420 	.dw #0x0001
   0287 01 00               421 	.dw #0x0001
   0289 01 00               422 	.dw #0x0001
   028B 01 00               423 	.dw #0x0001
   028D 00 00               424 	.dw #0x0000
   028F 00 00               425 	.dw #0x0000
   0291 01 00               426 	.dw #0x0001
   0293 01 00               427 	.dw #0x0001
   0295 01 00               428 	.dw #0x0001
   0297 01 00               429 	.dw #0x0001
   0299 01 00               430 	.dw #0x0001
   029B 01 00               431 	.dw #0x0001
   029D 01 00               432 	.dw #0x0001
   029F 01 00               433 	.dw #0x0001
   02A1 01 00               434 	.dw #0x0001
   02A3 01 00               435 	.dw #0x0001
   02A5 01 00               436 	.dw #0x0001
   02A7 01 00               437 	.dw #0x0001
   02A9 01 00               438 	.dw #0x0001
   02AB 00 00               439 	.dw #0x0000
   02AD 05 00               440 	.dw #0x0005
   02AF 01 00               441 	.dw #0x0001
   02B1 00 00               442 	.dw #0x0000
   02B3 00 00               443 	.dw #0x0000
   02B5 00 00               444 	.dw #0x0000
   02B7 00 00               445 	.dw #0x0000
   02B9 00 00               446 	.dw #0x0000
   02BB 00 00               447 	.dw #0x0000
   02BD 00 00               448 	.dw #0x0000
   02BF 01 00               449 	.dw #0x0001
   02C1 00 00               450 	.dw #0x0000
   02C3 00 00               451 	.dw #0x0000
   02C5 00 00               452 	.dw #0x0000
   02C7 00 00               453 	.dw #0x0000
   02C9 00 00               454 	.dw #0x0000
   02CB 00 00               455 	.dw #0x0000
   02CD 00 00               456 	.dw #0x0000
   02CF 01 00               457 	.dw #0x0001
   02D1 00 00               458 	.dw #0x0000
   02D3 00 00               459 	.dw #0x0000
   02D5 01 00               460 	.dw #0x0001
   02D7 01 00               461 	.dw #0x0001
   02D9 00 00               462 	.dw #0x0000
   02DB 01 00               463 	.dw #0x0001
   02DD 01 00               464 	.dw #0x0001
   02DF 01 00               465 	.dw #0x0001
   02E1 02 00               466 	.dw #0x0002
   02E3 02 00               467 	.dw #0x0002
   02E5 02 00               468 	.dw #0x0002
   02E7 01 00               469 	.dw #0x0001
   02E9 00 00               470 	.dw #0x0000
   02EB 00 00               471 	.dw #0x0000
   02ED 00 00               472 	.dw #0x0000
   02EF 05 00               473 	.dw #0x0005
   02F1 00 00               474 	.dw #0x0000
   02F3 00 00               475 	.dw #0x0000
   02F5 00 00               476 	.dw #0x0000
   02F7 01 00               477 	.dw #0x0001
   02F9 01 00               478 	.dw #0x0001
   02FB 00 00               479 	.dw #0x0000
   02FD 01 00               480 	.dw #0x0001
   02FF 02 00               481 	.dw #0x0002
   0301 02 00               482 	.dw #0x0002
   0303 02 00               483 	.dw #0x0002
   0305 02 00               484 	.dw #0x0002
   0307 01 00               485 	.dw #0x0001
   0309 00 00               486 	.dw #0x0000
   030B 00 00               487 	.dw #0x0000
   030D 00 00               488 	.dw #0x0000
   030F 01 00               489 	.dw #0x0001
   0311 00 00               490 	.dw #0x0000
   0313 00 00               491 	.dw #0x0000
   0315 00 00               492 	.dw #0x0000
   0317 05 00               493 	.dw #0x0005
   0319 00 00               494 	.dw #0x0000
   031B 00 00               495 	.dw #0x0000
   031D 00 00               496 	.dw #0x0000
   031F 01 00               497 	.dw #0x0001
   0321 01 00               498 	.dw #0x0001
   0323 00 00               499 	.dw #0x0000
   0325 01 00               500 	.dw #0x0001
   0327 02 00               501 	.dw #0x0002
   0329 02 00               502 	.dw #0x0002
   032B 02 00               503 	.dw #0x0002
   032D 02 00               504 	.dw #0x0002
   032F 01 00               505 	.dw #0x0001
   0331 02 00               506 	.dw #0x0002
   0333 02 00               507 	.dw #0x0002
   0335 02 00               508 	.dw #0x0002
   0337 01 00               509 	.dw #0x0001
   0339 00 00               510 	.dw #0x0000
   033B 00 00               511 	.dw #0x0000
   033D 00 00               512 	.dw #0x0000
   033F 05 00               513 	.dw #0x0005
   0341 00 00               514 	.dw #0x0000
   0343 00 00               515 	.dw #0x0000
   0345 00 00               516 	.dw #0x0000
   0347 01 00               517 	.dw #0x0001
   0349 01 00               518 	.dw #0x0001
   034B 00 00               519 	.dw #0x0000
   034D 01 00               520 	.dw #0x0001
   034F 02 00               521 	.dw #0x0002
   0351 02 00               522 	.dw #0x0002
   0353 02 00               523 	.dw #0x0002
   0355 02 00               524 	.dw #0x0002
   0357 01 00               525 	.dw #0x0001
   0359 00 00               526 	.dw #0x0000
   035B 00 00               527 	.dw #0x0000
   035D 00 00               528 	.dw #0x0000
   035F 01 00               529 	.dw #0x0001
   0361 00 00               530 	.dw #0x0000
   0363 00 00               531 	.dw #0x0000
   0365 00 00               532 	.dw #0x0000
   0367 00 00               533 	.dw #0x0000
   0369 00 00               534 	.dw #0x0000
   036B 00 00               535 	.dw #0x0000
   036D 00 00               536 	.dw #0x0000
   036F 01 00               537 	.dw #0x0001
   0371 01 00               538 	.dw #0x0001
   0373 00 00               539 	.dw #0x0000
   0375 01 00               540 	.dw #0x0001
   0377 02 00               541 	.dw #0x0002
   0379 02 00               542 	.dw #0x0002
   037B 02 00               543 	.dw #0x0002
   037D 02 00               544 	.dw #0x0002
   037F 01 00               545 	.dw #0x0001
   0381 02 00               546 	.dw #0x0002
   0383 02 00               547 	.dw #0x0002
   0385 02 00               548 	.dw #0x0002
   0387 01 00               549 	.dw #0x0001
   0389 00 00               550 	.dw #0x0000
   038B 00 00               551 	.dw #0x0000
   038D 00 00               552 	.dw #0x0000
   038F 00 00               553 	.dw #0x0000
   0391 00 00               554 	.dw #0x0000
   0393 00 00               555 	.dw #0x0000
   0395 00 00               556 	.dw #0x0000
   0397 01 00               557 	.dw #0x0001
   0399 01 00               558 	.dw #0x0001
   039B 05 00               559 	.dw #0x0005
   039D 01 00               560 	.dw #0x0001
   039F 02 00               561 	.dw #0x0002
   03A1 02 00               562 	.dw #0x0002
   03A3 02 00               563 	.dw #0x0002
   03A5 02 00               564 	.dw #0x0002
   03A7 01 00               565 	.dw #0x0001
   03A9 00 00               566 	.dw #0x0000
   03AB 00 00               567 	.dw #0x0000
   03AD 00 00               568 	.dw #0x0000
   03AF 00 00               569 	.dw #0x0000
   03B1 00 00               570 	.dw #0x0000
   03B3 00 00               571 	.dw #0x0000
   03B5 00 00               572 	.dw #0x0000
   03B7 00 00               573 	.dw #0x0000
   03B9 00 00               574 	.dw #0x0000
   03BB 00 00               575 	.dw #0x0000
   03BD 00 00               576 	.dw #0x0000
   03BF 01 00               577 	.dw #0x0001
   03C1 01 00               578 	.dw #0x0001
   03C3 01 00               579 	.dw #0x0001
   03C5 01 00               580 	.dw #0x0001
   03C7 01 00               581 	.dw #0x0001
   03C9 01 00               582 	.dw #0x0001
   03CB 01 00               583 	.dw #0x0001
   03CD 01 00               584 	.dw #0x0001
   03CF 01 00               585 	.dw #0x0001
   03D1 01 00               586 	.dw #0x0001
   03D3 01 00               587 	.dw #0x0001
   03D5 01 00               588 	.dw #0x0001
   03D7 01 00               589 	.dw #0x0001
   03D9 01 00               590 	.dw #0x0001
   03DB 01 00               591 	.dw #0x0001
   03DD 01 00               592 	.dw #0x0001
   03DF 01 00               593 	.dw #0x0001
   03E1 01 00               594 	.dw #0x0001
   03E3 01 00               595 	.dw #0x0001
   03E5 01 00               596 	.dw #0x0001
   03E7 01 00               597 	.dw #0x0001
                            598 ;src/main.c:42: void menu(){
                            599 ;	---------------------------------
                            600 ; Function menu
                            601 ; ---------------------------------
   03E9                     602 _menu::
                            603 ;src/main.c:44: cpct_clearScreen(0);
   03E9 21 00 40      [10]  604 	ld	hl,#0x4000
   03EC E5            [11]  605 	push	hl
   03ED AF            [ 4]  606 	xor	a, a
   03EE F5            [11]  607 	push	af
   03EF 33            [ 6]  608 	inc	sp
   03F0 26 C0         [ 7]  609 	ld	h, #0xC0
   03F2 E5            [11]  610 	push	hl
   03F3 CDr00r00      [17]  611 	call	_cpct_memset
                            612 ;src/main.c:46: memptr = cpct_getScreenPtr(VMEM,20,10);
   03F6 21 14 0A      [10]  613 	ld	hl,#0x0A14
   03F9 E5            [11]  614 	push	hl
   03FA 21 00 C0      [10]  615 	ld	hl,#0xC000
   03FD E5            [11]  616 	push	hl
   03FE CDr00r00      [17]  617 	call	_cpct_getScreenPtr
                            618 ;src/main.c:47: cpct_drawStringM0("MENU",memptr,2,3);
   0401 EB            [ 4]  619 	ex	de,hl
   0402 01r3Er04      [10]  620 	ld	bc,#___str_0+0
   0405 21 02 03      [10]  621 	ld	hl,#0x0302
   0408 E5            [11]  622 	push	hl
   0409 D5            [11]  623 	push	de
   040A C5            [11]  624 	push	bc
   040B CDr00r00      [17]  625 	call	_cpct_drawStringM0
   040E 21 06 00      [10]  626 	ld	hl,#6
   0411 39            [11]  627 	add	hl,sp
   0412 F9            [ 6]  628 	ld	sp,hl
                            629 ;src/main.c:49: memptr = cpct_getScreenPtr(VMEM,18,180);
   0413 21 12 B4      [10]  630 	ld	hl,#0xB412
   0416 E5            [11]  631 	push	hl
   0417 21 00 C0      [10]  632 	ld	hl,#0xC000
   041A E5            [11]  633 	push	hl
   041B CDr00r00      [17]  634 	call	_cpct_getScreenPtr
                            635 ;src/main.c:50: cpct_drawStringM0("Pulsa Intro",memptr,4,5);
   041E EB            [ 4]  636 	ex	de,hl
   041F 01r43r04      [10]  637 	ld	bc,#___str_1+0
   0422 21 04 05      [10]  638 	ld	hl,#0x0504
   0425 E5            [11]  639 	push	hl
   0426 D5            [11]  640 	push	de
   0427 C5            [11]  641 	push	bc
   0428 CDr00r00      [17]  642 	call	_cpct_drawStringM0
   042B 21 06 00      [10]  643 	ld	hl,#6
   042E 39            [11]  644 	add	hl,sp
   042F F9            [ 6]  645 	ld	sp,hl
                            646 ;src/main.c:52: do{
   0430                     647 00101$:
                            648 ;src/main.c:53: cpct_scanKeyboard_f();
   0430 CDr00r00      [17]  649 	call	_cpct_scanKeyboard_f
                            650 ;src/main.c:54: }while(!cpct_isKeyPressed(Key_Enter));
   0433 21 00 40      [10]  651 	ld	hl,#0x4000
   0436 CDr00r00      [17]  652 	call	_cpct_isKeyPressed
   0439 7D            [ 4]  653 	ld	a,l
   043A B7            [ 4]  654 	or	a, a
   043B 28 F3         [12]  655 	jr	Z,00101$
   043D C9            [10]  656 	ret
   043E                     657 ___str_0:
   043E 4D 45 4E 55         658 	.ascii "MENU"
   0442 00                  659 	.db 0x00
   0443                     660 ___str_1:
   0443 50 75 6C 73 61 20   661 	.ascii "Pulsa Intro"
        49 6E 74 72 6F
   044E 00                  662 	.db 0x00
                            663 ;src/main.c:60: void drawMap(int t){
                            664 ;	---------------------------------
                            665 ; Function drawMap
                            666 ; ---------------------------------
   044F                     667 _drawMap::
   044F DD E5         [15]  668 	push	ix
   0451 DD 21 00 00   [14]  669 	ld	ix,#0
   0455 DD 39         [15]  670 	add	ix,sp
   0457 21 F2 FF      [10]  671 	ld	hl,#-14
   045A 39            [11]  672 	add	hl,sp
   045B F9            [ 6]  673 	ld	sp,hl
                            674 ;src/main.c:64: if(t == 1){ 
   045C DD 7E 04      [19]  675 	ld	a,4 (ix)
   045F 3D            [ 4]  676 	dec	a
   0460 20 43         [12]  677 	jr	NZ,00103$
   0462 DD 7E 05      [19]  678 	ld	a,5 (ix)
   0465 B7            [ 4]  679 	or	a, a
   0466 20 3D         [12]  680 	jr	NZ,00103$
                            681 ;src/main.c:65: for(x=0;x<height;x++){
   0468 11 00 00      [10]  682 	ld	de,#0x0000
   046B 01 00 00      [10]  683 	ld	bc,#0x0000
   046E                     684 00115$:
                            685 ;src/main.c:66: scene[x] = mapa1[x];
   046E 6B            [ 4]  686 	ld	l, e
   046F 62            [ 4]  687 	ld	h, d
   0470 29            [11]  688 	add	hl, hl
   0471 3Er00         [ 7]  689 	ld	a,#<(_scene)
   0473 85            [ 4]  690 	add	a, l
   0474 6F            [ 4]  691 	ld	l,a
   0475 3Es00         [ 7]  692 	ld	a,#>(_scene)
   0477 8C            [ 4]  693 	adc	a, h
   0478 67            [ 4]  694 	ld	h,a
   0479 FD 21r29r00   [14]  695 	ld	iy,#_mapa1
   047D FD 09         [15]  696 	add	iy, bc
   047F FD E5         [15]  697 	push	iy
   0481 F1            [10]  698 	pop	af
   0482 DD 77 FD      [19]  699 	ld	-3 (ix),a
   0485 FD E5         [15]  700 	push	iy
   0487 3B            [ 6]  701 	dec	sp
   0488 F1            [10]  702 	pop	af
   0489 33            [ 6]  703 	inc	sp
   048A DD 77 FC      [19]  704 	ld	-4 (ix), a
   048D 77            [ 7]  705 	ld	(hl),a
   048E 23            [ 6]  706 	inc	hl
   048F DD 7E FD      [19]  707 	ld	a,-3 (ix)
   0492 77            [ 7]  708 	ld	(hl),a
                            709 ;src/main.c:65: for(x=0;x<height;x++){
   0493 21 28 00      [10]  710 	ld	hl,#0x0028
   0496 09            [11]  711 	add	hl,bc
   0497 4D            [ 4]  712 	ld	c,l
   0498 44            [ 4]  713 	ld	b,h
   0499 13            [ 6]  714 	inc	de
   049A 7B            [ 4]  715 	ld	a,e
   049B D6 0C         [ 7]  716 	sub	a, #0x0C
   049D 7A            [ 4]  717 	ld	a,d
   049E 17            [ 4]  718 	rla
   049F 3F            [ 4]  719 	ccf
   04A0 1F            [ 4]  720 	rra
   04A1 DE 80         [ 7]  721 	sbc	a, #0x80
   04A3 38 C9         [12]  722 	jr	C,00115$
   04A5                     723 00103$:
                            724 ;src/main.c:70: if(t == 2){ 
   04A5 DD 7E 04      [19]  725 	ld	a,4 (ix)
   04A8 D6 02         [ 7]  726 	sub	a, #0x02
   04AA 20 34         [12]  727 	jr	NZ,00134$
   04AC DD 7E 05      [19]  728 	ld	a,5 (ix)
   04AF B7            [ 4]  729 	or	a, a
   04B0 20 2E         [12]  730 	jr	NZ,00134$
                            731 ;src/main.c:71: for(x=0;x<height;x++){
   04B2 01 00 00      [10]  732 	ld	bc,#0x0000
   04B5 11 00 00      [10]  733 	ld	de,#0x0000
   04B8                     734 00117$:
                            735 ;src/main.c:72: scene[x] = mapa2[x];
   04B8 69            [ 4]  736 	ld	l, c
   04B9 60            [ 4]  737 	ld	h, b
   04BA 29            [11]  738 	add	hl, hl
   04BB FD 21r00r00   [14]  739 	ld	iy,#_scene
   04BF C5            [11]  740 	push	bc
   04C0 4D            [ 4]  741 	ld	c, l
   04C1 44            [ 4]  742 	ld	b, h
   04C2 FD 09         [15]  743 	add	iy, bc
   04C4 C1            [10]  744 	pop	bc
   04C5 21r09r02      [10]  745 	ld	hl,#_mapa2
   04C8 19            [11]  746 	add	hl,de
   04C9 FD 75 00      [19]  747 	ld	0 (iy),l
   04CC FD 74 01      [19]  748 	ld	1 (iy),h
                            749 ;src/main.c:71: for(x=0;x<height;x++){
   04CF 21 28 00      [10]  750 	ld	hl,#0x0028
   04D2 19            [11]  751 	add	hl,de
   04D3 EB            [ 4]  752 	ex	de,hl
   04D4 03            [ 6]  753 	inc	bc
   04D5 79            [ 4]  754 	ld	a,c
   04D6 D6 0C         [ 7]  755 	sub	a, #0x0C
   04D8 78            [ 4]  756 	ld	a,b
   04D9 17            [ 4]  757 	rla
   04DA 3F            [ 4]  758 	ccf
   04DB 1F            [ 4]  759 	rra
   04DC DE 80         [ 7]  760 	sbc	a, #0x80
   04DE 38 D8         [12]  761 	jr	C,00117$
                            762 ;src/main.c:76: for(posY=0; posY<height;posY++){
   04E0                     763 00134$:
   04E0 DD 36 F4 00   [19]  764 	ld	-12 (ix),#0x00
   04E4 DD 36 F5 00   [19]  765 	ld	-11 (ix),#0x00
                            766 ;src/main.c:77: for(posX=0; posX<width;posX++){
   04E8                     767 00132$:
   04E8 C1            [10]  768 	pop	bc
   04E9 E1            [10]  769 	pop	hl
   04EA E5            [11]  770 	push	hl
   04EB C5            [11]  771 	push	bc
   04EC 29            [11]  772 	add	hl, hl
   04ED DD 75 FC      [19]  773 	ld	-4 (ix),l
   04F0 DD 74 FD      [19]  774 	ld	-3 (ix),h
   04F3 3Er00         [ 7]  775 	ld	a,#<(_scene)
   04F5 85            [ 4]  776 	add	a, l
   04F6 DD 77 F8      [19]  777 	ld	-8 (ix),a
   04F9 3Es00         [ 7]  778 	ld	a,#>(_scene)
   04FB 8C            [ 4]  779 	adc	a, h
   04FC DD 77 F9      [19]  780 	ld	-7 (ix),a
   04FF DD 7E F8      [19]  781 	ld	a,-8 (ix)
   0502 DD 77 FE      [19]  782 	ld	-2 (ix),a
   0505 DD 7E F9      [19]  783 	ld	a,-7 (ix)
   0508 DD 77 FF      [19]  784 	ld	-1 (ix),a
   050B 21 00 00      [10]  785 	ld	hl,#0x0000
   050E E3            [19]  786 	ex	(sp), hl
   050F                     787 00119$:
                            788 ;src/main.c:78: memptr = cpct_getScreenPtr(VMEM, posX*tilewidth, posY*tileheight); 
   050F DD 7E F4      [19]  789 	ld	a,-12 (ix)
   0512 07            [ 4]  790 	rlca
   0513 07            [ 4]  791 	rlca
   0514 07            [ 4]  792 	rlca
   0515 07            [ 4]  793 	rlca
   0516 E6 F0         [ 7]  794 	and	a,#0xF0
   0518 67            [ 4]  795 	ld	h,a
   0519 DD 7E F2      [19]  796 	ld	a,-14 (ix)
   051C 87            [ 4]  797 	add	a, a
   051D 87            [ 4]  798 	add	a, a
   051E E5            [11]  799 	push	hl
   051F 33            [ 6]  800 	inc	sp
   0520 F5            [11]  801 	push	af
   0521 33            [ 6]  802 	inc	sp
   0522 21 00 C0      [10]  803 	ld	hl,#0xC000
   0525 E5            [11]  804 	push	hl
   0526 CDr00r00      [17]  805 	call	_cpct_getScreenPtr
   0529 4D            [ 4]  806 	ld	c, l
   052A 44            [ 4]  807 	ld	b, h
                            808 ;src/main.c:79: if(scene[posY][posX] == 1){
   052B DD 6E FE      [19]  809 	ld	l,-2 (ix)
   052E DD 66 FF      [19]  810 	ld	h,-1 (ix)
   0531 5E            [ 7]  811 	ld	e,(hl)
   0532 23            [ 6]  812 	inc	hl
   0533 56            [ 7]  813 	ld	d,(hl)
   0534 DD 7E F2      [19]  814 	ld	a,-14 (ix)
   0537 DD 77 FA      [19]  815 	ld	-6 (ix),a
   053A DD 7E F3      [19]  816 	ld	a,-13 (ix)
   053D DD 77 FB      [19]  817 	ld	-5 (ix),a
   0540 DD CB FA 26   [23]  818 	sla	-6 (ix)
   0544 DD CB FB 16   [23]  819 	rl	-5 (ix)
   0548 DD 6E FA      [19]  820 	ld	l,-6 (ix)
   054B DD 66 FB      [19]  821 	ld	h,-5 (ix)
   054E 19            [11]  822 	add	hl,de
   054F 56            [ 7]  823 	ld	d,(hl)
   0550 23            [ 6]  824 	inc	hl
   0551 66            [ 7]  825 	ld	h,(hl)
                            826 ;src/main.c:80: cpct_drawSolidBox(memptr, 3, tilewidth, tileheight);
   0552 DD 71 F6      [19]  827 	ld	-10 (ix),c
   0555 DD 70 F7      [19]  828 	ld	-9 (ix),b
                            829 ;src/main.c:79: if(scene[posY][posX] == 1){
   0558 15            [ 4]  830 	dec	d
   0559 20 19         [12]  831 	jr	NZ,00108$
   055B 7C            [ 4]  832 	ld	a,h
   055C B7            [ 4]  833 	or	a, a
   055D 20 15         [12]  834 	jr	NZ,00108$
                            835 ;src/main.c:80: cpct_drawSolidBox(memptr, 3, tilewidth, tileheight);
   055F 21 04 10      [10]  836 	ld	hl,#0x1004
   0562 E5            [11]  837 	push	hl
   0563 3E 03         [ 7]  838 	ld	a,#0x03
   0565 F5            [11]  839 	push	af
   0566 33            [ 6]  840 	inc	sp
   0567 DD 6E F6      [19]  841 	ld	l,-10 (ix)
   056A DD 66 F7      [19]  842 	ld	h,-9 (ix)
   056D E5            [11]  843 	push	hl
   056E CDr00r00      [17]  844 	call	_cpct_drawSolidBox
   0571 F1            [10]  845 	pop	af
   0572 F1            [10]  846 	pop	af
   0573 33            [ 6]  847 	inc	sp
   0574                     848 00108$:
                            849 ;src/main.c:82: if(scene[posY][posX] == 5){
   0574 DD 6E F8      [19]  850 	ld	l,-8 (ix)
   0577 DD 66 F9      [19]  851 	ld	h,-7 (ix)
   057A 5E            [ 7]  852 	ld	e,(hl)
   057B 23            [ 6]  853 	inc	hl
   057C 56            [ 7]  854 	ld	d,(hl)
   057D DD 6E FA      [19]  855 	ld	l,-6 (ix)
   0580 DD 66 FB      [19]  856 	ld	h,-5 (ix)
   0583 19            [11]  857 	add	hl,de
   0584 56            [ 7]  858 	ld	d,(hl)
   0585 23            [ 6]  859 	inc	hl
   0586 66            [ 7]  860 	ld	h,(hl)
   0587 7A            [ 4]  861 	ld	a,d
   0588 D6 05         [ 7]  862 	sub	a,#0x05
   058A 20 18         [12]  863 	jr	NZ,00110$
   058C B4            [ 4]  864 	or	a,h
   058D 20 15         [12]  865 	jr	NZ,00110$
                            866 ;src/main.c:83: cpct_drawSolidBox(memptr, 5, tilewidth, tileheight);
   058F 21 04 10      [10]  867 	ld	hl,#0x1004
   0592 E5            [11]  868 	push	hl
   0593 3E 05         [ 7]  869 	ld	a,#0x05
   0595 F5            [11]  870 	push	af
   0596 33            [ 6]  871 	inc	sp
   0597 DD 6E F6      [19]  872 	ld	l,-10 (ix)
   059A DD 66 F7      [19]  873 	ld	h,-9 (ix)
   059D E5            [11]  874 	push	hl
   059E CDr00r00      [17]  875 	call	_cpct_drawSolidBox
   05A1 F1            [10]  876 	pop	af
   05A2 F1            [10]  877 	pop	af
   05A3 33            [ 6]  878 	inc	sp
   05A4                     879 00110$:
                            880 ;src/main.c:85: if(scene[posY][posX] == 6){
   05A4 3Er00         [ 7]  881 	ld	a,#<(_scene)
   05A6 DD 86 FC      [19]  882 	add	a, -4 (ix)
   05A9 6F            [ 4]  883 	ld	l,a
   05AA 3Es00         [ 7]  884 	ld	a,#>(_scene)
   05AC DD 8E FD      [19]  885 	adc	a, -3 (ix)
   05AF 67            [ 4]  886 	ld	h,a
   05B0 5E            [ 7]  887 	ld	e,(hl)
   05B1 23            [ 6]  888 	inc	hl
   05B2 56            [ 7]  889 	ld	d,(hl)
   05B3 DD 6E FA      [19]  890 	ld	l,-6 (ix)
   05B6 DD 66 FB      [19]  891 	ld	h,-5 (ix)
   05B9 19            [11]  892 	add	hl,de
   05BA 56            [ 7]  893 	ld	d,(hl)
   05BB 23            [ 6]  894 	inc	hl
   05BC 66            [ 7]  895 	ld	h,(hl)
   05BD 7A            [ 4]  896 	ld	a,d
   05BE D6 06         [ 7]  897 	sub	a,#0x06
   05C0 20 18         [12]  898 	jr	NZ,00120$
   05C2 B4            [ 4]  899 	or	a,h
   05C3 20 15         [12]  900 	jr	NZ,00120$
                            901 ;src/main.c:86: cpct_drawSolidBox(memptr, 6, tilewidth, tileheight);
   05C5 21 04 10      [10]  902 	ld	hl,#0x1004
   05C8 E5            [11]  903 	push	hl
   05C9 3E 06         [ 7]  904 	ld	a,#0x06
   05CB F5            [11]  905 	push	af
   05CC 33            [ 6]  906 	inc	sp
   05CD DD 6E F6      [19]  907 	ld	l,-10 (ix)
   05D0 DD 66 F7      [19]  908 	ld	h,-9 (ix)
   05D3 E5            [11]  909 	push	hl
   05D4 CDr00r00      [17]  910 	call	_cpct_drawSolidBox
   05D7 F1            [10]  911 	pop	af
   05D8 F1            [10]  912 	pop	af
   05D9 33            [ 6]  913 	inc	sp
   05DA                     914 00120$:
                            915 ;src/main.c:77: for(posX=0; posX<width;posX++){
   05DA DD 34 F2      [23]  916 	inc	-14 (ix)
   05DD 20 03         [12]  917 	jr	NZ,00181$
   05DF DD 34 F3      [23]  918 	inc	-13 (ix)
   05E2                     919 00181$:
   05E2 DD 7E F2      [19]  920 	ld	a,-14 (ix)
   05E5 D6 14         [ 7]  921 	sub	a, #0x14
   05E7 DD 7E F3      [19]  922 	ld	a,-13 (ix)
   05EA 17            [ 4]  923 	rla
   05EB 3F            [ 4]  924 	ccf
   05EC 1F            [ 4]  925 	rra
   05ED DE 80         [ 7]  926 	sbc	a, #0x80
   05EF DAr0Fr05      [10]  927 	jp	C,00119$
                            928 ;src/main.c:76: for(posY=0; posY<height;posY++){
   05F2 DD 34 F4      [23]  929 	inc	-12 (ix)
   05F5 20 03         [12]  930 	jr	NZ,00182$
   05F7 DD 34 F5      [23]  931 	inc	-11 (ix)
   05FA                     932 00182$:
   05FA DD 7E F4      [19]  933 	ld	a,-12 (ix)
   05FD D6 0C         [ 7]  934 	sub	a, #0x0C
   05FF DD 7E F5      [19]  935 	ld	a,-11 (ix)
   0602 17            [ 4]  936 	rla
   0603 3F            [ 4]  937 	ccf
   0604 1F            [ 4]  938 	rra
   0605 DE 80         [ 7]  939 	sbc	a, #0x80
   0607 DArE8r04      [10]  940 	jp	C,00132$
   060A DD F9         [10]  941 	ld	sp, ix
   060C DD E1         [14]  942 	pop	ix
   060E C9            [10]  943 	ret
                            944 ;src/main.c:93: void cleanScreenPlayers(TPlayer *p,TPlayer *e){
                            945 ;	---------------------------------
                            946 ; Function cleanScreenPlayers
                            947 ; ---------------------------------
   060F                     948 _cleanScreenPlayers::
   060F DD E5         [15]  949 	push	ix
   0611 DD 21 00 00   [14]  950 	ld	ix,#0
   0615 DD 39         [15]  951 	add	ix,sp
                            952 ;src/main.c:95: if(p->life > 0){
   0617 DD 5E 04      [19]  953 	ld	e,4 (ix)
   061A DD 56 05      [19]  954 	ld	d,5 (ix)
   061D D5            [11]  955 	push	de
   061E FD E1         [14]  956 	pop	iy
   0620 FD 7E 04      [19]  957 	ld	a,4 (iy)
   0623 B7            [ 4]  958 	or	a, a
   0624 28 27         [12]  959 	jr	Z,00102$
                            960 ;src/main.c:96: memptr = cpct_getScreenPtr(VMEM,p->x,p->y);
   0626 6B            [ 4]  961 	ld	l, e
   0627 62            [ 4]  962 	ld	h, d
   0628 23            [ 6]  963 	inc	hl
   0629 46            [ 7]  964 	ld	b,(hl)
   062A 1A            [ 7]  965 	ld	a,(de)
   062B D5            [11]  966 	push	de
   062C C5            [11]  967 	push	bc
   062D 33            [ 6]  968 	inc	sp
   062E F5            [11]  969 	push	af
   062F 33            [ 6]  970 	inc	sp
   0630 21 00 C0      [10]  971 	ld	hl,#0xC000
   0633 E5            [11]  972 	push	hl
   0634 CDr00r00      [17]  973 	call	_cpct_getScreenPtr
   0637 D1            [10]  974 	pop	de
   0638 4D            [ 4]  975 	ld	c, l
   0639 44            [ 4]  976 	ld	b, h
                            977 ;src/main.c:97: cpct_drawSolidBox(memptr,0,p->size,16);
   063A EB            [ 4]  978 	ex	de,hl
   063B 11 06 00      [10]  979 	ld	de, #0x0006
   063E 19            [11]  980 	add	hl, de
   063F 5E            [ 7]  981 	ld	e,(hl)
   0640 16 10         [ 7]  982 	ld	d,#0x10
   0642 D5            [11]  983 	push	de
   0643 AF            [ 4]  984 	xor	a, a
   0644 F5            [11]  985 	push	af
   0645 33            [ 6]  986 	inc	sp
   0646 C5            [11]  987 	push	bc
   0647 CDr00r00      [17]  988 	call	_cpct_drawSolidBox
   064A F1            [10]  989 	pop	af
   064B F1            [10]  990 	pop	af
   064C 33            [ 6]  991 	inc	sp
   064D                     992 00102$:
                            993 ;src/main.c:99: if(e->life > 0 ){
   064D DD 5E 06      [19]  994 	ld	e,6 (ix)
   0650 DD 56 07      [19]  995 	ld	d,7 (ix)
   0653 D5            [11]  996 	push	de
   0654 FD E1         [14]  997 	pop	iy
   0656 FD 7E 04      [19]  998 	ld	a,4 (iy)
   0659 B7            [ 4]  999 	or	a, a
   065A 28 27         [12] 1000 	jr	Z,00105$
                           1001 ;src/main.c:100: memptr = cpct_getScreenPtr(VMEM,e->x,e->y);
   065C 6B            [ 4] 1002 	ld	l, e
   065D 62            [ 4] 1003 	ld	h, d
   065E 23            [ 6] 1004 	inc	hl
   065F 46            [ 7] 1005 	ld	b,(hl)
   0660 1A            [ 7] 1006 	ld	a,(de)
   0661 D5            [11] 1007 	push	de
   0662 C5            [11] 1008 	push	bc
   0663 33            [ 6] 1009 	inc	sp
   0664 F5            [11] 1010 	push	af
   0665 33            [ 6] 1011 	inc	sp
   0666 21 00 C0      [10] 1012 	ld	hl,#0xC000
   0669 E5            [11] 1013 	push	hl
   066A CDr00r00      [17] 1014 	call	_cpct_getScreenPtr
   066D D1            [10] 1015 	pop	de
   066E 4D            [ 4] 1016 	ld	c, l
   066F 44            [ 4] 1017 	ld	b, h
                           1018 ;src/main.c:101: cpct_drawSolidBox(memptr,0,e->size,16);
   0670 EB            [ 4] 1019 	ex	de,hl
   0671 11 06 00      [10] 1020 	ld	de, #0x0006
   0674 19            [11] 1021 	add	hl, de
   0675 5E            [ 7] 1022 	ld	e,(hl)
   0676 16 10         [ 7] 1023 	ld	d,#0x10
   0678 D5            [11] 1024 	push	de
   0679 AF            [ 4] 1025 	xor	a, a
   067A F5            [11] 1026 	push	af
   067B 33            [ 6] 1027 	inc	sp
   067C C5            [11] 1028 	push	bc
   067D CDr00r00      [17] 1029 	call	_cpct_drawSolidBox
   0680 F1            [10] 1030 	pop	af
   0681 F1            [10] 1031 	pop	af
   0682 33            [ 6] 1032 	inc	sp
   0683                    1033 00105$:
   0683 DD E1         [14] 1034 	pop	ix
   0685 C9            [10] 1035 	ret
                           1036 ;src/main.c:106: void drawPlayers(TPlayer *p,TPlayer *e){
                           1037 ;	---------------------------------
                           1038 ; Function drawPlayers
                           1039 ; ---------------------------------
   0686                    1040 _drawPlayers::
   0686 DD E5         [15] 1041 	push	ix
   0688 DD 21 00 00   [14] 1042 	ld	ix,#0
   068C DD 39         [15] 1043 	add	ix,sp
   068E 3B            [ 6] 1044 	dec	sp
                           1045 ;src/main.c:108: if(p->life > 0){
   068F DD 5E 04      [19] 1046 	ld	e,4 (ix)
   0692 DD 56 05      [19] 1047 	ld	d,5 (ix)
   0695 D5            [11] 1048 	push	de
   0696 FD E1         [14] 1049 	pop	iy
   0698 FD 7E 04      [19] 1050 	ld	a,4 (iy)
   069B B7            [ 4] 1051 	or	a, a
   069C 28 34         [12] 1052 	jr	Z,00102$
                           1053 ;src/main.c:109: memptr = cpct_getScreenPtr(VMEM,p->x,p->y);
   069E 6B            [ 4] 1054 	ld	l, e
   069F 62            [ 4] 1055 	ld	h, d
   06A0 23            [ 6] 1056 	inc	hl
   06A1 46            [ 7] 1057 	ld	b,(hl)
   06A2 1A            [ 7] 1058 	ld	a,(de)
   06A3 D5            [11] 1059 	push	de
   06A4 C5            [11] 1060 	push	bc
   06A5 33            [ 6] 1061 	inc	sp
   06A6 F5            [11] 1062 	push	af
   06A7 33            [ 6] 1063 	inc	sp
   06A8 21 00 C0      [10] 1064 	ld	hl,#0xC000
   06AB E5            [11] 1065 	push	hl
   06AC CDr00r00      [17] 1066 	call	_cpct_getScreenPtr
   06AF D1            [10] 1067 	pop	de
   06B0 4D            [ 4] 1068 	ld	c, l
   06B1 44            [ 4] 1069 	ld	b, h
                           1070 ;src/main.c:110: cpct_drawSpriteMasked(p->sprite,memptr,p->size,16);
   06B2 6B            [ 4] 1071 	ld	l, e
   06B3 62            [ 4] 1072 	ld	h, d
   06B4 C5            [11] 1073 	push	bc
   06B5 01 06 00      [10] 1074 	ld	bc, #0x0006
   06B8 09            [11] 1075 	add	hl, bc
   06B9 C1            [10] 1076 	pop	bc
   06BA 7E            [ 7] 1077 	ld	a,(hl)
   06BB DD 77 FF      [19] 1078 	ld	-1 (ix),a
   06BE EB            [ 4] 1079 	ex	de,hl
   06BF 23            [ 6] 1080 	inc	hl
   06C0 23            [ 6] 1081 	inc	hl
   06C1 5E            [ 7] 1082 	ld	e,(hl)
   06C2 23            [ 6] 1083 	inc	hl
   06C3 56            [ 7] 1084 	ld	d,(hl)
   06C4 3E 10         [ 7] 1085 	ld	a,#0x10
   06C6 F5            [11] 1086 	push	af
   06C7 33            [ 6] 1087 	inc	sp
   06C8 DD 7E FF      [19] 1088 	ld	a,-1 (ix)
   06CB F5            [11] 1089 	push	af
   06CC 33            [ 6] 1090 	inc	sp
   06CD C5            [11] 1091 	push	bc
   06CE D5            [11] 1092 	push	de
   06CF CDr00r00      [17] 1093 	call	_cpct_drawSpriteMasked
   06D2                    1094 00102$:
                           1095 ;src/main.c:112: if(e->life > 0 ){
   06D2 DD 5E 06      [19] 1096 	ld	e,6 (ix)
   06D5 DD 56 07      [19] 1097 	ld	d,7 (ix)
   06D8 D5            [11] 1098 	push	de
   06D9 FD E1         [14] 1099 	pop	iy
   06DB FD 7E 04      [19] 1100 	ld	a,4 (iy)
   06DE B7            [ 4] 1101 	or	a, a
   06DF 28 34         [12] 1102 	jr	Z,00105$
                           1103 ;src/main.c:113: memptr = cpct_getScreenPtr(VMEM,e->x,e->y);
   06E1 6B            [ 4] 1104 	ld	l, e
   06E2 62            [ 4] 1105 	ld	h, d
   06E3 23            [ 6] 1106 	inc	hl
   06E4 46            [ 7] 1107 	ld	b,(hl)
   06E5 1A            [ 7] 1108 	ld	a,(de)
   06E6 D5            [11] 1109 	push	de
   06E7 C5            [11] 1110 	push	bc
   06E8 33            [ 6] 1111 	inc	sp
   06E9 F5            [11] 1112 	push	af
   06EA 33            [ 6] 1113 	inc	sp
   06EB 21 00 C0      [10] 1114 	ld	hl,#0xC000
   06EE E5            [11] 1115 	push	hl
   06EF CDr00r00      [17] 1116 	call	_cpct_getScreenPtr
   06F2 D1            [10] 1117 	pop	de
   06F3 4D            [ 4] 1118 	ld	c, l
   06F4 44            [ 4] 1119 	ld	b, h
                           1120 ;src/main.c:114: cpct_drawSpriteMasked(e->sprite,memptr,e->size,16);
   06F5 6B            [ 4] 1121 	ld	l, e
   06F6 62            [ 4] 1122 	ld	h, d
   06F7 C5            [11] 1123 	push	bc
   06F8 01 06 00      [10] 1124 	ld	bc, #0x0006
   06FB 09            [11] 1125 	add	hl, bc
   06FC C1            [10] 1126 	pop	bc
   06FD 7E            [ 7] 1127 	ld	a,(hl)
   06FE DD 77 FF      [19] 1128 	ld	-1 (ix),a
   0701 EB            [ 4] 1129 	ex	de,hl
   0702 23            [ 6] 1130 	inc	hl
   0703 23            [ 6] 1131 	inc	hl
   0704 5E            [ 7] 1132 	ld	e,(hl)
   0705 23            [ 6] 1133 	inc	hl
   0706 56            [ 7] 1134 	ld	d,(hl)
   0707 3E 10         [ 7] 1135 	ld	a,#0x10
   0709 F5            [11] 1136 	push	af
   070A 33            [ 6] 1137 	inc	sp
   070B DD 7E FF      [19] 1138 	ld	a,-1 (ix)
   070E F5            [11] 1139 	push	af
   070F 33            [ 6] 1140 	inc	sp
   0710 C5            [11] 1141 	push	bc
   0711 D5            [11] 1142 	push	de
   0712 CDr00r00      [17] 1143 	call	_cpct_drawSpriteMasked
   0715                    1144 00105$:
   0715 33            [ 6] 1145 	inc	sp
   0716 DD E1         [14] 1146 	pop	ix
   0718 C9            [10] 1147 	ret
                           1148 ;src/main.c:118: void initPlayers(){
                           1149 ;	---------------------------------
                           1150 ; Function initPlayers
                           1151 ; ---------------------------------
   0719                    1152 _initPlayers::
                           1153 ;src/main.c:120: }
   0719 C9            [10] 1154 	ret
                           1155 ;src/main.c:125: u8 checkBoundsCollisions(u8 *x,u8 *y, u8 lx, u8 ly){
                           1156 ;	---------------------------------
                           1157 ; Function checkBoundsCollisions
                           1158 ; ---------------------------------
   071A                    1159 _checkBoundsCollisions::
   071A DD E5         [15] 1160 	push	ix
   071C DD 21 00 00   [14] 1161 	ld	ix,#0
   0720 DD 39         [15] 1162 	add	ix,sp
   0722 21 EF FF      [10] 1163 	ld	hl,#-17
   0725 39            [11] 1164 	add	hl,sp
   0726 F9            [ 6] 1165 	ld	sp,hl
                           1166 ;src/main.c:127: u8 *posX = x;
   0727 DD 7E 04      [19] 1167 	ld	a,4 (ix)
   072A DD 77 EF      [19] 1168 	ld	-17 (ix),a
   072D DD 7E 05      [19] 1169 	ld	a,5 (ix)
   0730 DD 77 F0      [19] 1170 	ld	-16 (ix),a
                           1171 ;src/main.c:128: u8 *posY = y;
   0733 DD 7E 06      [19] 1172 	ld	a,6 (ix)
   0736 DD 77 F1      [19] 1173 	ld	-15 (ix),a
   0739 DD 7E 07      [19] 1174 	ld	a,7 (ix)
   073C DD 77 F2      [19] 1175 	ld	-14 (ix),a
                           1176 ;src/main.c:129: u8 bound = 0;
   073F DD 36 F3 00   [19] 1177 	ld	-13 (ix),#0x00
                           1178 ;src/main.c:130: if(    scene[(posY[0])/tileheight][(posX[0])/tilewidth] == 1   
   0743 DD 6E F1      [19] 1179 	ld	l,-15 (ix)
   0746 DD 66 F2      [19] 1180 	ld	h,-14 (ix)
   0749 7E            [ 7] 1181 	ld	a,(hl)
   074A DD 77 FF      [19] 1182 	ld	-1 (ix), a
   074D 07            [ 4] 1183 	rlca
   074E 07            [ 4] 1184 	rlca
   074F 07            [ 4] 1185 	rlca
   0750 07            [ 4] 1186 	rlca
   0751 E6 0F         [ 7] 1187 	and	a,#0x0F
   0753 6F            [ 4] 1188 	ld	l,a
   0754 26 00         [ 7] 1189 	ld	h,#0x00
   0756 29            [11] 1190 	add	hl, hl
   0757 11r00r00      [10] 1191 	ld	de,#_scene
   075A 19            [11] 1192 	add	hl,de
   075B 7E            [ 7] 1193 	ld	a,(hl)
   075C DD 77 FB      [19] 1194 	ld	-5 (ix),a
   075F 23            [ 6] 1195 	inc	hl
   0760 7E            [ 7] 1196 	ld	a,(hl)
   0761 DD 77 FC      [19] 1197 	ld	-4 (ix),a
   0764 E1            [10] 1198 	pop	hl
   0765 E5            [11] 1199 	push	hl
   0766 4E            [ 7] 1200 	ld	c,(hl)
   0767 69            [ 4] 1201 	ld	l,c
   0768 CB 3D         [ 8] 1202 	srl	l
   076A CB 3D         [ 8] 1203 	srl	l
   076C 26 00         [ 7] 1204 	ld	h,#0x00
   076E 29            [11] 1205 	add	hl, hl
   076F DD 75 F4      [19] 1206 	ld	-12 (ix),l
   0772 DD 74 F5      [19] 1207 	ld	-11 (ix),h
   0775 DD 7E FB      [19] 1208 	ld	a,-5 (ix)
   0778 DD 86 F4      [19] 1209 	add	a, -12 (ix)
   077B 6F            [ 4] 1210 	ld	l,a
   077C DD 7E FC      [19] 1211 	ld	a,-4 (ix)
   077F DD 8E F5      [19] 1212 	adc	a, -11 (ix)
   0782 67            [ 4] 1213 	ld	h,a
   0783 56            [ 7] 1214 	ld	d,(hl)
   0784 23            [ 6] 1215 	inc	hl
   0785 66            [ 7] 1216 	ld	h,(hl)
   0786 15            [ 4] 1217 	dec	d
   0787 20 05         [12] 1218 	jr	NZ,00177$
   0789 7C            [ 4] 1219 	ld	a,h
   078A B7            [ 4] 1220 	or	a, a
   078B CAr8Dr08      [10] 1221 	jp	Z,00101$
   078E                    1222 00177$:
                           1223 ;src/main.c:131: || scene[(posY[0])/tileheight][(posX[0]+playerwidth-1)/tilewidth] == 1
   078E 06 00         [ 7] 1224 	ld	b,#0x00
   0790 21 03 00      [10] 1225 	ld	hl,#0x0003
   0793 09            [11] 1226 	add	hl,bc
   0794 DD 75 FD      [19] 1227 	ld	-3 (ix),l
   0797 DD 74 FE      [19] 1228 	ld	-2 (ix),h
   079A DD 7E FD      [19] 1229 	ld	a,-3 (ix)
   079D DD 77 F9      [19] 1230 	ld	-7 (ix),a
   07A0 DD 7E FE      [19] 1231 	ld	a,-2 (ix)
   07A3 DD 77 FA      [19] 1232 	ld	-6 (ix),a
   07A6 DD 7E FE      [19] 1233 	ld	a,-2 (ix)
   07A9 07            [ 4] 1234 	rlca
   07AA E6 01         [ 7] 1235 	and	a,#0x01
   07AC DD 77 F6      [19] 1236 	ld	-10 (ix),a
   07AF 21 06 00      [10] 1237 	ld	hl,#0x0006
   07B2 09            [11] 1238 	add	hl,bc
   07B3 DD 75 F7      [19] 1239 	ld	-9 (ix),l
   07B6 DD 74 F8      [19] 1240 	ld	-8 (ix),h
   07B9 DD 7E F6      [19] 1241 	ld	a,-10 (ix)
   07BC B7            [ 4] 1242 	or	a, a
   07BD 28 0C         [12] 1243 	jr	Z,00113$
   07BF DD 7E F7      [19] 1244 	ld	a,-9 (ix)
   07C2 DD 77 F9      [19] 1245 	ld	-7 (ix),a
   07C5 DD 7E F8      [19] 1246 	ld	a,-8 (ix)
   07C8 DD 77 FA      [19] 1247 	ld	-6 (ix),a
   07CB                    1248 00113$:
   07CB DD 6E F9      [19] 1249 	ld	l,-7 (ix)
   07CE DD 66 FA      [19] 1250 	ld	h,-6 (ix)
   07D1 CB 2C         [ 8] 1251 	sra	h
   07D3 CB 1D         [ 8] 1252 	rr	l
   07D5 CB 2C         [ 8] 1253 	sra	h
   07D7 CB 1D         [ 8] 1254 	rr	l
   07D9 29            [11] 1255 	add	hl, hl
   07DA DD 5E FB      [19] 1256 	ld	e,-5 (ix)
   07DD DD 56 FC      [19] 1257 	ld	d,-4 (ix)
   07E0 19            [11] 1258 	add	hl,de
   07E1 56            [ 7] 1259 	ld	d,(hl)
   07E2 23            [ 6] 1260 	inc	hl
   07E3 66            [ 7] 1261 	ld	h,(hl)
   07E4 15            [ 4] 1262 	dec	d
   07E5 20 05         [12] 1263 	jr	NZ,00178$
   07E7 7C            [ 4] 1264 	ld	a,h
   07E8 B7            [ 4] 1265 	or	a, a
   07E9 CAr8Dr08      [10] 1266 	jp	Z,00101$
   07EC                    1267 00178$:
                           1268 ;src/main.c:132: || scene[(posY[0]+playerheight-2)/tileheight][(posX[0])/tilewidth] == 1 
   07EC DD 5E FF      [19] 1269 	ld	e,-1 (ix)
   07EF 16 00         [ 7] 1270 	ld	d,#0x00
   07F1 21 0E 00      [10] 1271 	ld	hl,#0x000E
   07F4 19            [11] 1272 	add	hl,de
   07F5 4D            [ 4] 1273 	ld	c,l
   07F6 44            [ 4] 1274 	ld	b,h
   07F7 69            [ 4] 1275 	ld	l, c
   07F8 78            [ 4] 1276 	ld	a,b
   07F9 67            [ 4] 1277 	ld	h,a
   07FA 07            [ 4] 1278 	rlca
   07FB E6 01         [ 7] 1279 	and	a,#0x01
   07FD DD 77 F9      [19] 1280 	ld	-7 (ix),a
   0800 7B            [ 4] 1281 	ld	a,e
   0801 C6 1D         [ 7] 1282 	add	a, #0x1D
   0803 DD 77 FB      [19] 1283 	ld	-5 (ix),a
   0806 7A            [ 4] 1284 	ld	a,d
   0807 CE 00         [ 7] 1285 	adc	a, #0x00
   0809 DD 77 FC      [19] 1286 	ld	-4 (ix),a
   080C DD 7E F9      [19] 1287 	ld	a,-7 (ix)
   080F B7            [ 4] 1288 	or	a, a
   0810 28 06         [12] 1289 	jr	Z,00114$
   0812 DD 6E FB      [19] 1290 	ld	l,-5 (ix)
   0815 DD 66 FC      [19] 1291 	ld	h,-4 (ix)
   0818                    1292 00114$:
   0818 CB 2C         [ 8] 1293 	sra	h
   081A CB 1D         [ 8] 1294 	rr	l
   081C CB 2C         [ 8] 1295 	sra	h
   081E CB 1D         [ 8] 1296 	rr	l
   0820 CB 2C         [ 8] 1297 	sra	h
   0822 CB 1D         [ 8] 1298 	rr	l
   0824 CB 2C         [ 8] 1299 	sra	h
   0826 CB 1D         [ 8] 1300 	rr	l
   0828 29            [11] 1301 	add	hl, hl
   0829 11r00r00      [10] 1302 	ld	de,#_scene
   082C 19            [11] 1303 	add	hl,de
   082D 5E            [ 7] 1304 	ld	e,(hl)
   082E 23            [ 6] 1305 	inc	hl
   082F 56            [ 7] 1306 	ld	d,(hl)
   0830 DD 6E F4      [19] 1307 	ld	l,-12 (ix)
   0833 DD 66 F5      [19] 1308 	ld	h,-11 (ix)
   0836 19            [11] 1309 	add	hl,de
   0837 56            [ 7] 1310 	ld	d,(hl)
   0838 23            [ 6] 1311 	inc	hl
   0839 66            [ 7] 1312 	ld	h,(hl)
   083A 15            [ 4] 1313 	dec	d
   083B 20 04         [12] 1314 	jr	NZ,00179$
   083D 7C            [ 4] 1315 	ld	a,h
   083E B7            [ 4] 1316 	or	a, a
   083F 28 4C         [12] 1317 	jr	Z,00101$
   0841                    1318 00179$:
                           1319 ;src/main.c:133: || scene[(posY[0]+playerheight-2)/tileheight][(posX[0]+playerwidth-1)/tilewidth] == 1
   0841 DD 7E F9      [19] 1320 	ld	a,-7 (ix)
   0844 B7            [ 4] 1321 	or	a, a
   0845 28 06         [12] 1322 	jr	Z,00115$
   0847 DD 4E FB      [19] 1323 	ld	c,-5 (ix)
   084A DD 46 FC      [19] 1324 	ld	b,-4 (ix)
   084D                    1325 00115$:
   084D 69            [ 4] 1326 	ld	l, c
   084E 60            [ 4] 1327 	ld	h, b
   084F CB 2C         [ 8] 1328 	sra	h
   0851 CB 1D         [ 8] 1329 	rr	l
   0853 CB 2C         [ 8] 1330 	sra	h
   0855 CB 1D         [ 8] 1331 	rr	l
   0857 CB 2C         [ 8] 1332 	sra	h
   0859 CB 1D         [ 8] 1333 	rr	l
   085B CB 2C         [ 8] 1334 	sra	h
   085D CB 1D         [ 8] 1335 	rr	l
   085F 29            [11] 1336 	add	hl, hl
   0860 11r00r00      [10] 1337 	ld	de,#_scene
   0863 19            [11] 1338 	add	hl,de
   0864 4E            [ 7] 1339 	ld	c,(hl)
   0865 23            [ 6] 1340 	inc	hl
   0866 46            [ 7] 1341 	ld	b,(hl)
   0867 DD 6E FD      [19] 1342 	ld	l,-3 (ix)
   086A DD 66 FE      [19] 1343 	ld	h,-2 (ix)
   086D DD 7E F6      [19] 1344 	ld	a,-10 (ix)
   0870 B7            [ 4] 1345 	or	a, a
   0871 28 06         [12] 1346 	jr	Z,00116$
   0873 DD 6E F7      [19] 1347 	ld	l,-9 (ix)
   0876 DD 66 F8      [19] 1348 	ld	h,-8 (ix)
   0879                    1349 00116$:
   0879 CB 2C         [ 8] 1350 	sra	h
   087B CB 1D         [ 8] 1351 	rr	l
   087D CB 2C         [ 8] 1352 	sra	h
   087F CB 1D         [ 8] 1353 	rr	l
   0881 29            [11] 1354 	add	hl, hl
   0882 09            [11] 1355 	add	hl,bc
   0883 5E            [ 7] 1356 	ld	e,(hl)
   0884 23            [ 6] 1357 	inc	hl
   0885 56            [ 7] 1358 	ld	d,(hl)
   0886 1D            [ 4] 1359 	dec	e
   0887 20 18         [12] 1360 	jr	NZ,00102$
   0889 7A            [ 4] 1361 	ld	a,d
   088A B7            [ 4] 1362 	or	a, a
   088B 20 14         [12] 1363 	jr	NZ,00102$
   088D                    1364 00101$:
                           1365 ;src/main.c:136: *posX=lx;
   088D E1            [10] 1366 	pop	hl
   088E E5            [11] 1367 	push	hl
   088F DD 7E 08      [19] 1368 	ld	a,8 (ix)
   0892 77            [ 7] 1369 	ld	(hl),a
                           1370 ;src/main.c:137: *posY=ly;
   0893 DD 6E F1      [19] 1371 	ld	l,-15 (ix)
   0896 DD 66 F2      [19] 1372 	ld	h,-14 (ix)
   0899 DD 7E 09      [19] 1373 	ld	a,9 (ix)
   089C 77            [ 7] 1374 	ld	(hl),a
                           1375 ;src/main.c:138: bound = 1;
   089D DD 36 F3 01   [19] 1376 	ld	-13 (ix),#0x01
   08A1                    1377 00102$:
                           1378 ;src/main.c:140: if(    scene[(posY[0])/tileheight][(posX[0])/tilewidth] == 6   
   08A1 DD 6E F1      [19] 1379 	ld	l,-15 (ix)
   08A4 DD 66 F2      [19] 1380 	ld	h,-14 (ix)
   08A7 7E            [ 7] 1381 	ld	a,(hl)
   08A8 DD 77 F7      [19] 1382 	ld	-9 (ix), a
   08AB 07            [ 4] 1383 	rlca
   08AC 07            [ 4] 1384 	rlca
   08AD 07            [ 4] 1385 	rlca
   08AE 07            [ 4] 1386 	rlca
   08AF E6 0F         [ 7] 1387 	and	a,#0x0F
   08B1 6F            [ 4] 1388 	ld	l,a
   08B2 26 00         [ 7] 1389 	ld	h,#0x00
   08B4 29            [11] 1390 	add	hl, hl
   08B5 11r00r00      [10] 1391 	ld	de,#_scene
   08B8 19            [11] 1392 	add	hl,de
   08B9 7E            [ 7] 1393 	ld	a,(hl)
   08BA DD 77 F9      [19] 1394 	ld	-7 (ix),a
   08BD 23            [ 6] 1395 	inc	hl
   08BE 7E            [ 7] 1396 	ld	a,(hl)
   08BF DD 77 FA      [19] 1397 	ld	-6 (ix),a
   08C2 E1            [10] 1398 	pop	hl
   08C3 E5            [11] 1399 	push	hl
   08C4 7E            [ 7] 1400 	ld	a,(hl)
   08C5 DD 77 F6      [19] 1401 	ld	-10 (ix), a
   08C8 6F            [ 4] 1402 	ld	l, a
   08C9 CB 3D         [ 8] 1403 	srl	l
   08CB CB 3D         [ 8] 1404 	srl	l
   08CD 26 00         [ 7] 1405 	ld	h,#0x00
   08CF 29            [11] 1406 	add	hl, hl
   08D0 DD 75 FD      [19] 1407 	ld	-3 (ix),l
   08D3 DD 74 FE      [19] 1408 	ld	-2 (ix),h
   08D6 DD 7E F9      [19] 1409 	ld	a,-7 (ix)
   08D9 DD 86 FD      [19] 1410 	add	a, -3 (ix)
   08DC 6F            [ 4] 1411 	ld	l,a
   08DD DD 7E FA      [19] 1412 	ld	a,-6 (ix)
   08E0 DD 8E FE      [19] 1413 	adc	a, -2 (ix)
   08E3 67            [ 4] 1414 	ld	h,a
   08E4 56            [ 7] 1415 	ld	d,(hl)
   08E5 23            [ 6] 1416 	inc	hl
   08E6 66            [ 7] 1417 	ld	h,(hl)
   08E7 7A            [ 4] 1418 	ld	a,d
   08E8 D6 06         [ 7] 1419 	sub	a,#0x06
   08EA 20 04         [12] 1420 	jr	NZ,00182$
   08EC B4            [ 4] 1421 	or	a,h
   08ED CAr00r0A      [10] 1422 	jp	Z,00106$
   08F0                    1423 00182$:
                           1424 ;src/main.c:141: || scene[(posY[0])/tileheight][(posX[0]+playerwidth-1)/tilewidth] == 6
   08F0 DD 56 F6      [19] 1425 	ld	d,-10 (ix)
   08F3 1E 00         [ 7] 1426 	ld	e,#0x00
   08F5 4A            [ 4] 1427 	ld	c, d
   08F6 43            [ 4] 1428 	ld	b, e
   08F7 03            [ 6] 1429 	inc	bc
   08F8 03            [ 6] 1430 	inc	bc
   08F9 03            [ 6] 1431 	inc	bc
   08FA 69            [ 4] 1432 	ld	l, c
   08FB 78            [ 4] 1433 	ld	a,b
   08FC 67            [ 4] 1434 	ld	h,a
   08FD 07            [ 4] 1435 	rlca
   08FE E6 01         [ 7] 1436 	and	a,#0x01
   0900 DD 77 F6      [19] 1437 	ld	-10 (ix),a
   0903 7A            [ 4] 1438 	ld	a,d
   0904 C6 06         [ 7] 1439 	add	a, #0x06
   0906 DD 77 F4      [19] 1440 	ld	-12 (ix),a
   0909 7B            [ 4] 1441 	ld	a,e
   090A CE 00         [ 7] 1442 	adc	a, #0x00
   090C DD 77 F5      [19] 1443 	ld	-11 (ix),a
   090F DD 7E F6      [19] 1444 	ld	a,-10 (ix)
   0912 B7            [ 4] 1445 	or	a, a
   0913 28 06         [12] 1446 	jr	Z,00117$
   0915 DD 6E F4      [19] 1447 	ld	l,-12 (ix)
   0918 DD 66 F5      [19] 1448 	ld	h,-11 (ix)
   091B                    1449 00117$:
   091B CB 2C         [ 8] 1450 	sra	h
   091D CB 1D         [ 8] 1451 	rr	l
   091F CB 2C         [ 8] 1452 	sra	h
   0921 CB 1D         [ 8] 1453 	rr	l
   0923 29            [11] 1454 	add	hl, hl
   0924 DD 5E F9      [19] 1455 	ld	e,-7 (ix)
   0927 DD 56 FA      [19] 1456 	ld	d,-6 (ix)
   092A 19            [11] 1457 	add	hl,de
   092B 56            [ 7] 1458 	ld	d,(hl)
   092C 23            [ 6] 1459 	inc	hl
   092D 66            [ 7] 1460 	ld	h,(hl)
   092E 7A            [ 4] 1461 	ld	a,d
   092F D6 06         [ 7] 1462 	sub	a,#0x06
   0931 20 04         [12] 1463 	jr	NZ,00183$
   0933 B4            [ 4] 1464 	or	a,h
   0934 CAr00r0A      [10] 1465 	jp	Z,00106$
   0937                    1466 00183$:
                           1467 ;src/main.c:142: || scene[(posY[0]+playerheight-2)/tileheight][(posX[0])/tilewidth] == 6
   0937 DD 5E F7      [19] 1468 	ld	e,-9 (ix)
   093A 16 00         [ 7] 1469 	ld	d,#0x00
   093C 21 0E 00      [10] 1470 	ld	hl,#0x000E
   093F 19            [11] 1471 	add	hl,de
   0940 DD 75 F7      [19] 1472 	ld	-9 (ix),l
   0943 DD 74 F8      [19] 1473 	ld	-8 (ix),h
   0946 DD 6E F7      [19] 1474 	ld	l,-9 (ix)
   0949 DD 66 F8      [19] 1475 	ld	h,-8 (ix)
   094C DD 7E F8      [19] 1476 	ld	a,-8 (ix)
   094F 07            [ 4] 1477 	rlca
   0950 E6 01         [ 7] 1478 	and	a,#0x01
   0952 DD 77 F9      [19] 1479 	ld	-7 (ix),a
   0955 7B            [ 4] 1480 	ld	a,e
   0956 C6 1D         [ 7] 1481 	add	a, #0x1D
   0958 DD 77 FB      [19] 1482 	ld	-5 (ix),a
   095B 7A            [ 4] 1483 	ld	a,d
   095C CE 00         [ 7] 1484 	adc	a, #0x00
   095E DD 77 FC      [19] 1485 	ld	-4 (ix),a
   0961 DD 7E F9      [19] 1486 	ld	a,-7 (ix)
   0964 B7            [ 4] 1487 	or	a, a
   0965 28 06         [12] 1488 	jr	Z,00118$
   0967 DD 6E FB      [19] 1489 	ld	l,-5 (ix)
   096A DD 66 FC      [19] 1490 	ld	h,-4 (ix)
   096D                    1491 00118$:
   096D CB 2C         [ 8] 1492 	sra	h
   096F CB 1D         [ 8] 1493 	rr	l
   0971 CB 2C         [ 8] 1494 	sra	h
   0973 CB 1D         [ 8] 1495 	rr	l
   0975 CB 2C         [ 8] 1496 	sra	h
   0977 CB 1D         [ 8] 1497 	rr	l
   0979 CB 2C         [ 8] 1498 	sra	h
   097B CB 1D         [ 8] 1499 	rr	l
   097D 29            [11] 1500 	add	hl, hl
   097E 11r00r00      [10] 1501 	ld	de,#_scene
   0981 19            [11] 1502 	add	hl,de
   0982 5E            [ 7] 1503 	ld	e,(hl)
   0983 23            [ 6] 1504 	inc	hl
   0984 56            [ 7] 1505 	ld	d,(hl)
   0985 DD 6E FD      [19] 1506 	ld	l,-3 (ix)
   0988 DD 66 FE      [19] 1507 	ld	h,-2 (ix)
   098B 19            [11] 1508 	add	hl,de
   098C 5E            [ 7] 1509 	ld	e,(hl)
   098D 23            [ 6] 1510 	inc	hl
   098E 56            [ 7] 1511 	ld	d,(hl)
   098F 7B            [ 4] 1512 	ld	a,e
   0990 D6 06         [ 7] 1513 	sub	a,#0x06
   0992 20 03         [12] 1514 	jr	NZ,00184$
   0994 B2            [ 4] 1515 	or	a,d
   0995 28 69         [12] 1516 	jr	Z,00106$
   0997                    1517 00184$:
                           1518 ;src/main.c:143: || scene[(posY[0]+playerheight-2)/tileheight][(posX[0]+playerwidth-1)/tilewidth] == 6
   0997 DD 6E F7      [19] 1519 	ld	l,-9 (ix)
   099A DD 66 F8      [19] 1520 	ld	h,-8 (ix)
   099D DD 7E F9      [19] 1521 	ld	a,-7 (ix)
   09A0 B7            [ 4] 1522 	or	a, a
   09A1 28 06         [12] 1523 	jr	Z,00119$
   09A3 DD 6E FB      [19] 1524 	ld	l,-5 (ix)
   09A6 DD 66 FC      [19] 1525 	ld	h,-4 (ix)
   09A9                    1526 00119$:
   09A9 CB 2C         [ 8] 1527 	sra	h
   09AB CB 1D         [ 8] 1528 	rr	l
   09AD CB 2C         [ 8] 1529 	sra	h
   09AF CB 1D         [ 8] 1530 	rr	l
   09B1 CB 2C         [ 8] 1531 	sra	h
   09B3 CB 1D         [ 8] 1532 	rr	l
   09B5 CB 2C         [ 8] 1533 	sra	h
   09B7 CB 1D         [ 8] 1534 	rr	l
   09B9 29            [11] 1535 	add	hl, hl
   09BA 11r00r00      [10] 1536 	ld	de,#_scene
   09BD 19            [11] 1537 	add	hl,de
   09BE 7E            [ 7] 1538 	ld	a,(hl)
   09BF DD 77 F7      [19] 1539 	ld	-9 (ix),a
   09C2 23            [ 6] 1540 	inc	hl
   09C3 7E            [ 7] 1541 	ld	a,(hl)
   09C4 DD 77 F8      [19] 1542 	ld	-8 (ix),a
   09C7 DD 71 F9      [19] 1543 	ld	-7 (ix),c
   09CA DD 70 FA      [19] 1544 	ld	-6 (ix),b
   09CD DD 7E F6      [19] 1545 	ld	a,-10 (ix)
   09D0 B7            [ 4] 1546 	or	a, a
   09D1 28 0C         [12] 1547 	jr	Z,00120$
   09D3 DD 7E F4      [19] 1548 	ld	a,-12 (ix)
   09D6 DD 77 F9      [19] 1549 	ld	-7 (ix),a
   09D9 DD 7E F5      [19] 1550 	ld	a,-11 (ix)
   09DC DD 77 FA      [19] 1551 	ld	-6 (ix),a
   09DF                    1552 00120$:
   09DF DD 6E F9      [19] 1553 	ld	l,-7 (ix)
   09E2 DD 66 FA      [19] 1554 	ld	h,-6 (ix)
   09E5 CB 2C         [ 8] 1555 	sra	h
   09E7 CB 1D         [ 8] 1556 	rr	l
   09E9 CB 2C         [ 8] 1557 	sra	h
   09EB CB 1D         [ 8] 1558 	rr	l
   09ED 29            [11] 1559 	add	hl, hl
   09EE DD 5E F7      [19] 1560 	ld	e,-9 (ix)
   09F1 DD 56 F8      [19] 1561 	ld	d,-8 (ix)
   09F4 19            [11] 1562 	add	hl,de
   09F5 56            [ 7] 1563 	ld	d,(hl)
   09F6 23            [ 6] 1564 	inc	hl
   09F7 66            [ 7] 1565 	ld	h,(hl)
   09F8 7A            [ 4] 1566 	ld	a,d
   09F9 D6 06         [ 7] 1567 	sub	a,#0x06
   09FB 20 18         [12] 1568 	jr	NZ,00107$
   09FD B4            [ 4] 1569 	or	a,h
   09FE 20 15         [12] 1570 	jr	NZ,00107$
   0A00                    1571 00106$:
                           1572 ;src/main.c:145: cpct_clearScreen(0);
   0A00 21 00 40      [10] 1573 	ld	hl,#0x4000
   0A03 E5            [11] 1574 	push	hl
   0A04 AF            [ 4] 1575 	xor	a, a
   0A05 F5            [11] 1576 	push	af
   0A06 33            [ 6] 1577 	inc	sp
   0A07 26 C0         [ 7] 1578 	ld	h, #0xC0
   0A09 E5            [11] 1579 	push	hl
   0A0A CDr00r00      [17] 1580 	call	_cpct_memset
                           1581 ;src/main.c:146: drawMap(2);
   0A0D 21 02 00      [10] 1582 	ld	hl,#0x0002
   0A10 E5            [11] 1583 	push	hl
   0A11 CDr4Fr04      [17] 1584 	call	_drawMap
   0A14 F1            [10] 1585 	pop	af
   0A15                    1586 00107$:
                           1587 ;src/main.c:148: return bound;
   0A15 DD 6E F3      [19] 1588 	ld	l,-13 (ix)
   0A18 DD F9         [10] 1589 	ld	sp, ix
   0A1A DD E1         [14] 1590 	pop	ix
   0A1C C9            [10] 1591 	ret
                           1592 ;src/main.c:151: void checkEnemiesCollisions(){
                           1593 ;	---------------------------------
                           1594 ; Function checkEnemiesCollisions
                           1595 ; ---------------------------------
   0A1D                    1596 _checkEnemiesCollisions::
                           1597 ;src/main.c:154: }
   0A1D C9            [10] 1598 	ret
                           1599 ;src/main.c:158: u8* checkKeyboard(u8 *x, u8 *y,int *finish,u8 *s,u8 *dir,u8 *size){
                           1600 ;	---------------------------------
                           1601 ; Function checkKeyboard
                           1602 ; ---------------------------------
   0A1E                    1603 _checkKeyboard::
   0A1E DD E5         [15] 1604 	push	ix
   0A20 DD 21 00 00   [14] 1605 	ld	ix,#0
   0A24 DD 39         [15] 1606 	add	ix,sp
   0A26 F5            [11] 1607 	push	af
   0A27 F5            [11] 1608 	push	af
                           1609 ;src/main.c:160: u8 *sprite = s;
   0A28 DD 5E 0A      [19] 1610 	ld	e,10 (ix)
   0A2B DD 56 0B      [19] 1611 	ld	d,11 (ix)
                           1612 ;src/main.c:161: if(cpct_isKeyPressed(Key_CursorRight) && x[0] < 76 ){
   0A2E D5            [11] 1613 	push	de
   0A2F 21 00 02      [10] 1614 	ld	hl,#0x0200
   0A32 CDr00r00      [17] 1615 	call	_cpct_isKeyPressed
   0A35 4D            [ 4] 1616 	ld	c,l
   0A36 D1            [10] 1617 	pop	de
   0A37 DD 6E 04      [19] 1618 	ld	l,4 (ix)
   0A3A DD 66 05      [19] 1619 	ld	h,5 (ix)
                           1620 ;src/main.c:163: dir[0] = 6;
   0A3D DD 7E 0C      [19] 1621 	ld	a,12 (ix)
   0A40 DD 77 FE      [19] 1622 	ld	-2 (ix),a
   0A43 DD 7E 0D      [19] 1623 	ld	a,13 (ix)
   0A46 DD 77 FF      [19] 1624 	ld	-1 (ix),a
                           1625 ;src/main.c:164: size[0] = 4;
   0A49 DD 7E 0E      [19] 1626 	ld	a,14 (ix)
   0A4C DD 77 FC      [19] 1627 	ld	-4 (ix),a
   0A4F DD 7E 0F      [19] 1628 	ld	a,15 (ix)
   0A52 DD 77 FD      [19] 1629 	ld	-3 (ix),a
                           1630 ;src/main.c:161: if(cpct_isKeyPressed(Key_CursorRight) && x[0] < 76 ){
   0A55 79            [ 4] 1631 	ld	a,c
   0A56 B7            [ 4] 1632 	or	a, a
   0A57 28 1A         [12] 1633 	jr	Z,00125$
   0A59 46            [ 7] 1634 	ld	b,(hl)
   0A5A 78            [ 4] 1635 	ld	a,b
   0A5B D6 4C         [ 7] 1636 	sub	a, #0x4C
   0A5D 30 14         [12] 1637 	jr	NC,00125$
                           1638 ;src/main.c:162: x[0] += 1;
   0A5F 04            [ 4] 1639 	inc	b
   0A60 70            [ 7] 1640 	ld	(hl),b
                           1641 ;src/main.c:163: dir[0] = 6;
   0A61 DD 6E FE      [19] 1642 	ld	l,-2 (ix)
   0A64 DD 66 FF      [19] 1643 	ld	h,-1 (ix)
   0A67 36 06         [10] 1644 	ld	(hl),#0x06
                           1645 ;src/main.c:164: size[0] = 4;
   0A69 E1            [10] 1646 	pop	hl
   0A6A E5            [11] 1647 	push	hl
   0A6B 36 04         [10] 1648 	ld	(hl),#0x04
                           1649 ;src/main.c:165: sprite = gladis_quieto_dcha;
   0A6D 11r00r00      [10] 1650 	ld	de,#_gladis_quieto_dcha+0
   0A70 C3r34r0B      [10] 1651 	jp	00126$
   0A73                    1652 00125$:
                           1653 ;src/main.c:166: }else if(cpct_isKeyPressed(Key_CursorLeft) && x[0] > 0 ){
   0A73 E5            [11] 1654 	push	hl
   0A74 D5            [11] 1655 	push	de
   0A75 21 01 01      [10] 1656 	ld	hl,#0x0101
   0A78 CDr00r00      [17] 1657 	call	_cpct_isKeyPressed
   0A7B 7D            [ 4] 1658 	ld	a,l
   0A7C D1            [10] 1659 	pop	de
   0A7D E1            [10] 1660 	pop	hl
   0A7E B7            [ 4] 1661 	or	a, a
   0A7F 28 19         [12] 1662 	jr	Z,00121$
   0A81 7E            [ 7] 1663 	ld	a,(hl)
   0A82 B7            [ 4] 1664 	or	a, a
   0A83 28 15         [12] 1665 	jr	Z,00121$
                           1666 ;src/main.c:167: x[0] -= 1;
   0A85 C6 FF         [ 7] 1667 	add	a,#0xFF
   0A87 77            [ 7] 1668 	ld	(hl),a
                           1669 ;src/main.c:168: dir[0] = 4;
   0A88 DD 6E FE      [19] 1670 	ld	l,-2 (ix)
   0A8B DD 66 FF      [19] 1671 	ld	h,-1 (ix)
   0A8E 36 04         [10] 1672 	ld	(hl),#0x04
                           1673 ;src/main.c:169: size[0] = 4;
   0A90 E1            [10] 1674 	pop	hl
   0A91 E5            [11] 1675 	push	hl
   0A92 36 04         [10] 1676 	ld	(hl),#0x04
                           1677 ;src/main.c:170: sprite = gladis_quieto_izda;
   0A94 11r00r00      [10] 1678 	ld	de,#_gladis_quieto_izda+0
   0A97 C3r34r0B      [10] 1679 	jp	00126$
   0A9A                    1680 00121$:
                           1681 ;src/main.c:171: }else  if(cpct_isKeyPressed(Key_CursorDown) && y[0] < 180){
   0A9A D5            [11] 1682 	push	de
   0A9B 21 00 04      [10] 1683 	ld	hl,#0x0400
   0A9E CDr00r00      [17] 1684 	call	_cpct_isKeyPressed
   0AA1 4D            [ 4] 1685 	ld	c,l
   0AA2 D1            [10] 1686 	pop	de
   0AA3 DD 6E 06      [19] 1687 	ld	l,6 (ix)
   0AA6 DD 66 07      [19] 1688 	ld	h,7 (ix)
   0AA9 79            [ 4] 1689 	ld	a,c
   0AAA B7            [ 4] 1690 	or	a, a
   0AAB 28 1A         [12] 1691 	jr	Z,00117$
   0AAD 46            [ 7] 1692 	ld	b,(hl)
   0AAE 78            [ 4] 1693 	ld	a,b
   0AAF D6 B4         [ 7] 1694 	sub	a, #0xB4
   0AB1 30 14         [12] 1695 	jr	NC,00117$
                           1696 ;src/main.c:172: y[0] += 2;
   0AB3 04            [ 4] 1697 	inc	b
   0AB4 04            [ 4] 1698 	inc	b
   0AB5 70            [ 7] 1699 	ld	(hl),b
                           1700 ;src/main.c:173: dir[0] = 2;
   0AB6 DD 6E FE      [19] 1701 	ld	l,-2 (ix)
   0AB9 DD 66 FF      [19] 1702 	ld	h,-1 (ix)
   0ABC 36 02         [10] 1703 	ld	(hl),#0x02
                           1704 ;src/main.c:174: size[0] = 4;
   0ABE E1            [10] 1705 	pop	hl
   0ABF E5            [11] 1706 	push	hl
   0AC0 36 04         [10] 1707 	ld	(hl),#0x04
                           1708 ;src/main.c:175: sprite = gladis_quieto_dcha;
   0AC2 11r00r00      [10] 1709 	ld	de,#_gladis_quieto_dcha+0
   0AC5 18 6D         [12] 1710 	jr	00126$
   0AC7                    1711 00117$:
                           1712 ;src/main.c:176: }else if(cpct_isKeyPressed(Key_CursorUp) && y[0] > 0 ){
   0AC7 E5            [11] 1713 	push	hl
   0AC8 D5            [11] 1714 	push	de
   0AC9 21 00 01      [10] 1715 	ld	hl,#0x0100
   0ACC CDr00r00      [17] 1716 	call	_cpct_isKeyPressed
   0ACF 7D            [ 4] 1717 	ld	a,l
   0AD0 D1            [10] 1718 	pop	de
   0AD1 E1            [10] 1719 	pop	hl
   0AD2 B7            [ 4] 1720 	or	a, a
   0AD3 28 18         [12] 1721 	jr	Z,00113$
   0AD5 7E            [ 7] 1722 	ld	a,(hl)
   0AD6 B7            [ 4] 1723 	or	a, a
   0AD7 28 14         [12] 1724 	jr	Z,00113$
                           1725 ;src/main.c:177: y[0] -= 2;
   0AD9 C6 FE         [ 7] 1726 	add	a,#0xFE
   0ADB 77            [ 7] 1727 	ld	(hl),a
                           1728 ;src/main.c:178: dir[0] = 8;
   0ADC DD 6E FE      [19] 1729 	ld	l,-2 (ix)
   0ADF DD 66 FF      [19] 1730 	ld	h,-1 (ix)
   0AE2 36 08         [10] 1731 	ld	(hl),#0x08
                           1732 ;src/main.c:179: size[0] = 4;
   0AE4 E1            [10] 1733 	pop	hl
   0AE5 E5            [11] 1734 	push	hl
   0AE6 36 04         [10] 1735 	ld	(hl),#0x04
                           1736 ;src/main.c:180: sprite = gladis_quieto_dcha;
   0AE8 11r00r00      [10] 1737 	ld	de,#_gladis_quieto_dcha+0
   0AEB 18 47         [12] 1738 	jr	00126$
   0AED                    1739 00113$:
                           1740 ;src/main.c:181: }else  if(cpct_isKeyPressed(Key_Esc)){
   0AED D5            [11] 1741 	push	de
   0AEE 21 08 04      [10] 1742 	ld	hl,#0x0408
   0AF1 CDr00r00      [17] 1743 	call	_cpct_isKeyPressed
   0AF4 7D            [ 4] 1744 	ld	a,l
   0AF5 D1            [10] 1745 	pop	de
   0AF6 B7            [ 4] 1746 	or	a, a
   0AF7 28 0D         [12] 1747 	jr	Z,00110$
                           1748 ;src/main.c:182: finish[0] = 1;
   0AF9 DD 6E 08      [19] 1749 	ld	l,8 (ix)
   0AFC DD 66 09      [19] 1750 	ld	h,9 (ix)
   0AFF 36 01         [10] 1751 	ld	(hl),#0x01
   0B01 23            [ 6] 1752 	inc	hl
   0B02 36 00         [10] 1753 	ld	(hl),#0x00
   0B04 18 2E         [12] 1754 	jr	00126$
   0B06                    1755 00110$:
                           1756 ;src/main.c:183: }else if(cpct_isKeyPressed(Key_Space)){
   0B06 D5            [11] 1757 	push	de
   0B07 21 05 80      [10] 1758 	ld	hl,#0x8005
   0B0A CDr00r00      [17] 1759 	call	_cpct_isKeyPressed
   0B0D 7D            [ 4] 1760 	ld	a,l
   0B0E D1            [10] 1761 	pop	de
   0B0F B7            [ 4] 1762 	or	a, a
   0B10 28 22         [12] 1763 	jr	Z,00126$
                           1764 ;src/main.c:184: size[0] = 5;
   0B12 E1            [10] 1765 	pop	hl
   0B13 E5            [11] 1766 	push	hl
   0B14 36 05         [10] 1767 	ld	(hl),#0x05
                           1768 ;src/main.c:185: if(dir[0] == 6) {sprite = gladis_atk_dcha;}
   0B16 DD 6E FE      [19] 1769 	ld	l,-2 (ix)
   0B19 DD 66 FF      [19] 1770 	ld	h,-1 (ix)
   0B1C 6E            [ 7] 1771 	ld	l,(hl)
   0B1D 7D            [ 4] 1772 	ld	a,l
   0B1E D6 06         [ 7] 1773 	sub	a, #0x06
   0B20 20 05         [12] 1774 	jr	NZ,00105$
   0B22 11r00r00      [10] 1775 	ld	de,#_gladis_atk_dcha+0
   0B25 18 0D         [12] 1776 	jr	00126$
   0B27                    1777 00105$:
                           1778 ;src/main.c:186: else if(dir[0] == 4) {sprite = gladis_atk_izda;}
   0B27 7D            [ 4] 1779 	ld	a,l
   0B28 D6 04         [ 7] 1780 	sub	a, #0x04
   0B2A 20 05         [12] 1781 	jr	NZ,00102$
   0B2C 11r00r00      [10] 1782 	ld	de,#_gladis_atk_izda+0
   0B2F 18 03         [12] 1783 	jr	00126$
   0B31                    1784 00102$:
                           1785 ;src/main.c:187: else {sprite = gladis_quieto_dcha;} 
   0B31 11r00r00      [10] 1786 	ld	de,#_gladis_quieto_dcha+0
   0B34                    1787 00126$:
                           1788 ;src/main.c:189: return sprite;
   0B34 EB            [ 4] 1789 	ex	de,hl
   0B35 DD F9         [10] 1790 	ld	sp, ix
   0B37 DD E1         [14] 1791 	pop	ix
   0B39 C9            [10] 1792 	ret
                           1793 ;src/main.c:193: u8* move(u8 *x,u8 *y,u8 *s,u8 bound,u8 *dir,u8 *size){
                           1794 ;	---------------------------------
                           1795 ; Function move
                           1796 ; ---------------------------------
   0B3A                    1797 _move::
   0B3A DD E5         [15] 1798 	push	ix
   0B3C DD 21 00 00   [14] 1799 	ld	ix,#0
   0B40 DD 39         [15] 1800 	add	ix,sp
   0B42 21 E9 FF      [10] 1801 	ld	hl,#-23
   0B45 39            [11] 1802 	add	hl,sp
   0B46 F9            [ 6] 1803 	ld	sp,hl
                           1804 ;src/main.c:194: int px = x[0];
   0B47 DD 7E 04      [19] 1805 	ld	a,4 (ix)
   0B4A DD 77 FE      [19] 1806 	ld	-2 (ix),a
   0B4D DD 7E 05      [19] 1807 	ld	a,5 (ix)
   0B50 DD 77 FF      [19] 1808 	ld	-1 (ix),a
   0B53 DD 6E FE      [19] 1809 	ld	l,-2 (ix)
   0B56 DD 66 FF      [19] 1810 	ld	h,-1 (ix)
   0B59 7E            [ 7] 1811 	ld	a,(hl)
   0B5A DD 77 FC      [19] 1812 	ld	-4 (ix),a
   0B5D DD 36 FD 00   [19] 1813 	ld	-3 (ix),#0x00
                           1814 ;src/main.c:195: int py = y[0];
   0B61 DD 7E 06      [19] 1815 	ld	a,6 (ix)
   0B64 DD 77 F3      [19] 1816 	ld	-13 (ix),a
   0B67 DD 7E 07      [19] 1817 	ld	a,7 (ix)
   0B6A DD 77 F4      [19] 1818 	ld	-12 (ix),a
   0B6D DD 6E F3      [19] 1819 	ld	l,-13 (ix)
   0B70 DD 66 F4      [19] 1820 	ld	h,-12 (ix)
   0B73 7E            [ 7] 1821 	ld	a,(hl)
   0B74 DD 77 FA      [19] 1822 	ld	-6 (ix),a
   0B77 DD 36 FB 00   [19] 1823 	ld	-5 (ix),#0x00
                           1824 ;src/main.c:196: u8 *sprite = s;
   0B7B DD 7E 08      [19] 1825 	ld	a,8 (ix)
   0B7E DD 77 F8      [19] 1826 	ld	-8 (ix),a
   0B81 DD 7E 09      [19] 1827 	ld	a,9 (ix)
   0B84 DD 77 F9      [19] 1828 	ld	-7 (ix),a
                           1829 ;src/main.c:199: switch(dir[0]){
   0B87 DD 7E 0B      [19] 1830 	ld	a,11 (ix)
   0B8A DD 77 F6      [19] 1831 	ld	-10 (ix),a
   0B8D DD 7E 0C      [19] 1832 	ld	a,12 (ix)
   0B90 DD 77 F7      [19] 1833 	ld	-9 (ix),a
                           1834 ;src/main.c:198: if(bound == 1){
   0B93 DD 7E 0A      [19] 1835 	ld	a,10 (ix)
   0B96 3D            [ 4] 1836 	dec	a
   0B97 20 7C         [12] 1837 	jr	NZ,00126$
                           1838 ;src/main.c:199: switch(dir[0]){
   0B99 DD 6E F6      [19] 1839 	ld	l,-10 (ix)
   0B9C DD 66 F7      [19] 1840 	ld	h,-9 (ix)
   0B9F 7E            [ 7] 1841 	ld	a, (hl)
   0BA0 FE 02         [ 7] 1842 	cp	a,#0x02
   0BA2 28 0F         [12] 1843 	jr	Z,00101$
   0BA4 FE 04         [ 7] 1844 	cp	a,#0x04
   0BA6 28 5B         [12] 1845 	jr	Z,00104$
   0BA8 FE 06         [ 7] 1846 	cp	a,#0x06
   0BAA 28 22         [12] 1847 	jr	Z,00102$
   0BAC D6 08         [ 7] 1848 	sub	a, #0x08
   0BAE 28 38         [12] 1849 	jr	Z,00103$
   0BB0 C3r95r0E      [10] 1850 	jp	00127$
                           1851 ;src/main.c:200: case 2: 
   0BB3                    1852 00101$:
                           1853 ;src/main.c:201: dir[0] = 8;
   0BB3 DD 6E F6      [19] 1854 	ld	l,-10 (ix)
   0BB6 DD 66 F7      [19] 1855 	ld	h,-9 (ix)
   0BB9 36 08         [10] 1856 	ld	(hl),#0x08
                           1857 ;src/main.c:202: y[0] -= 2;
   0BBB DD 6E F3      [19] 1858 	ld	l,-13 (ix)
   0BBE DD 66 F4      [19] 1859 	ld	h,-12 (ix)
   0BC1 7E            [ 7] 1860 	ld	a,(hl)
   0BC2 C6 FE         [ 7] 1861 	add	a,#0xFE
   0BC4 DD 6E F3      [19] 1862 	ld	l,-13 (ix)
   0BC7 DD 66 F4      [19] 1863 	ld	h,-12 (ix)
   0BCA 77            [ 7] 1864 	ld	(hl),a
                           1865 ;src/main.c:203: break;
   0BCB C3r95r0E      [10] 1866 	jp	00127$
                           1867 ;src/main.c:204: case 6:
   0BCE                    1868 00102$:
                           1869 ;src/main.c:205: dir[0] = 4;
   0BCE DD 6E F6      [19] 1870 	ld	l,-10 (ix)
   0BD1 DD 66 F7      [19] 1871 	ld	h,-9 (ix)
   0BD4 36 04         [10] 1872 	ld	(hl),#0x04
                           1873 ;src/main.c:206: x[0] -= 1;
   0BD6 DD 6E FE      [19] 1874 	ld	l,-2 (ix)
   0BD9 DD 66 FF      [19] 1875 	ld	h,-1 (ix)
   0BDC 56            [ 7] 1876 	ld	d,(hl)
   0BDD 15            [ 4] 1877 	dec	d
   0BDE DD 6E FE      [19] 1878 	ld	l,-2 (ix)
   0BE1 DD 66 FF      [19] 1879 	ld	h,-1 (ix)
   0BE4 72            [ 7] 1880 	ld	(hl),d
                           1881 ;src/main.c:207: break;
   0BE5 C3r95r0E      [10] 1882 	jp	00127$
                           1883 ;src/main.c:208: case 8:
   0BE8                    1884 00103$:
                           1885 ;src/main.c:209: dir[0] = 6;
   0BE8 DD 6E F6      [19] 1886 	ld	l,-10 (ix)
   0BEB DD 66 F7      [19] 1887 	ld	h,-9 (ix)
   0BEE 36 06         [10] 1888 	ld	(hl),#0x06
                           1889 ;src/main.c:210: y[0] += 2;
   0BF0 DD 6E F3      [19] 1890 	ld	l,-13 (ix)
   0BF3 DD 66 F4      [19] 1891 	ld	h,-12 (ix)
   0BF6 7E            [ 7] 1892 	ld	a,(hl)
   0BF7 C6 02         [ 7] 1893 	add	a, #0x02
   0BF9 DD 6E F3      [19] 1894 	ld	l,-13 (ix)
   0BFC DD 66 F4      [19] 1895 	ld	h,-12 (ix)
   0BFF 77            [ 7] 1896 	ld	(hl),a
                           1897 ;src/main.c:211: break;
   0C00 C3r95r0E      [10] 1898 	jp	00127$
                           1899 ;src/main.c:212: case 4:
   0C03                    1900 00104$:
                           1901 ;src/main.c:213: dir[0] = 6;
   0C03 DD 6E F6      [19] 1902 	ld	l,-10 (ix)
   0C06 DD 66 F7      [19] 1903 	ld	h,-9 (ix)
   0C09 36 06         [10] 1904 	ld	(hl),#0x06
                           1905 ;src/main.c:214: x[0] += 1;
   0C0B DD 6E FE      [19] 1906 	ld	l,-2 (ix)
   0C0E DD 66 FF      [19] 1907 	ld	h,-1 (ix)
   0C11 34            [11] 1908 	inc	(hl)
                           1909 ;src/main.c:216: }
   0C12 C3r95r0E      [10] 1910 	jp	00127$
   0C15                    1911 00126$:
                           1912 ;src/main.c:219: int rnd = (rand()%4)+1;
   0C15 CDr00r00      [17] 1913 	call	_rand
   0C18 01 04 00      [10] 1914 	ld	bc,#0x0004
   0C1B C5            [11] 1915 	push	bc
   0C1C E5            [11] 1916 	push	hl
   0C1D CDr00r00      [17] 1917 	call	__modsint
   0C20 F1            [10] 1918 	pop	af
   0C21 F1            [10] 1919 	pop	af
   0C22 23            [ 6] 1920 	inc	hl
   0C23 E3            [19] 1921 	ex	(sp), hl
                           1922 ;src/main.c:222: if(scene[py/tileheight][px/tilewidth] == 2 ){
   0C24 DD 7E FB      [19] 1923 	ld	a,-5 (ix)
   0C27 07            [ 4] 1924 	rlca
   0C28 E6 01         [ 7] 1925 	and	a,#0x01
   0C2A DD 77 F5      [19] 1926 	ld	-11 (ix),a
   0C2D DD 7E FA      [19] 1927 	ld	a,-6 (ix)
   0C30 C6 0F         [ 7] 1928 	add	a, #0x0F
   0C32 DD 77 F1      [19] 1929 	ld	-15 (ix),a
   0C35 DD 7E FB      [19] 1930 	ld	a,-5 (ix)
   0C38 CE 00         [ 7] 1931 	adc	a, #0x00
   0C3A DD 77 F2      [19] 1932 	ld	-14 (ix),a
                           1933 ;src/main.c:226: size[0] = 4;
   0C3D DD 7E 0D      [19] 1934 	ld	a,13 (ix)
   0C40 DD 77 EF      [19] 1935 	ld	-17 (ix),a
   0C43 DD 7E 0E      [19] 1936 	ld	a,14 (ix)
   0C46 DD 77 F0      [19] 1937 	ld	-16 (ix),a
                           1938 ;src/main.c:220: if(rnd == 4){
   0C49 DD 7E E9      [19] 1939 	ld	a,-23 (ix)
   0C4C D6 04         [ 7] 1940 	sub	a, #0x04
   0C4E C2rF0r0C      [10] 1941 	jp	NZ,00123$
   0C51 DD 7E EA      [19] 1942 	ld	a,-22 (ix)
   0C54 B7            [ 4] 1943 	or	a, a
   0C55 C2rF0r0C      [10] 1944 	jp	NZ,00123$
                           1945 ;src/main.c:221: px +=1;
   0C58 DD 7E FC      [19] 1946 	ld	a,-4 (ix)
   0C5B C6 01         [ 7] 1947 	add	a, #0x01
   0C5D DD 77 EB      [19] 1948 	ld	-21 (ix),a
   0C60 DD 7E FD      [19] 1949 	ld	a,-3 (ix)
   0C63 CE 00         [ 7] 1950 	adc	a, #0x00
   0C65 DD 77 EC      [19] 1951 	ld	-20 (ix),a
                           1952 ;src/main.c:222: if(scene[py/tileheight][px/tilewidth] == 2 ){
   0C68 DD 7E FA      [19] 1953 	ld	a,-6 (ix)
   0C6B DD 77 ED      [19] 1954 	ld	-19 (ix),a
   0C6E DD 7E FB      [19] 1955 	ld	a,-5 (ix)
   0C71 DD 77 EE      [19] 1956 	ld	-18 (ix),a
   0C74 DD 7E F5      [19] 1957 	ld	a,-11 (ix)
   0C77 B7            [ 4] 1958 	or	a, a
   0C78 28 0C         [12] 1959 	jr	Z,00130$
   0C7A DD 7E F1      [19] 1960 	ld	a,-15 (ix)
   0C7D DD 77 ED      [19] 1961 	ld	-19 (ix),a
   0C80 DD 7E F2      [19] 1962 	ld	a,-14 (ix)
   0C83 DD 77 EE      [19] 1963 	ld	-18 (ix),a
   0C86                    1964 00130$:
   0C86 DD 6E ED      [19] 1965 	ld	l,-19 (ix)
   0C89 DD 66 EE      [19] 1966 	ld	h,-18 (ix)
   0C8C CB 2C         [ 8] 1967 	sra	h
   0C8E CB 1D         [ 8] 1968 	rr	l
   0C90 CB 2C         [ 8] 1969 	sra	h
   0C92 CB 1D         [ 8] 1970 	rr	l
   0C94 CB 2C         [ 8] 1971 	sra	h
   0C96 CB 1D         [ 8] 1972 	rr	l
   0C98 CB 2C         [ 8] 1973 	sra	h
   0C9A CB 1D         [ 8] 1974 	rr	l
   0C9C 29            [11] 1975 	add	hl, hl
   0C9D 11r00r00      [10] 1976 	ld	de,#_scene
   0CA0 19            [11] 1977 	add	hl,de
   0CA1 4E            [ 7] 1978 	ld	c,(hl)
   0CA2 23            [ 6] 1979 	inc	hl
   0CA3 46            [ 7] 1980 	ld	b,(hl)
   0CA4 D1            [10] 1981 	pop	de
   0CA5 E1            [10] 1982 	pop	hl
   0CA6 E5            [11] 1983 	push	hl
   0CA7 D5            [11] 1984 	push	de
   0CA8 DD CB EC 7E   [20] 1985 	bit	7, -20 (ix)
   0CAC 28 09         [12] 1986 	jr	Z,00131$
   0CAE DD 6E EB      [19] 1987 	ld	l,-21 (ix)
   0CB1 DD 66 EC      [19] 1988 	ld	h,-20 (ix)
   0CB4 23            [ 6] 1989 	inc	hl
   0CB5 23            [ 6] 1990 	inc	hl
   0CB6 23            [ 6] 1991 	inc	hl
   0CB7                    1992 00131$:
   0CB7 CB 2C         [ 8] 1993 	sra	h
   0CB9 CB 1D         [ 8] 1994 	rr	l
   0CBB CB 2C         [ 8] 1995 	sra	h
   0CBD CB 1D         [ 8] 1996 	rr	l
   0CBF 29            [11] 1997 	add	hl, hl
   0CC0 09            [11] 1998 	add	hl,bc
   0CC1 56            [ 7] 1999 	ld	d,(hl)
   0CC2 23            [ 6] 2000 	inc	hl
   0CC3 66            [ 7] 2001 	ld	h,(hl)
   0CC4 7A            [ 4] 2002 	ld	a,d
   0CC5 D6 02         [ 7] 2003 	sub	a,#0x02
   0CC7 C2r95r0E      [10] 2004 	jp	NZ,00127$
   0CCA B4            [ 4] 2005 	or	a,h
   0CCB C2r95r0E      [10] 2006 	jp	NZ,00127$
                           2007 ;src/main.c:223: sprite = chacho_quieto_dcha;
   0CCE DD 36 F8r00   [19] 2008 	ld	-8 (ix),#<(_chacho_quieto_dcha)
   0CD2 DD 36 F9s00   [19] 2009 	ld	-7 (ix),#>(_chacho_quieto_dcha)
                           2010 ;src/main.c:224: x[0] += 1;
   0CD6 DD 6E FE      [19] 2011 	ld	l,-2 (ix)
   0CD9 DD 66 FF      [19] 2012 	ld	h,-1 (ix)
   0CDC 34            [11] 2013 	inc	(hl)
                           2014 ;src/main.c:225: dir[0] = 6;
   0CDD DD 6E F6      [19] 2015 	ld	l,-10 (ix)
   0CE0 DD 66 F7      [19] 2016 	ld	h,-9 (ix)
   0CE3 36 06         [10] 2017 	ld	(hl),#0x06
                           2018 ;src/main.c:226: size[0] = 4;
   0CE5 DD 6E EF      [19] 2019 	ld	l,-17 (ix)
   0CE8 DD 66 F0      [19] 2020 	ld	h,-16 (ix)
   0CEB 36 04         [10] 2021 	ld	(hl),#0x04
   0CED C3r95r0E      [10] 2022 	jp	00127$
   0CF0                    2023 00123$:
                           2024 ;src/main.c:228: }else if(rnd == 3){
   0CF0 DD 7E E9      [19] 2025 	ld	a,-23 (ix)
   0CF3 D6 03         [ 7] 2026 	sub	a, #0x03
   0CF5 C2r7Fr0D      [10] 2027 	jp	NZ,00120$
   0CF8 DD 7E EA      [19] 2028 	ld	a,-22 (ix)
   0CFB B7            [ 4] 2029 	or	a, a
   0CFC C2r7Fr0D      [10] 2030 	jp	NZ,00120$
                           2031 ;src/main.c:229: px -=1;
   0CFF DD 4E FC      [19] 2032 	ld	c,-4 (ix)
   0D02 DD 46 FD      [19] 2033 	ld	b,-3 (ix)
   0D05 0B            [ 6] 2034 	dec	bc
                           2035 ;src/main.c:230: if(scene[py/tileheight][px/tilewidth] == 2 ){
   0D06 DD 6E FA      [19] 2036 	ld	l,-6 (ix)
   0D09 DD 66 FB      [19] 2037 	ld	h,-5 (ix)
   0D0C DD 7E F5      [19] 2038 	ld	a,-11 (ix)
   0D0F B7            [ 4] 2039 	or	a, a
   0D10 28 06         [12] 2040 	jr	Z,00132$
   0D12 DD 6E F1      [19] 2041 	ld	l,-15 (ix)
   0D15 DD 66 F2      [19] 2042 	ld	h,-14 (ix)
   0D18                    2043 00132$:
   0D18 CB 2C         [ 8] 2044 	sra	h
   0D1A CB 1D         [ 8] 2045 	rr	l
   0D1C CB 2C         [ 8] 2046 	sra	h
   0D1E CB 1D         [ 8] 2047 	rr	l
   0D20 CB 2C         [ 8] 2048 	sra	h
   0D22 CB 1D         [ 8] 2049 	rr	l
   0D24 CB 2C         [ 8] 2050 	sra	h
   0D26 CB 1D         [ 8] 2051 	rr	l
   0D28 29            [11] 2052 	add	hl, hl
   0D29 11r00r00      [10] 2053 	ld	de,#_scene
   0D2C 19            [11] 2054 	add	hl,de
   0D2D 5E            [ 7] 2055 	ld	e,(hl)
   0D2E 23            [ 6] 2056 	inc	hl
   0D2F 56            [ 7] 2057 	ld	d,(hl)
   0D30 61            [ 4] 2058 	ld	h,c
   0D31 68            [ 4] 2059 	ld	l,b
   0D32 CB 78         [ 8] 2060 	bit	7, b
   0D34 28 05         [12] 2061 	jr	Z,00133$
   0D36 03            [ 6] 2062 	inc	bc
   0D37 03            [ 6] 2063 	inc	bc
   0D38 03            [ 6] 2064 	inc	bc
   0D39 61            [ 4] 2065 	ld	h,c
   0D3A 68            [ 4] 2066 	ld	l,b
   0D3B                    2067 00133$:
   0D3B 7D            [ 4] 2068 	ld	a, l
   0D3C 6C            [ 4] 2069 	ld	l,h
   0D3D 67            [ 4] 2070 	ld	h,a
   0D3E CB 2C         [ 8] 2071 	sra	h
   0D40 CB 1D         [ 8] 2072 	rr	l
   0D42 CB 2C         [ 8] 2073 	sra	h
   0D44 CB 1D         [ 8] 2074 	rr	l
   0D46 29            [11] 2075 	add	hl, hl
   0D47 19            [11] 2076 	add	hl,de
   0D48 56            [ 7] 2077 	ld	d,(hl)
   0D49 23            [ 6] 2078 	inc	hl
   0D4A 66            [ 7] 2079 	ld	h,(hl)
   0D4B 7A            [ 4] 2080 	ld	a,d
   0D4C D6 02         [ 7] 2081 	sub	a,#0x02
   0D4E C2r95r0E      [10] 2082 	jp	NZ,00127$
   0D51 B4            [ 4] 2083 	or	a,h
   0D52 C2r95r0E      [10] 2084 	jp	NZ,00127$
                           2085 ;src/main.c:231: sprite = chacho_quieto_izda;
   0D55 DD 36 F8r00   [19] 2086 	ld	-8 (ix),#<(_chacho_quieto_izda)
   0D59 DD 36 F9s00   [19] 2087 	ld	-7 (ix),#>(_chacho_quieto_izda)
                           2088 ;src/main.c:232: x[0] -= 1;
   0D5D DD 6E FE      [19] 2089 	ld	l,-2 (ix)
   0D60 DD 66 FF      [19] 2090 	ld	h,-1 (ix)
   0D63 56            [ 7] 2091 	ld	d,(hl)
   0D64 15            [ 4] 2092 	dec	d
   0D65 DD 6E FE      [19] 2093 	ld	l,-2 (ix)
   0D68 DD 66 FF      [19] 2094 	ld	h,-1 (ix)
   0D6B 72            [ 7] 2095 	ld	(hl),d
                           2096 ;src/main.c:233: dir[0] = 4;
   0D6C DD 6E F6      [19] 2097 	ld	l,-10 (ix)
   0D6F DD 66 F7      [19] 2098 	ld	h,-9 (ix)
   0D72 36 04         [10] 2099 	ld	(hl),#0x04
                           2100 ;src/main.c:234: size[0] = 4;
   0D74 DD 6E EF      [19] 2101 	ld	l,-17 (ix)
   0D77 DD 66 F0      [19] 2102 	ld	h,-16 (ix)
   0D7A 36 04         [10] 2103 	ld	(hl),#0x04
   0D7C C3r95r0E      [10] 2104 	jp	00127$
   0D7F                    2105 00120$:
                           2106 ;src/main.c:222: if(scene[py/tileheight][px/tilewidth] == 2 ){
   0D7F DD 7E FD      [19] 2107 	ld	a,-3 (ix)
   0D82 07            [ 4] 2108 	rlca
   0D83 E6 01         [ 7] 2109 	and	a,#0x01
   0D85 DD 77 ED      [19] 2110 	ld	-19 (ix),a
   0D88 DD 4E FC      [19] 2111 	ld	c,-4 (ix)
   0D8B DD 46 FD      [19] 2112 	ld	b,-3 (ix)
   0D8E 03            [ 6] 2113 	inc	bc
   0D8F 03            [ 6] 2114 	inc	bc
   0D90 03            [ 6] 2115 	inc	bc
                           2116 ;src/main.c:236: }else if(rnd == 2){
   0D91 DD 7E E9      [19] 2117 	ld	a,-23 (ix)
   0D94 D6 02         [ 7] 2118 	sub	a, #0x02
   0D96 20 77         [12] 2119 	jr	NZ,00117$
   0D98 DD 7E EA      [19] 2120 	ld	a,-22 (ix)
   0D9B B7            [ 4] 2121 	or	a, a
   0D9C 20 71         [12] 2122 	jr	NZ,00117$
                           2123 ;src/main.c:237: py -=1;
   0D9E DD 5E FA      [19] 2124 	ld	e,-6 (ix)
   0DA1 DD 56 FB      [19] 2125 	ld	d,-5 (ix)
   0DA4 1B            [ 6] 2126 	dec	de
                           2127 ;src/main.c:238: if(scene[py/tileheight][px/tilewidth] == 2 ){
   0DA5 6B            [ 4] 2128 	ld	l, e
   0DA6 62            [ 4] 2129 	ld	h, d
   0DA7 CB 7A         [ 8] 2130 	bit	7, d
   0DA9 28 04         [12] 2131 	jr	Z,00134$
   0DAB 21 0F 00      [10] 2132 	ld	hl,#0x000F
   0DAE 19            [11] 2133 	add	hl,de
   0DAF                    2134 00134$:
   0DAF CB 2C         [ 8] 2135 	sra	h
   0DB1 CB 1D         [ 8] 2136 	rr	l
   0DB3 CB 2C         [ 8] 2137 	sra	h
   0DB5 CB 1D         [ 8] 2138 	rr	l
   0DB7 CB 2C         [ 8] 2139 	sra	h
   0DB9 CB 1D         [ 8] 2140 	rr	l
   0DBB CB 2C         [ 8] 2141 	sra	h
   0DBD CB 1D         [ 8] 2142 	rr	l
   0DBF 29            [11] 2143 	add	hl, hl
   0DC0 11r00r00      [10] 2144 	ld	de,#_scene
   0DC3 19            [11] 2145 	add	hl,de
   0DC4 5E            [ 7] 2146 	ld	e,(hl)
   0DC5 23            [ 6] 2147 	inc	hl
   0DC6 56            [ 7] 2148 	ld	d,(hl)
   0DC7 DD 6E FC      [19] 2149 	ld	l,-4 (ix)
   0DCA DD 66 FD      [19] 2150 	ld	h,-3 (ix)
   0DCD DD 7E ED      [19] 2151 	ld	a,-19 (ix)
   0DD0 B7            [ 4] 2152 	or	a, a
   0DD1 28 02         [12] 2153 	jr	Z,00135$
   0DD3 69            [ 4] 2154 	ld	l, c
   0DD4 60            [ 4] 2155 	ld	h, b
   0DD5                    2156 00135$:
   0DD5 CB 2C         [ 8] 2157 	sra	h
   0DD7 CB 1D         [ 8] 2158 	rr	l
   0DD9 CB 2C         [ 8] 2159 	sra	h
   0DDB CB 1D         [ 8] 2160 	rr	l
   0DDD 29            [11] 2161 	add	hl, hl
   0DDE 19            [11] 2162 	add	hl,de
   0DDF 56            [ 7] 2163 	ld	d,(hl)
   0DE0 23            [ 6] 2164 	inc	hl
   0DE1 66            [ 7] 2165 	ld	h,(hl)
   0DE2 7A            [ 4] 2166 	ld	a,d
   0DE3 D6 02         [ 7] 2167 	sub	a,#0x02
   0DE5 C2r95r0E      [10] 2168 	jp	NZ,00127$
   0DE8 B4            [ 4] 2169 	or	a,h
   0DE9 C2r95r0E      [10] 2170 	jp	NZ,00127$
                           2171 ;src/main.c:239: y[0] += 2;
   0DEC DD 6E F3      [19] 2172 	ld	l,-13 (ix)
   0DEF DD 66 F4      [19] 2173 	ld	h,-12 (ix)
   0DF2 7E            [ 7] 2174 	ld	a,(hl)
   0DF3 C6 02         [ 7] 2175 	add	a, #0x02
   0DF5 DD 6E F3      [19] 2176 	ld	l,-13 (ix)
   0DF8 DD 66 F4      [19] 2177 	ld	h,-12 (ix)
   0DFB 77            [ 7] 2178 	ld	(hl),a
                           2179 ;src/main.c:240: dir[0] = 2;
   0DFC DD 6E F6      [19] 2180 	ld	l,-10 (ix)
   0DFF DD 66 F7      [19] 2181 	ld	h,-9 (ix)
   0E02 36 02         [10] 2182 	ld	(hl),#0x02
                           2183 ;src/main.c:241: size[0] = 4;
   0E04 DD 6E EF      [19] 2184 	ld	l,-17 (ix)
   0E07 DD 66 F0      [19] 2185 	ld	h,-16 (ix)
   0E0A 36 04         [10] 2186 	ld	(hl),#0x04
   0E0C C3r95r0E      [10] 2187 	jp	00127$
   0E0F                    2188 00117$:
                           2189 ;src/main.c:243: }else if(rnd == 1){
   0E0F DD 7E E9      [19] 2190 	ld	a,-23 (ix)
   0E12 3D            [ 4] 2191 	dec	a
   0E13 C2r95r0E      [10] 2192 	jp	NZ,00127$
   0E16 DD 7E EA      [19] 2193 	ld	a,-22 (ix)
   0E19 B7            [ 4] 2194 	or	a, a
   0E1A 20 79         [12] 2195 	jr	NZ,00127$
                           2196 ;src/main.c:244: py +=1;
   0E1C DD 5E FA      [19] 2197 	ld	e,-6 (ix)
   0E1F DD 56 FB      [19] 2198 	ld	d,-5 (ix)
   0E22 13            [ 6] 2199 	inc	de
                           2200 ;src/main.c:245: if(scene[py/tileheight][px/tilewidth] == 2 ){
   0E23 6B            [ 4] 2201 	ld	l, e
   0E24 62            [ 4] 2202 	ld	h, d
   0E25 CB 7A         [ 8] 2203 	bit	7, d
   0E27 28 04         [12] 2204 	jr	Z,00136$
   0E29 21 0F 00      [10] 2205 	ld	hl,#0x000F
   0E2C 19            [11] 2206 	add	hl,de
   0E2D                    2207 00136$:
   0E2D CB 2C         [ 8] 2208 	sra	h
   0E2F CB 1D         [ 8] 2209 	rr	l
   0E31 CB 2C         [ 8] 2210 	sra	h
   0E33 CB 1D         [ 8] 2211 	rr	l
   0E35 CB 2C         [ 8] 2212 	sra	h
   0E37 CB 1D         [ 8] 2213 	rr	l
   0E39 CB 2C         [ 8] 2214 	sra	h
   0E3B CB 1D         [ 8] 2215 	rr	l
   0E3D 29            [11] 2216 	add	hl, hl
   0E3E 11r00r00      [10] 2217 	ld	de,#_scene
   0E41 19            [11] 2218 	add	hl,de
   0E42 7E            [ 7] 2219 	ld	a,(hl)
   0E43 DD 77 F1      [19] 2220 	ld	-15 (ix),a
   0E46 23            [ 6] 2221 	inc	hl
   0E47 7E            [ 7] 2222 	ld	a,(hl)
   0E48 DD 77 F2      [19] 2223 	ld	-14 (ix),a
   0E4B DD 5E FC      [19] 2224 	ld	e,-4 (ix)
   0E4E DD 66 FD      [19] 2225 	ld	h,-3 (ix)
   0E51 DD 7E ED      [19] 2226 	ld	a,-19 (ix)
   0E54 B7            [ 4] 2227 	or	a, a
   0E55 28 02         [12] 2228 	jr	Z,00137$
   0E57 59            [ 4] 2229 	ld	e,c
   0E58 60            [ 4] 2230 	ld	h,b
   0E59                    2231 00137$:
   0E59 6B            [ 4] 2232 	ld	l, e
   0E5A CB 2C         [ 8] 2233 	sra	h
   0E5C CB 1D         [ 8] 2234 	rr	l
   0E5E CB 2C         [ 8] 2235 	sra	h
   0E60 CB 1D         [ 8] 2236 	rr	l
   0E62 29            [11] 2237 	add	hl, hl
   0E63 DD 5E F1      [19] 2238 	ld	e,-15 (ix)
   0E66 DD 56 F2      [19] 2239 	ld	d,-14 (ix)
   0E69 19            [11] 2240 	add	hl,de
   0E6A 56            [ 7] 2241 	ld	d,(hl)
   0E6B 23            [ 6] 2242 	inc	hl
   0E6C 66            [ 7] 2243 	ld	h,(hl)
   0E6D 7A            [ 4] 2244 	ld	a,d
   0E6E D6 02         [ 7] 2245 	sub	a,#0x02
   0E70 20 23         [12] 2246 	jr	NZ,00127$
   0E72 B4            [ 4] 2247 	or	a,h
   0E73 20 20         [12] 2248 	jr	NZ,00127$
                           2249 ;src/main.c:246: y[0] -= 2;
   0E75 DD 6E F3      [19] 2250 	ld	l,-13 (ix)
   0E78 DD 66 F4      [19] 2251 	ld	h,-12 (ix)
   0E7B 7E            [ 7] 2252 	ld	a,(hl)
   0E7C C6 FE         [ 7] 2253 	add	a,#0xFE
   0E7E DD 6E F3      [19] 2254 	ld	l,-13 (ix)
   0E81 DD 66 F4      [19] 2255 	ld	h,-12 (ix)
   0E84 77            [ 7] 2256 	ld	(hl),a
                           2257 ;src/main.c:247: dir[0] = 8;
   0E85 DD 6E F6      [19] 2258 	ld	l,-10 (ix)
   0E88 DD 66 F7      [19] 2259 	ld	h,-9 (ix)
   0E8B 36 08         [10] 2260 	ld	(hl),#0x08
                           2261 ;src/main.c:248: size[0] = 4;
   0E8D DD 6E EF      [19] 2262 	ld	l,-17 (ix)
   0E90 DD 66 F0      [19] 2263 	ld	h,-16 (ix)
   0E93 36 04         [10] 2264 	ld	(hl),#0x04
   0E95                    2265 00127$:
                           2266 ;src/main.c:255: return sprite;
   0E95 DD 6E F8      [19] 2267 	ld	l,-8 (ix)
   0E98 DD 66 F9      [19] 2268 	ld	h,-7 (ix)
   0E9B DD F9         [10] 2269 	ld	sp, ix
   0E9D DD E1         [14] 2270 	pop	ix
   0E9F C9            [10] 2271 	ret
                           2272 ;src/main.c:260: TPlayer *create_Player(u8 x,u8 y,u8 *sprite,u8 life,u8 dir,u8 size){
                           2273 ;	---------------------------------
                           2274 ; Function create_Player
                           2275 ; ---------------------------------
   0EA0                    2276 _create_Player::
   0EA0 DD E5         [15] 2277 	push	ix
   0EA2 DD 21 00 00   [14] 2278 	ld	ix,#0
   0EA6 DD 39         [15] 2279 	add	ix,sp
                           2280 ;src/main.c:261: TPlayer *player = malloc(sizeof *player);
   0EA8 21 07 00      [10] 2281 	ld	hl,#0x0007
   0EAB E5            [11] 2282 	push	hl
   0EAC CDr00r00      [17] 2283 	call	_malloc
   0EAF F1            [10] 2284 	pop	af
   0EB0 EB            [ 4] 2285 	ex	de,hl
                           2286 ;src/main.c:262: assert(player != NULL);
   0EB1 7B            [ 4] 2287 	ld	a,e
   0EB2 B2            [ 4] 2288 	or	a, d
   0EB3 20 16         [12] 2289 	jr	NZ,00104$
   0EB5 21rFFr0E      [10] 2290 	ld	hl,#___str_2
   0EB8 D5            [11] 2291 	push	de
   0EB9 01 06 01      [10] 2292 	ld	bc,#0x0106
   0EBC C5            [11] 2293 	push	bc
   0EBD 01r0Er0F      [10] 2294 	ld	bc,#___str_3
   0EC0 C5            [11] 2295 	push	bc
   0EC1 E5            [11] 2296 	push	hl
   0EC2 CDr00r00      [17] 2297 	call	__assert
   0EC5 21 06 00      [10] 2298 	ld	hl,#6
   0EC8 39            [11] 2299 	add	hl,sp
   0EC9 F9            [ 6] 2300 	ld	sp,hl
   0ECA D1            [10] 2301 	pop	de
   0ECB                    2302 00104$:
                           2303 ;src/main.c:264: player->x = x;
   0ECB DD 7E 04      [19] 2304 	ld	a,4 (ix)
   0ECE 12            [ 7] 2305 	ld	(de),a
                           2306 ;src/main.c:265: player->y = y;
   0ECF 6B            [ 4] 2307 	ld	l, e
   0ED0 62            [ 4] 2308 	ld	h, d
   0ED1 23            [ 6] 2309 	inc	hl
   0ED2 DD 7E 05      [19] 2310 	ld	a,5 (ix)
   0ED5 77            [ 7] 2311 	ld	(hl),a
                           2312 ;src/main.c:266: player->sprite = sprite;
   0ED6 6B            [ 4] 2313 	ld	l, e
   0ED7 62            [ 4] 2314 	ld	h, d
   0ED8 23            [ 6] 2315 	inc	hl
   0ED9 23            [ 6] 2316 	inc	hl
   0EDA DD 7E 06      [19] 2317 	ld	a,6 (ix)
   0EDD 77            [ 7] 2318 	ld	(hl),a
   0EDE 23            [ 6] 2319 	inc	hl
   0EDF DD 7E 07      [19] 2320 	ld	a,7 (ix)
   0EE2 77            [ 7] 2321 	ld	(hl),a
                           2322 ;src/main.c:267: player->life = life;
   0EE3 21 04 00      [10] 2323 	ld	hl,#0x0004
   0EE6 19            [11] 2324 	add	hl,de
   0EE7 DD 7E 08      [19] 2325 	ld	a,8 (ix)
   0EEA 77            [ 7] 2326 	ld	(hl),a
                           2327 ;src/main.c:268: player->dir = dir;
   0EEB 21 05 00      [10] 2328 	ld	hl,#0x0005
   0EEE 19            [11] 2329 	add	hl,de
   0EEF DD 7E 09      [19] 2330 	ld	a,9 (ix)
   0EF2 77            [ 7] 2331 	ld	(hl),a
                           2332 ;src/main.c:269: player->size = size;
   0EF3 21 06 00      [10] 2333 	ld	hl,#0x0006
   0EF6 19            [11] 2334 	add	hl,de
   0EF7 DD 7E 0A      [19] 2335 	ld	a,10 (ix)
   0EFA 77            [ 7] 2336 	ld	(hl),a
                           2337 ;src/main.c:271: return player;
   0EFB EB            [ 4] 2338 	ex	de,hl
   0EFC DD E1         [14] 2339 	pop	ix
   0EFE C9            [10] 2340 	ret
   0EFF                    2341 ___str_2:
   0EFF 70 6C 61 79 65 72  2342 	.ascii "player != NULL"
        20 21 3D 20 4E 55
        4C 4C
   0F0D 00                 2343 	.db 0x00
   0F0E                    2344 ___str_3:
   0F0E 73 72 63 2F 6D 61  2345 	.ascii "src/main.c"
        69 6E 2E 63
   0F18 00                 2346 	.db 0x00
                           2347 ;src/main.c:276: void drawSomething(){
                           2348 ;	---------------------------------
                           2349 ; Function drawSomething
                           2350 ; ---------------------------------
   0F19                    2351 _drawSomething::
                           2352 ;src/main.c:278: }
   0F19 C9            [10] 2353 	ret
                           2354 ;src/main.c:282: void game(){  
                           2355 ;	---------------------------------
                           2356 ; Function game
                           2357 ; ---------------------------------
   0F1A                    2358 _game::
   0F1A DD E5         [15] 2359 	push	ix
   0F1C DD 21 00 00   [14] 2360 	ld	ix,#0
   0F20 DD 39         [15] 2361 	add	ix,sp
   0F22 21 ED FF      [10] 2362 	ld	hl,#-19
   0F25 39            [11] 2363 	add	hl,sp
   0F26 F9            [ 6] 2364 	ld	sp,hl
                           2365 ;src/main.c:283: TPlayer *p = create_Player(0,80,gladis_quieto_dcha,10,6,4);
   0F27 11r00r00      [10] 2366 	ld	de,#_gladis_quieto_dcha
   0F2A 21 06 04      [10] 2367 	ld	hl,#0x0406
   0F2D E5            [11] 2368 	push	hl
   0F2E 3E 0A         [ 7] 2369 	ld	a,#0x0A
   0F30 F5            [11] 2370 	push	af
   0F31 33            [ 6] 2371 	inc	sp
   0F32 D5            [11] 2372 	push	de
   0F33 21 00 50      [10] 2373 	ld	hl,#0x5000
   0F36 E5            [11] 2374 	push	hl
   0F37 CDrA0r0E      [17] 2375 	call	_create_Player
   0F3A F1            [10] 2376 	pop	af
   0F3B F1            [10] 2377 	pop	af
   0F3C F1            [10] 2378 	pop	af
   0F3D 33            [ 6] 2379 	inc	sp
   0F3E EB            [ 4] 2380 	ex	de,hl
                           2381 ;src/main.c:284: TPlayer *e = create_Player(15,120,chacho_quieto_dcha,10,6,4);
   0F3F 01r00r00      [10] 2382 	ld	bc,#_chacho_quieto_dcha
   0F42 D5            [11] 2383 	push	de
   0F43 21 06 04      [10] 2384 	ld	hl,#0x0406
   0F46 E5            [11] 2385 	push	hl
   0F47 3E 0A         [ 7] 2386 	ld	a,#0x0A
   0F49 F5            [11] 2387 	push	af
   0F4A 33            [ 6] 2388 	inc	sp
   0F4B C5            [11] 2389 	push	bc
   0F4C 21 0F 78      [10] 2390 	ld	hl,#0x780F
   0F4F E5            [11] 2391 	push	hl
   0F50 CDrA0r0E      [17] 2392 	call	_create_Player
   0F53 F1            [10] 2393 	pop	af
   0F54 F1            [10] 2394 	pop	af
   0F55 F1            [10] 2395 	pop	af
   0F56 33            [ 6] 2396 	inc	sp
   0F57 D1            [10] 2397 	pop	de
   0F58 DD 75 EF      [19] 2398 	ld	-17 (ix),l
   0F5B DD 74 F0      [19] 2399 	ld	-16 (ix),h
                           2400 ;src/main.c:288: int finish = 0,i=1;
   0F5E DD 36 F1 00   [19] 2401 	ld	-15 (ix),#0x00
   0F62 DD 36 F2 00   [19] 2402 	ld	-14 (ix),#0x00
                           2403 ;src/main.c:294: u8 bound =0;;
   0F66 DD 36 FF 00   [19] 2404 	ld	-1 (ix),#0x00
                           2405 ;src/main.c:299: cpct_clearScreen(0);
   0F6A D5            [11] 2406 	push	de
   0F6B 21 00 40      [10] 2407 	ld	hl,#0x4000
   0F6E E5            [11] 2408 	push	hl
   0F6F AF            [ 4] 2409 	xor	a, a
   0F70 F5            [11] 2410 	push	af
   0F71 33            [ 6] 2411 	inc	sp
   0F72 26 C0         [ 7] 2412 	ld	h, #0xC0
   0F74 E5            [11] 2413 	push	hl
   0F75 CDr00r00      [17] 2414 	call	_cpct_memset
   0F78 21 01 00      [10] 2415 	ld	hl,#0x0001
   0F7B E5            [11] 2416 	push	hl
   0F7C CDr4Fr04      [17] 2417 	call	_drawMap
   0F7F F1            [10] 2418 	pop	af
   0F80 D1            [10] 2419 	pop	de
                           2420 ;src/main.c:302: while (1){
   0F81                    2421 00104$:
                           2422 ;src/main.c:305: cpct_waitVSYNC();
   0F81 D5            [11] 2423 	push	de
   0F82 CDr00r00      [17] 2424 	call	_cpct_waitVSYNC
   0F85 D1            [10] 2425 	pop	de
                           2426 ;src/main.c:307: cleanScreenPlayers(p,e);
   0F86 D5            [11] 2427 	push	de
   0F87 DD 6E EF      [19] 2428 	ld	l,-17 (ix)
   0F8A DD 66 F0      [19] 2429 	ld	h,-16 (ix)
   0F8D E5            [11] 2430 	push	hl
   0F8E D5            [11] 2431 	push	de
   0F8F CDr0Fr06      [17] 2432 	call	_cleanScreenPlayers
   0F92 F1            [10] 2433 	pop	af
   0F93 F1            [10] 2434 	pop	af
   0F94 D1            [10] 2435 	pop	de
                           2436 ;src/main.c:309: lx = p->x;
   0F95 1A            [ 7] 2437 	ld	a,(de)
   0F96 DD 77 EE      [19] 2438 	ld	-18 (ix),a
                           2439 ;src/main.c:310: ly = p->y;
   0F99 21 01 00      [10] 2440 	ld	hl,#0x0001
   0F9C 19            [11] 2441 	add	hl,de
   0F9D DD 75 F9      [19] 2442 	ld	-7 (ix),l
   0FA0 DD 74 FA      [19] 2443 	ld	-6 (ix),h
   0FA3 DD 6E F9      [19] 2444 	ld	l,-7 (ix)
   0FA6 DD 66 FA      [19] 2445 	ld	h,-6 (ix)
   0FA9 7E            [ 7] 2446 	ld	a,(hl)
   0FAA DD 77 ED      [19] 2447 	ld	-19 (ix),a
                           2448 ;src/main.c:311: lex = e->x;
   0FAD DD 6E EF      [19] 2449 	ld	l,-17 (ix)
   0FB0 DD 66 F0      [19] 2450 	ld	h,-16 (ix)
   0FB3 7E            [ 7] 2451 	ld	a,(hl)
   0FB4 DD 77 F4      [19] 2452 	ld	-12 (ix),a
                           2453 ;src/main.c:312: ley = e->y;
   0FB7 DD 7E EF      [19] 2454 	ld	a,-17 (ix)
   0FBA C6 01         [ 7] 2455 	add	a, #0x01
   0FBC DD 77 FD      [19] 2456 	ld	-3 (ix),a
   0FBF DD 7E F0      [19] 2457 	ld	a,-16 (ix)
   0FC2 CE 00         [ 7] 2458 	adc	a, #0x00
   0FC4 DD 77 FE      [19] 2459 	ld	-2 (ix),a
   0FC7 DD 6E FD      [19] 2460 	ld	l,-3 (ix)
   0FCA DD 66 FE      [19] 2461 	ld	h,-2 (ix)
   0FCD 7E            [ 7] 2462 	ld	a,(hl)
   0FCE DD 77 F3      [19] 2463 	ld	-13 (ix),a
                           2464 ;src/main.c:314: cpct_scanKeyboard_f();
   0FD1 D5            [11] 2465 	push	de
   0FD2 CDr00r00      [17] 2466 	call	_cpct_scanKeyboard_f
   0FD5 D1            [10] 2467 	pop	de
                           2468 ;src/main.c:315: p->sprite  = checkKeyboard(&p->x,&p->y,&finish,p->sprite,&p->dir,&p->size);
   0FD6 21 02 00      [10] 2469 	ld	hl,#0x0002
   0FD9 19            [11] 2470 	add	hl,de
   0FDA DD 75 FB      [19] 2471 	ld	-5 (ix),l
   0FDD DD 74 FC      [19] 2472 	ld	-4 (ix),h
   0FE0 21 06 00      [10] 2473 	ld	hl,#0x0006
   0FE3 19            [11] 2474 	add	hl,de
   0FE4 4D            [ 4] 2475 	ld	c,l
   0FE5 44            [ 4] 2476 	ld	b,h
   0FE6 21 05 00      [10] 2477 	ld	hl,#0x0005
   0FE9 19            [11] 2478 	add	hl,de
   0FEA DD 75 F7      [19] 2479 	ld	-9 (ix),l
   0FED DD 74 F8      [19] 2480 	ld	-8 (ix),h
   0FF0 DD 6E FB      [19] 2481 	ld	l,-5 (ix)
   0FF3 DD 66 FC      [19] 2482 	ld	h,-4 (ix)
   0FF6 7E            [ 7] 2483 	ld	a,(hl)
   0FF7 DD 77 F5      [19] 2484 	ld	-11 (ix),a
   0FFA 23            [ 6] 2485 	inc	hl
   0FFB 7E            [ 7] 2486 	ld	a,(hl)
   0FFC DD 77 F6      [19] 2487 	ld	-10 (ix),a
   0FFF 21 04 00      [10] 2488 	ld	hl,#0x0004
   1002 39            [11] 2489 	add	hl,sp
   1003 D5            [11] 2490 	push	de
   1004 C5            [11] 2491 	push	bc
   1005 DD 4E F7      [19] 2492 	ld	c,-9 (ix)
   1008 DD 46 F8      [19] 2493 	ld	b,-8 (ix)
   100B C5            [11] 2494 	push	bc
   100C DD 4E F5      [19] 2495 	ld	c,-11 (ix)
   100F DD 46 F6      [19] 2496 	ld	b,-10 (ix)
   1012 C5            [11] 2497 	push	bc
   1013 E5            [11] 2498 	push	hl
   1014 DD 6E F9      [19] 2499 	ld	l,-7 (ix)
   1017 DD 66 FA      [19] 2500 	ld	h,-6 (ix)
   101A E5            [11] 2501 	push	hl
   101B D5            [11] 2502 	push	de
   101C CDr1Er0A      [17] 2503 	call	_checkKeyboard
   101F FD 21 0C 00   [14] 2504 	ld	iy,#12
   1023 FD 39         [15] 2505 	add	iy,sp
   1025 FD F9         [10] 2506 	ld	sp,iy
   1027 45            [ 4] 2507 	ld	b,l
   1028 4C            [ 4] 2508 	ld	c,h
   1029 D1            [10] 2509 	pop	de
   102A DD 6E FB      [19] 2510 	ld	l,-5 (ix)
   102D DD 66 FC      [19] 2511 	ld	h,-4 (ix)
   1030 70            [ 7] 2512 	ld	(hl),b
   1031 23            [ 6] 2513 	inc	hl
   1032 71            [ 7] 2514 	ld	(hl),c
                           2515 ;src/main.c:316: e->sprite = move(&e->x,&e->y,e->sprite,bound,&e->dir,&e->size);
   1033 DD 7E EF      [19] 2516 	ld	a,-17 (ix)
   1036 C6 02         [ 7] 2517 	add	a, #0x02
   1038 DD 77 F5      [19] 2518 	ld	-11 (ix),a
   103B DD 7E F0      [19] 2519 	ld	a,-16 (ix)
   103E CE 00         [ 7] 2520 	adc	a, #0x00
   1040 DD 77 F6      [19] 2521 	ld	-10 (ix),a
   1043 FD 21 06 00   [14] 2522 	ld	iy,#0x0006
   1047 DD 4E EF      [19] 2523 	ld	c,-17 (ix)
   104A DD 46 F0      [19] 2524 	ld	b,-16 (ix)
   104D FD 09         [15] 2525 	add	iy, bc
   104F DD 7E EF      [19] 2526 	ld	a,-17 (ix)
   1052 C6 05         [ 7] 2527 	add	a, #0x05
   1054 DD 77 F7      [19] 2528 	ld	-9 (ix),a
   1057 DD 7E F0      [19] 2529 	ld	a,-16 (ix)
   105A CE 00         [ 7] 2530 	adc	a, #0x00
   105C DD 77 F8      [19] 2531 	ld	-8 (ix),a
   105F DD 6E F5      [19] 2532 	ld	l,-11 (ix)
   1062 DD 66 F6      [19] 2533 	ld	h,-10 (ix)
   1065 4E            [ 7] 2534 	ld	c,(hl)
   1066 23            [ 6] 2535 	inc	hl
   1067 46            [ 7] 2536 	ld	b,(hl)
   1068 D5            [11] 2537 	push	de
   1069 FD E5         [15] 2538 	push	iy
   106B DD 6E F7      [19] 2539 	ld	l,-9 (ix)
   106E DD 66 F8      [19] 2540 	ld	h,-8 (ix)
   1071 E5            [11] 2541 	push	hl
   1072 DD 7E FF      [19] 2542 	ld	a,-1 (ix)
   1075 F5            [11] 2543 	push	af
   1076 33            [ 6] 2544 	inc	sp
   1077 C5            [11] 2545 	push	bc
   1078 DD 6E FD      [19] 2546 	ld	l,-3 (ix)
   107B DD 66 FE      [19] 2547 	ld	h,-2 (ix)
   107E E5            [11] 2548 	push	hl
   107F DD 6E EF      [19] 2549 	ld	l,-17 (ix)
   1082 DD 66 F0      [19] 2550 	ld	h,-16 (ix)
   1085 E5            [11] 2551 	push	hl
   1086 CDr3Ar0B      [17] 2552 	call	_move
   1089 FD 21 0B 00   [14] 2553 	ld	iy,#11
   108D FD 39         [15] 2554 	add	iy,sp
   108F FD F9         [10] 2555 	ld	sp,iy
   1091 45            [ 4] 2556 	ld	b,l
   1092 4C            [ 4] 2557 	ld	c,h
   1093 D1            [10] 2558 	pop	de
   1094 DD 6E F5      [19] 2559 	ld	l,-11 (ix)
   1097 DD 66 F6      [19] 2560 	ld	h,-10 (ix)
   109A 70            [ 7] 2561 	ld	(hl),b
   109B 23            [ 6] 2562 	inc	hl
   109C 71            [ 7] 2563 	ld	(hl),c
                           2564 ;src/main.c:318: checkBoundsCollisions(&p->x,&p->y,lx,ly);
   109D D5            [11] 2565 	push	de
   109E DD 66 ED      [19] 2566 	ld	h,-19 (ix)
   10A1 DD 6E EE      [19] 2567 	ld	l,-18 (ix)
   10A4 E5            [11] 2568 	push	hl
   10A5 DD 6E F9      [19] 2569 	ld	l,-7 (ix)
   10A8 DD 66 FA      [19] 2570 	ld	h,-6 (ix)
   10AB E5            [11] 2571 	push	hl
   10AC D5            [11] 2572 	push	de
   10AD CDr1Ar07      [17] 2573 	call	_checkBoundsCollisions
   10B0 21 06 00      [10] 2574 	ld	hl,#6
   10B3 39            [11] 2575 	add	hl,sp
   10B4 F9            [ 6] 2576 	ld	sp,hl
   10B5 DD 66 F3      [19] 2577 	ld	h,-13 (ix)
   10B8 DD 6E F4      [19] 2578 	ld	l,-12 (ix)
   10BB E5            [11] 2579 	push	hl
   10BC DD 6E FD      [19] 2580 	ld	l,-3 (ix)
   10BF DD 66 FE      [19] 2581 	ld	h,-2 (ix)
   10C2 E5            [11] 2582 	push	hl
   10C3 DD 6E EF      [19] 2583 	ld	l,-17 (ix)
   10C6 DD 66 F0      [19] 2584 	ld	h,-16 (ix)
   10C9 E5            [11] 2585 	push	hl
   10CA CDr1Ar07      [17] 2586 	call	_checkBoundsCollisions
   10CD F1            [10] 2587 	pop	af
   10CE F1            [10] 2588 	pop	af
   10CF F1            [10] 2589 	pop	af
   10D0 D1            [10] 2590 	pop	de
   10D1 DD 75 FF      [19] 2591 	ld	-1 (ix),l
                           2592 ;src/main.c:322: drawPlayers(p,e);
   10D4 D5            [11] 2593 	push	de
   10D5 DD 6E EF      [19] 2594 	ld	l,-17 (ix)
   10D8 DD 66 F0      [19] 2595 	ld	h,-16 (ix)
   10DB E5            [11] 2596 	push	hl
   10DC D5            [11] 2597 	push	de
   10DD CDr86r06      [17] 2598 	call	_drawPlayers
   10E0 F1            [10] 2599 	pop	af
   10E1 F1            [10] 2600 	pop	af
   10E2 D1            [10] 2601 	pop	de
                           2602 ;src/main.c:325: if(finish == 1) {
   10E3 DD 7E F1      [19] 2603 	ld	a,-15 (ix)
   10E6 3D            [ 4] 2604 	dec	a
   10E7 C2r81r0F      [10] 2605 	jp	NZ,00104$
   10EA DD 7E F2      [19] 2606 	ld	a,-14 (ix)
   10ED B7            [ 4] 2607 	or	a, a
   10EE C2r81r0F      [10] 2608 	jp	NZ,00104$
                           2609 ;src/main.c:326: free(p);
   10F1 D5            [11] 2610 	push	de
   10F2 CDr00r00      [17] 2611 	call	_free
   10F5 F1            [10] 2612 	pop	af
                           2613 ;src/main.c:327: free(e);
   10F6 C1            [10] 2614 	pop	bc
   10F7 E1            [10] 2615 	pop	hl
   10F8 E5            [11] 2616 	push	hl
   10F9 C5            [11] 2617 	push	bc
   10FA E5            [11] 2618 	push	hl
   10FB CDr00r00      [17] 2619 	call	_free
                           2620 ;src/main.c:328: return;}
   10FE DD F9         [10] 2621 	ld	sp,ix
   1100 DD E1         [14] 2622 	pop	ix
   1102 C9            [10] 2623 	ret
                           2624 ;src/main.c:336: void main(void) {
                           2625 ;	---------------------------------
                           2626 ; Function main
                           2627 ; ---------------------------------
   1103                    2628 _main::
                           2629 ;src/main.c:338: init();
   1103 CDr00r00      [17] 2630 	call	_init
                           2631 ;src/main.c:342: while(1){
   1106                    2632 00102$:
                           2633 ;src/main.c:343: menu();
   1106 CDrE9r03      [17] 2634 	call	_menu
                           2635 ;src/main.c:345: game();
   1109 CDr1Ar0F      [17] 2636 	call	_game
   110C 18 F8         [12] 2637 	jr	00102$
                           2638 	.area _CODE
                           2639 	.area _INITIALIZER
                           2640 	.area _CABS (ABS)
=======
                             14 	.globl _drawVida
                             15 	.globl _drawFatiga
                             16 	.globl _checkSprite
                             17 	.globl _checkCollisions
                             18 	.globl _menu
                             19 	.globl _init
                             20 	.globl _cpct_getScreenPtr
                             21 	.globl _cpct_setPalette
                             22 	.globl _cpct_fw2hw
                             23 	.globl _cpct_waitVSYNC
                             24 	.globl _cpct_setVideoMode
                             25 	.globl _cpct_drawStringM0
                             26 	.globl _cpct_drawSolidBox
                             27 	.globl _cpct_drawSpriteMasked
                             28 	.globl _cpct_isKeyPressed
                             29 	.globl _cpct_scanKeyboard_f
                             30 	.globl _cpct_memset
                             31 	.globl _cpct_disableFirmware
                             32 	.globl _g_palette
                             33 ;--------------------------------------------------------
                             34 ; special function registers
                             35 ;--------------------------------------------------------
                             36 ;--------------------------------------------------------
                             37 ; ram data
                             38 ;--------------------------------------------------------
                             39 	.area _DATA
                             40 ;--------------------------------------------------------
                             41 ; ram data
                             42 ;--------------------------------------------------------
                             43 	.area _INITIALIZED
                             44 ;--------------------------------------------------------
                             45 ; absolute external ram data
                             46 ;--------------------------------------------------------
                             47 	.area _DABS (ABS)
                             48 ;--------------------------------------------------------
                             49 ; global & static initialisations
                             50 ;--------------------------------------------------------
                             51 	.area _HOME
                             52 	.area _GSINIT
                             53 	.area _GSFINAL
                             54 	.area _GSINIT
                             55 ;--------------------------------------------------------
                             56 ; Home
                             57 ;--------------------------------------------------------
                             58 	.area _HOME
                             59 	.area _HOME
                             60 ;--------------------------------------------------------
                             61 ; code
                             62 ;--------------------------------------------------------
                             63 	.area _CODE
                             64 ;src/main.c:47: void init(){
                             65 ;	---------------------------------
                             66 ; Function init
                             67 ; ---------------------------------
   0000                      68 _init::
                             69 ;src/main.c:48: cpct_disableFirmware();
   0000 CDr00r00      [17]   70 	call	_cpct_disableFirmware
                             71 ;src/main.c:49: cpct_setVideoMode(0);
   0003 AF            [ 4]   72 	xor	a, a
   0004 F5            [11]   73 	push	af
   0005 33            [ 6]   74 	inc	sp
   0006 CDr00r00      [17]   75 	call	_cpct_setVideoMode
   0009 33            [ 6]   76 	inc	sp
                             77 ;src/main.c:50: cpct_fw2hw(g_palette,4);
   000A 11r25r00      [10]   78 	ld	de,#_g_palette
   000D 3E 04         [ 7]   79 	ld	a,#0x04
   000F F5            [11]   80 	push	af
   0010 33            [ 6]   81 	inc	sp
   0011 D5            [11]   82 	push	de
   0012 CDr00r00      [17]   83 	call	_cpct_fw2hw
   0015 F1            [10]   84 	pop	af
   0016 33            [ 6]   85 	inc	sp
                             86 ;src/main.c:51: cpct_setPalette(g_palette,4);
   0017 11r25r00      [10]   87 	ld	de,#_g_palette
   001A 3E 04         [ 7]   88 	ld	a,#0x04
   001C F5            [11]   89 	push	af
   001D 33            [ 6]   90 	inc	sp
   001E D5            [11]   91 	push	de
   001F CDr00r00      [17]   92 	call	_cpct_setPalette
   0022 F1            [10]   93 	pop	af
   0023 33            [ 6]   94 	inc	sp
   0024 C9            [10]   95 	ret
   0025                      96 _g_palette:
   0025 00                   97 	.db #0x00	; 0
   0026 1A                   98 	.db #0x1A	; 26
   0027 06                   99 	.db #0x06	; 6
   0028 12                  100 	.db #0x12	; 18
                            101 ;src/main.c:55: void menu(){
                            102 ;	---------------------------------
                            103 ; Function menu
                            104 ; ---------------------------------
   0029                     105 _menu::
                            106 ;src/main.c:57: cpct_clearScreen(0);
   0029 21 00 40      [10]  107 	ld	hl,#0x4000
   002C E5            [11]  108 	push	hl
   002D AF            [ 4]  109 	xor	a, a
   002E F5            [11]  110 	push	af
   002F 33            [ 6]  111 	inc	sp
   0030 26 C0         [ 7]  112 	ld	h, #0xC0
   0032 E5            [11]  113 	push	hl
   0033 CDr00r00      [17]  114 	call	_cpct_memset
                            115 ;src/main.c:59: memptr = cpct_getScreenPtr(VMEM,20,10);
   0036 21 14 0A      [10]  116 	ld	hl,#0x0A14
   0039 E5            [11]  117 	push	hl
   003A 21 00 C0      [10]  118 	ld	hl,#0xC000
   003D E5            [11]  119 	push	hl
   003E CDr00r00      [17]  120 	call	_cpct_getScreenPtr
                            121 ;src/main.c:60: cpct_drawStringM0("Super Menu",memptr,2,3);
   0041 EB            [ 4]  122 	ex	de,hl
   0042 01r7Er00      [10]  123 	ld	bc,#___str_0+0
   0045 21 02 03      [10]  124 	ld	hl,#0x0302
   0048 E5            [11]  125 	push	hl
   0049 D5            [11]  126 	push	de
   004A C5            [11]  127 	push	bc
   004B CDr00r00      [17]  128 	call	_cpct_drawStringM0
   004E 21 06 00      [10]  129 	ld	hl,#6
   0051 39            [11]  130 	add	hl,sp
   0052 F9            [ 6]  131 	ld	sp,hl
                            132 ;src/main.c:62: memptr = cpct_getScreenPtr(VMEM,18,180);
   0053 21 12 B4      [10]  133 	ld	hl,#0xB412
   0056 E5            [11]  134 	push	hl
   0057 21 00 C0      [10]  135 	ld	hl,#0xC000
   005A E5            [11]  136 	push	hl
   005B CDr00r00      [17]  137 	call	_cpct_getScreenPtr
                            138 ;src/main.c:63: cpct_drawStringM0("Pulsa Intro",memptr,4,5);
   005E EB            [ 4]  139 	ex	de,hl
   005F 01r89r00      [10]  140 	ld	bc,#___str_1+0
   0062 21 04 05      [10]  141 	ld	hl,#0x0504
   0065 E5            [11]  142 	push	hl
   0066 D5            [11]  143 	push	de
   0067 C5            [11]  144 	push	bc
   0068 CDr00r00      [17]  145 	call	_cpct_drawStringM0
   006B 21 06 00      [10]  146 	ld	hl,#6
   006E 39            [11]  147 	add	hl,sp
   006F F9            [ 6]  148 	ld	sp,hl
                            149 ;src/main.c:65: do{
   0070                     150 00101$:
                            151 ;src/main.c:66: cpct_scanKeyboard_f();
   0070 CDr00r00      [17]  152 	call	_cpct_scanKeyboard_f
                            153 ;src/main.c:67: }while(!cpct_isKeyPressed(Key_Enter));
   0073 21 00 40      [10]  154 	ld	hl,#0x4000
   0076 CDr00r00      [17]  155 	call	_cpct_isKeyPressed
   0079 7D            [ 4]  156 	ld	a,l
   007A B7            [ 4]  157 	or	a, a
   007B 28 F3         [12]  158 	jr	Z,00101$
   007D C9            [10]  159 	ret
   007E                     160 ___str_0:
   007E 53 75 70 65 72 20   161 	.ascii "Super Menu"
        4D 65 6E 75
   0088 00                  162 	.db 0x00
   0089                     163 ___str_1:
   0089 50 75 6C 73 61 20   164 	.ascii "Pulsa Intro"
        49 6E 74 72 6F
   0094 00                  165 	.db 0x00
                            166 ;src/main.c:72: u8* checkCollisions(u8 pX, u8 pY, u8 eX, u8 eY, u8* dir, u8* atk){
                            167 ;	---------------------------------
                            168 ; Function checkCollisions
                            169 ; ---------------------------------
   0095                     170 _checkCollisions::
   0095 DD E5         [15]  171 	push	ix
   0097 DD 21 00 00   [14]  172 	ld	ix,#0
   009B DD 39         [15]  173 	add	ix,sp
   009D 3B            [ 6]  174 	dec	sp
                            175 ;src/main.c:73: if((u8)atk >= 21)
   009E DD 7E 0A      [19]  176 	ld	a,10 (ix)
   00A1 DD 77 FF      [19]  177 	ld	-1 (ix),a
                            178 ;src/main.c:75: if(eX - pX > -1 && eX - pX < 11)
   00A4 DD 4E 06      [19]  179 	ld	c,6 (ix)
   00A7 06 00         [ 7]  180 	ld	b,#0x00
   00A9 DD 6E 04      [19]  181 	ld	l,4 (ix)
   00AC 26 00         [ 7]  182 	ld	h,#0x00
   00AE 79            [ 4]  183 	ld	a,c
   00AF 95            [ 4]  184 	sub	a, l
   00B0 5F            [ 4]  185 	ld	e,a
   00B1 78            [ 4]  186 	ld	a,b
   00B2 9C            [ 4]  187 	sbc	a, h
   00B3 57            [ 4]  188 	ld	d,a
                            189 ;src/main.c:73: if((u8)atk >= 21)
   00B4 DD 7E FF      [19]  190 	ld	a,-1 (ix)
   00B7 D6 15         [ 7]  191 	sub	a, #0x15
   00B9 38 4F         [12]  192 	jr	C,00118$
                            193 ;src/main.c:74: if(dir == 0)
   00BB DD 7E 09      [19]  194 	ld	a,9 (ix)
   00BE DD B6 08      [19]  195 	or	a,8 (ix)
   00C1 20 21         [12]  196 	jr	NZ,00110$
                            197 ;src/main.c:75: if(eX - pX > -1 && eX - pX < 11)
   00C3 3E FF         [ 7]  198 	ld	a,#0xFF
   00C5 BB            [ 4]  199 	cp	a, e
   00C6 9A            [ 4]  200 	sbc	a, d
   00C7 E2rCCr00      [10]  201 	jp	PO, 00162$
   00CA EE 80         [ 7]  202 	xor	a, #0x80
   00CC                     203 00162$:
   00CC F2rDFr00      [10]  204 	jp	P,00102$
   00CF 7B            [ 4]  205 	ld	a,e
   00D0 D6 0B         [ 7]  206 	sub	a, #0x0B
   00D2 7A            [ 4]  207 	ld	a,d
   00D3 17            [ 4]  208 	rla
   00D4 3F            [ 4]  209 	ccf
   00D5 1F            [ 4]  210 	rra
   00D6 DE 80         [ 7]  211 	sbc	a, #0x80
   00D8 30 05         [12]  212 	jr	NC,00102$
                            213 ;src/main.c:76: return 1;
   00DA 21 01 00      [10]  214 	ld	hl,#0x0001
   00DD 18 6E         [12]  215 	jr	00120$
   00DF                     216 00102$:
                            217 ;src/main.c:78: return 0;
   00DF 21 00 00      [10]  218 	ld	hl,#0x0000
   00E2 18 69         [12]  219 	jr	00120$
   00E4                     220 00110$:
                            221 ;src/main.c:80: if(pX - eX > -1 && pX - eX < 11)
   00E4 BF            [ 4]  222 	cp	a, a
   00E5 ED 42         [15]  223 	sbc	hl, bc
   00E7 3E FF         [ 7]  224 	ld	a,#0xFF
   00E9 BD            [ 4]  225 	cp	a, l
   00EA 9C            [ 4]  226 	sbc	a, h
   00EB E2rF0r00      [10]  227 	jp	PO, 00163$
   00EE EE 80         [ 7]  228 	xor	a, #0x80
   00F0                     229 00163$:
   00F0 F2r05r01      [10]  230 	jp	P,00106$
   00F3 11 0B 80      [10]  231 	ld	de, #0x800B
   00F6 29            [11]  232 	add	hl, hl
   00F7 3F            [ 4]  233 	ccf
   00F8 CB 1C         [ 8]  234 	rr	h
   00FA CB 1D         [ 8]  235 	rr	l
   00FC ED 52         [15]  236 	sbc	hl, de
   00FE 30 05         [12]  237 	jr	NC,00106$
                            238 ;src/main.c:81: return 1;
   0100 21 01 00      [10]  239 	ld	hl,#0x0001
   0103 18 48         [12]  240 	jr	00120$
   0105                     241 00106$:
                            242 ;src/main.c:83: return 0;
   0105 21 00 00      [10]  243 	ld	hl,#0x0000
   0108 18 43         [12]  244 	jr	00120$
   010A                     245 00118$:
                            246 ;src/main.c:85: if(eX - pX > 0 && eX - pX < 4 && eY - pY > 0 && eY - pY < 16)
   010A AF            [ 4]  247 	xor	a, a
   010B BB            [ 4]  248 	cp	a, e
   010C 9A            [ 4]  249 	sbc	a, d
   010D E2r12r01      [10]  250 	jp	PO, 00164$
   0110 EE 80         [ 7]  251 	xor	a, #0x80
   0112                     252 00164$:
   0112 F2r4Ar01      [10]  253 	jp	P,00119$
   0115 7B            [ 4]  254 	ld	a,e
   0116 D6 04         [ 7]  255 	sub	a, #0x04
   0118 7A            [ 4]  256 	ld	a,d
   0119 17            [ 4]  257 	rla
   011A 3F            [ 4]  258 	ccf
   011B 1F            [ 4]  259 	rra
   011C DE 80         [ 7]  260 	sbc	a, #0x80
   011E 30 2A         [12]  261 	jr	NC,00119$
   0120 DD 6E 07      [19]  262 	ld	l,7 (ix)
   0123 26 00         [ 7]  263 	ld	h,#0x00
   0125 DD 5E 05      [19]  264 	ld	e,5 (ix)
   0128 16 00         [ 7]  265 	ld	d,#0x00
   012A BF            [ 4]  266 	cp	a, a
   012B ED 52         [15]  267 	sbc	hl, de
   012D AF            [ 4]  268 	xor	a, a
   012E BD            [ 4]  269 	cp	a, l
   012F 9C            [ 4]  270 	sbc	a, h
   0130 E2r35r01      [10]  271 	jp	PO, 00165$
   0133 EE 80         [ 7]  272 	xor	a, #0x80
   0135                     273 00165$:
   0135 F2r4Ar01      [10]  274 	jp	P,00119$
   0138 11 10 80      [10]  275 	ld	de, #0x8010
   013B 29            [11]  276 	add	hl, hl
   013C 3F            [ 4]  277 	ccf
   013D CB 1C         [ 8]  278 	rr	h
   013F CB 1D         [ 8]  279 	rr	l
   0141 ED 52         [15]  280 	sbc	hl, de
   0143 30 05         [12]  281 	jr	NC,00119$
                            282 ;src/main.c:86: return 2;
   0145 21 02 00      [10]  283 	ld	hl,#0x0002
   0148 18 03         [12]  284 	jr	00120$
   014A                     285 00119$:
                            286 ;src/main.c:88: return 0;
   014A 21 00 00      [10]  287 	ld	hl,#0x0000
   014D                     288 00120$:
   014D 33            [ 6]  289 	inc	sp
   014E DD E1         [14]  290 	pop	ix
   0150 C9            [10]  291 	ret
                            292 ;src/main.c:91: u8* checkSprite(u8* atk, u8* dir){
                            293 ;	---------------------------------
                            294 ; Function checkSprite
                            295 ; ---------------------------------
   0151                     296 _checkSprite::
                            297 ;src/main.c:92: if(atk <= 20)
   0151 3E 14         [ 7]  298 	ld	a,#0x14
   0153 FD 21 02 00   [14]  299 	ld	iy,#2
   0157 FD 39         [15]  300 	add	iy,sp
   0159 FD BE 00      [19]  301 	cp	a, 0 (iy)
   015C 3E 00         [ 7]  302 	ld	a,#0x00
   015E FD 9E 01      [19]  303 	sbc	a, 1 (iy)
   0161 38 3B         [12]  304 	jr	C,00110$
                            305 ;src/main.c:93: switch((int)dir){
   0163 FD 21 04 00   [14]  306 	ld	iy,#4
   0167 FD 39         [15]  307 	add	iy,sp
   0169 FD 5E 00      [19]  308 	ld	e,0 (iy)
   016C FD 56 01      [19]  309 	ld	d,1 (iy)
   016F CB 7A         [ 8]  310 	bit	7, d
   0171 C0            [11]  311 	ret	NZ
   0172 3E 03         [ 7]  312 	ld	a,#0x03
   0174 BB            [ 4]  313 	cp	a, e
   0175 3E 00         [ 7]  314 	ld	a,#0x00
   0177 9A            [ 4]  315 	sbc	a, d
   0178 E2r7Dr01      [10]  316 	jp	PO, 00130$
   017B EE 80         [ 7]  317 	xor	a, #0x80
   017D                     318 00130$:
   017D F8            [11]  319 	ret	M
   017E 16 00         [ 7]  320 	ld	d,#0x00
   0180 21r86r01      [10]  321 	ld	hl,#00131$
   0183 19            [11]  322 	add	hl,de
   0184 19            [11]  323 	add	hl,de
                            324 ;src/main.c:94: case 0:
   0185 E9            [ 4]  325 	jp	(hl)
   0186                     326 00131$:
   0186 18 06         [12]  327 	jr	00101$
   0188 18 08         [12]  328 	jr	00102$
   018A 18 0A         [12]  329 	jr	00103$
   018C 18 0C         [12]  330 	jr	00104$
   018E                     331 00101$:
                            332 ;src/main.c:95: return gladis_quieto_dcha;
   018E 21r00r00      [10]  333 	ld	hl,#_gladis_quieto_dcha
   0191 C9            [10]  334 	ret
                            335 ;src/main.c:97: case 1:
   0192                     336 00102$:
                            337 ;src/main.c:98: return gladis_quieto_izda;
   0192 21r00r00      [10]  338 	ld	hl,#_gladis_quieto_izda
   0195 C9            [10]  339 	ret
                            340 ;src/main.c:100: case 2:
   0196                     341 00103$:
                            342 ;src/main.c:101: return gladis_quieto_dcha;
   0196 21r00r00      [10]  343 	ld	hl,#_gladis_quieto_dcha
   0199 C9            [10]  344 	ret
                            345 ;src/main.c:103: case 3:
   019A                     346 00104$:
                            347 ;src/main.c:104: return gladis_arriba_dcha;
   019A 21r00r00      [10]  348 	ld	hl,#_gladis_arriba_dcha
   019D C9            [10]  349 	ret
                            350 ;src/main.c:105: }
   019E                     351 00110$:
                            352 ;src/main.c:106: else if(dir == 0){
   019E 21 05 00      [10]  353 	ld	hl, #4+1
   01A1 39            [11]  354 	add	hl, sp
   01A2 7E            [ 7]  355 	ld	a, (hl)
   01A3 2B            [ 6]  356 	dec	hl
   01A4 B6            [ 7]  357 	or	a,(hl)
   01A5 20 04         [12]  358 	jr	NZ,00107$
                            359 ;src/main.c:107: return gladis_atk_dcha;
   01A7 21r00r00      [10]  360 	ld	hl,#_gladis_atk_dcha
   01AA C9            [10]  361 	ret
   01AB                     362 00107$:
                            363 ;src/main.c:109: return gladis_atk_izda;
   01AB 21r00r00      [10]  364 	ld	hl,#_gladis_atk_izda
   01AE C9            [10]  365 	ret
                            366 ;src/main.c:114: void drawFatiga(u8* atk, u8* memptr, u8 col){
                            367 ;	---------------------------------
                            368 ; Function drawFatiga
                            369 ; ---------------------------------
   01AF                     370 _drawFatiga::
   01AF DD E5         [15]  371 	push	ix
   01B1 DD 21 00 00   [14]  372 	ld	ix,#0
   01B5 DD 39         [15]  373 	add	ix,sp
                            374 ;src/main.c:115: if(atk < 20)
   01B7 DD 7E 04      [19]  375 	ld	a,4 (ix)
   01BA D6 14         [ 7]  376 	sub	a, #0x14
   01BC DD 7E 05      [19]  377 	ld	a,5 (ix)
   01BF DE 00         [ 7]  378 	sbc	a, #0x00
   01C1 30 04         [12]  379 	jr	NC,00102$
                            380 ;src/main.c:116: col = 2;
   01C3 DD 36 08 02   [19]  381 	ld	8 (ix),#0x02
   01C7                     382 00102$:
                            383 ;src/main.c:117: if(atk > 30 || atk <= 20){
   01C7 3E 14         [ 7]  384 	ld	a,#0x14
   01C9 DD BE 04      [19]  385 	cp	a, 4 (ix)
   01CC 3E 00         [ 7]  386 	ld	a,#0x00
   01CE DD 9E 05      [19]  387 	sbc	a, 5 (ix)
   01D1 3E 00         [ 7]  388 	ld	a,#0x00
   01D3 17            [ 4]  389 	rla
   01D4 57            [ 4]  390 	ld	d,a
   01D5 3E 1E         [ 7]  391 	ld	a,#0x1E
   01D7 DD BE 04      [19]  392 	cp	a, 4 (ix)
   01DA 3E 00         [ 7]  393 	ld	a,#0x00
   01DC DD 9E 05      [19]  394 	sbc	a, 5 (ix)
   01DF 38 04         [12]  395 	jr	C,00103$
   01E1 7A            [ 4]  396 	ld	a,d
   01E2 B7            [ 4]  397 	or	a, a
   01E3 20 27         [12]  398 	jr	NZ,00104$
   01E5                     399 00103$:
                            400 ;src/main.c:118: memptr = cpct_getScreenPtr(VMEM,4,160);
   01E5 D5            [11]  401 	push	de
   01E6 21 04 A0      [10]  402 	ld	hl,#0xA004
   01E9 E5            [11]  403 	push	hl
   01EA 21 00 C0      [10]  404 	ld	hl,#0xC000
   01ED E5            [11]  405 	push	hl
   01EE CDr00r00      [17]  406 	call	_cpct_getScreenPtr
   01F1 D1            [10]  407 	pop	de
                            408 ;src/main.c:119: cpct_drawSolidBox(memptr, col, 2, 8);
   01F2 DD 75 06      [19]  409 	ld	6 (ix),l
   01F5 DD 74 07      [19]  410 	ld	7 (ix),h
   01F8 4D            [ 4]  411 	ld	c,l
   01F9 44            [ 4]  412 	ld	b,h
   01FA D5            [11]  413 	push	de
   01FB 21 02 08      [10]  414 	ld	hl,#0x0802
   01FE E5            [11]  415 	push	hl
   01FF DD 7E 08      [19]  416 	ld	a,8 (ix)
   0202 F5            [11]  417 	push	af
   0203 33            [ 6]  418 	inc	sp
   0204 C5            [11]  419 	push	bc
   0205 CDr00r00      [17]  420 	call	_cpct_drawSolidBox
   0208 F1            [10]  421 	pop	af
   0209 F1            [10]  422 	pop	af
   020A 33            [ 6]  423 	inc	sp
   020B D1            [10]  424 	pop	de
   020C                     425 00104$:
                            426 ;src/main.c:121: if(atk > 40 || atk <= 20){
   020C 3E 28         [ 7]  427 	ld	a,#0x28
   020E DD BE 04      [19]  428 	cp	a, 4 (ix)
   0211 3E 00         [ 7]  429 	ld	a,#0x00
   0213 DD 9E 05      [19]  430 	sbc	a, 5 (ix)
   0216 38 04         [12]  431 	jr	C,00106$
   0218 7A            [ 4]  432 	ld	a,d
   0219 B7            [ 4]  433 	or	a, a
   021A 20 27         [12]  434 	jr	NZ,00107$
   021C                     435 00106$:
                            436 ;src/main.c:122: memptr = cpct_getScreenPtr(VMEM,7,160);
   021C D5            [11]  437 	push	de
   021D 21 07 A0      [10]  438 	ld	hl,#0xA007
   0220 E5            [11]  439 	push	hl
   0221 21 00 C0      [10]  440 	ld	hl,#0xC000
   0224 E5            [11]  441 	push	hl
   0225 CDr00r00      [17]  442 	call	_cpct_getScreenPtr
   0228 D1            [10]  443 	pop	de
                            444 ;src/main.c:123: cpct_drawSolidBox(memptr, col, 2, 8);
   0229 DD 75 06      [19]  445 	ld	6 (ix),l
   022C DD 74 07      [19]  446 	ld	7 (ix),h
   022F 4D            [ 4]  447 	ld	c,l
   0230 44            [ 4]  448 	ld	b,h
   0231 D5            [11]  449 	push	de
   0232 21 02 08      [10]  450 	ld	hl,#0x0802
   0235 E5            [11]  451 	push	hl
   0236 DD 7E 08      [19]  452 	ld	a,8 (ix)
   0239 F5            [11]  453 	push	af
   023A 33            [ 6]  454 	inc	sp
   023B C5            [11]  455 	push	bc
   023C CDr00r00      [17]  456 	call	_cpct_drawSolidBox
   023F F1            [10]  457 	pop	af
   0240 F1            [10]  458 	pop	af
   0241 33            [ 6]  459 	inc	sp
   0242 D1            [10]  460 	pop	de
   0243                     461 00107$:
                            462 ;src/main.c:125: if(atk <= 20){
   0243 7A            [ 4]  463 	ld	a,d
   0244 B7            [ 4]  464 	or	a, a
   0245 20 22         [12]  465 	jr	NZ,00111$
                            466 ;src/main.c:126: memptr = cpct_getScreenPtr(VMEM,10,160);
   0247 21 0A A0      [10]  467 	ld	hl,#0xA00A
   024A E5            [11]  468 	push	hl
   024B 21 00 C0      [10]  469 	ld	hl,#0xC000
   024E E5            [11]  470 	push	hl
   024F CDr00r00      [17]  471 	call	_cpct_getScreenPtr
                            472 ;src/main.c:127: cpct_drawSolidBox(memptr, col, 2, 8);
   0252 DD 75 06      [19]  473 	ld	6 (ix),l
   0255 DD 74 07      [19]  474 	ld	7 (ix),h
   0258 EB            [ 4]  475 	ex	de,hl
   0259 21 02 08      [10]  476 	ld	hl,#0x0802
   025C E5            [11]  477 	push	hl
   025D DD 7E 08      [19]  478 	ld	a,8 (ix)
   0260 F5            [11]  479 	push	af
   0261 33            [ 6]  480 	inc	sp
   0262 D5            [11]  481 	push	de
   0263 CDr00r00      [17]  482 	call	_cpct_drawSolidBox
   0266 F1            [10]  483 	pop	af
   0267 F1            [10]  484 	pop	af
   0268 33            [ 6]  485 	inc	sp
   0269                     486 00111$:
   0269 DD E1         [14]  487 	pop	ix
   026B C9            [10]  488 	ret
                            489 ;src/main.c:132: void drawVida(u8* life, u8* memptr){
                            490 ;	---------------------------------
                            491 ; Function drawVida
                            492 ; ---------------------------------
   026C                     493 _drawVida::
   026C DD E5         [15]  494 	push	ix
   026E DD 21 00 00   [14]  495 	ld	ix,#0
   0272 DD 39         [15]  496 	add	ix,sp
                            497 ;src/main.c:133: if(life >= 1){
   0274 DD 7E 04      [19]  498 	ld	a,4 (ix)
   0277 D6 01         [ 7]  499 	sub	a, #0x01
   0279 DD 7E 05      [19]  500 	ld	a,5 (ix)
   027C DE 00         [ 7]  501 	sbc	a, #0x00
   027E 38 1F         [12]  502 	jr	C,00102$
                            503 ;src/main.c:134: memptr = cpct_getScreenPtr(VMEM,55,160);
   0280 21 37 A0      [10]  504 	ld	hl,#0xA037
   0283 E5            [11]  505 	push	hl
   0284 21 00 C0      [10]  506 	ld	hl,#0xC000
   0287 E5            [11]  507 	push	hl
   0288 CDr00r00      [17]  508 	call	_cpct_getScreenPtr
                            509 ;src/main.c:135: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   028B DD 75 06      [19]  510 	ld	6 (ix),l
   028E DD 74 07      [19]  511 	ld	7 (ix),h
   0291 4D            [ 4]  512 	ld	c,l
   0292 44            [ 4]  513 	ld	b,h
   0293 11r00r00      [10]  514 	ld	de,#_corazon_lleno
   0296 21 04 08      [10]  515 	ld	hl,#0x0804
   0299 E5            [11]  516 	push	hl
   029A C5            [11]  517 	push	bc
   029B D5            [11]  518 	push	de
   029C CDr00r00      [17]  519 	call	_cpct_drawSpriteMasked
   029F                     520 00102$:
                            521 ;src/main.c:137: memptr = cpct_getScreenPtr(VMEM,60,160);
   029F 21 3C A0      [10]  522 	ld	hl,#0xA03C
   02A2 E5            [11]  523 	push	hl
   02A3 21 00 C0      [10]  524 	ld	hl,#0xC000
   02A6 E5            [11]  525 	push	hl
   02A7 CDr00r00      [17]  526 	call	_cpct_getScreenPtr
                            527 ;src/main.c:135: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   02AA DD 75 06      [19]  528 	ld	6 (ix),l
   02AD DD 74 07      [19]  529 	ld	7 (ix),h
   02B0 4D            [ 4]  530 	ld	c,l
   02B1 44            [ 4]  531 	ld	b,h
                            532 ;src/main.c:138: if(life >= 2)
   02B2 DD 7E 04      [19]  533 	ld	a,4 (ix)
   02B5 D6 02         [ 7]  534 	sub	a, #0x02
   02B7 DD 7E 05      [19]  535 	ld	a,5 (ix)
   02BA DE 00         [ 7]  536 	sbc	a, #0x00
   02BC 38 0E         [12]  537 	jr	C,00104$
                            538 ;src/main.c:139: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   02BE 11r00r00      [10]  539 	ld	de,#_corazon_lleno
   02C1 21 04 08      [10]  540 	ld	hl,#0x0804
   02C4 E5            [11]  541 	push	hl
   02C5 C5            [11]  542 	push	bc
   02C6 D5            [11]  543 	push	de
   02C7 CDr00r00      [17]  544 	call	_cpct_drawSpriteMasked
   02CA 18 0C         [12]  545 	jr	00105$
   02CC                     546 00104$:
                            547 ;src/main.c:141: cpct_drawSpriteMasked(corazon_roto, memptr, 4, 8);
   02CC 11r00r00      [10]  548 	ld	de,#_corazon_roto
   02CF 21 04 08      [10]  549 	ld	hl,#0x0804
   02D2 E5            [11]  550 	push	hl
   02D3 C5            [11]  551 	push	bc
   02D4 D5            [11]  552 	push	de
   02D5 CDr00r00      [17]  553 	call	_cpct_drawSpriteMasked
   02D8                     554 00105$:
                            555 ;src/main.c:142: memptr = cpct_getScreenPtr(VMEM,65,160);
   02D8 21 41 A0      [10]  556 	ld	hl,#0xA041
   02DB E5            [11]  557 	push	hl
   02DC 21 00 C0      [10]  558 	ld	hl,#0xC000
   02DF E5            [11]  559 	push	hl
   02E0 CDr00r00      [17]  560 	call	_cpct_getScreenPtr
                            561 ;src/main.c:135: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   02E3 DD 75 06      [19]  562 	ld	6 (ix),l
   02E6 DD 74 07      [19]  563 	ld	7 (ix),h
   02E9 EB            [ 4]  564 	ex	de,hl
                            565 ;src/main.c:143: if(life >= 3)
   02EA DD 7E 04      [19]  566 	ld	a,4 (ix)
   02ED D6 03         [ 7]  567 	sub	a, #0x03
   02EF DD 7E 05      [19]  568 	ld	a,5 (ix)
   02F2 DE 00         [ 7]  569 	sbc	a, #0x00
   02F4 38 0E         [12]  570 	jr	C,00107$
                            571 ;src/main.c:144: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   02F6 01r00r00      [10]  572 	ld	bc,#_corazon_lleno
   02F9 21 04 08      [10]  573 	ld	hl,#0x0804
   02FC E5            [11]  574 	push	hl
   02FD D5            [11]  575 	push	de
   02FE C5            [11]  576 	push	bc
   02FF CDr00r00      [17]  577 	call	_cpct_drawSpriteMasked
   0302 18 0C         [12]  578 	jr	00109$
   0304                     579 00107$:
                            580 ;src/main.c:146: cpct_drawSpriteMasked(corazon_roto, memptr, 4, 8);
   0304 01r00r00      [10]  581 	ld	bc,#_corazon_roto+0
   0307 21 04 08      [10]  582 	ld	hl,#0x0804
   030A E5            [11]  583 	push	hl
   030B D5            [11]  584 	push	de
   030C C5            [11]  585 	push	bc
   030D CDr00r00      [17]  586 	call	_cpct_drawSpriteMasked
   0310                     587 00109$:
   0310 DD E1         [14]  588 	pop	ix
   0312 C9            [10]  589 	ret
                            590 ;src/main.c:152: void game(){
                            591 ;	---------------------------------
                            592 ; Function game
                            593 ; ---------------------------------
   0313                     594 _game::
   0313 DD E5         [15]  595 	push	ix
   0315 DD 21 00 00   [14]  596 	ld	ix,#0
   0319 DD 39         [15]  597 	add	ix,sp
   031B 21 CC FF      [10]  598 	ld	hl,#-52
   031E 39            [11]  599 	add	hl,sp
   031F F9            [ 6]  600 	ld	sp,hl
                            601 ;src/main.c:153: TPlayer p = { 0,100,20,0,0,6,3 };
   0320 21 00 00      [10]  602 	ld	hl,#0x0000
   0323 39            [11]  603 	add	hl,sp
   0324 36 00         [10]  604 	ld	(hl),#0x00
   0326 21 00 00      [10]  605 	ld	hl,#0x0000
   0329 39            [11]  606 	add	hl,sp
   032A DD 75 E6      [19]  607 	ld	-26 (ix),l
   032D DD 74 E7      [19]  608 	ld	-25 (ix),h
   0330 DD 7E E6      [19]  609 	ld	a,-26 (ix)
   0333 C6 01         [ 7]  610 	add	a, #0x01
   0335 DD 77 ED      [19]  611 	ld	-19 (ix),a
   0338 DD 7E E7      [19]  612 	ld	a,-25 (ix)
   033B CE 00         [ 7]  613 	adc	a, #0x00
   033D DD 77 EE      [19]  614 	ld	-18 (ix),a
   0340 DD 6E ED      [19]  615 	ld	l,-19 (ix)
   0343 DD 66 EE      [19]  616 	ld	h,-18 (ix)
   0346 36 64         [10]  617 	ld	(hl),#0x64
   0348 DD 7E E6      [19]  618 	ld	a,-26 (ix)
   034B C6 02         [ 7]  619 	add	a, #0x02
   034D DD 77 EB      [19]  620 	ld	-21 (ix),a
   0350 DD 7E E7      [19]  621 	ld	a,-25 (ix)
   0353 CE 00         [ 7]  622 	adc	a, #0x00
   0355 DD 77 EC      [19]  623 	ld	-20 (ix),a
   0358 DD 6E EB      [19]  624 	ld	l,-21 (ix)
   035B DD 66 EC      [19]  625 	ld	h,-20 (ix)
   035E 36 14         [10]  626 	ld	(hl),#0x14
   0360 23            [ 6]  627 	inc	hl
   0361 36 00         [10]  628 	ld	(hl),#0x00
   0363 DD 7E E6      [19]  629 	ld	a,-26 (ix)
   0366 C6 04         [ 7]  630 	add	a, #0x04
   0368 DD 77 FE      [19]  631 	ld	-2 (ix),a
   036B DD 7E E7      [19]  632 	ld	a,-25 (ix)
   036E CE 00         [ 7]  633 	adc	a, #0x00
   0370 DD 77 FF      [19]  634 	ld	-1 (ix),a
   0373 DD 6E FE      [19]  635 	ld	l,-2 (ix)
   0376 DD 66 FF      [19]  636 	ld	h,-1 (ix)
   0379 AF            [ 4]  637 	xor	a, a
   037A 77            [ 7]  638 	ld	(hl), a
   037B 23            [ 6]  639 	inc	hl
   037C 77            [ 7]  640 	ld	(hl), a
   037D DD 7E E6      [19]  641 	ld	a,-26 (ix)
   0380 C6 06         [ 7]  642 	add	a, #0x06
   0382 DD 77 FC      [19]  643 	ld	-4 (ix),a
   0385 DD 7E E7      [19]  644 	ld	a,-25 (ix)
   0388 CE 00         [ 7]  645 	adc	a, #0x00
   038A DD 77 FD      [19]  646 	ld	-3 (ix),a
   038D DD 6E FC      [19]  647 	ld	l,-4 (ix)
   0390 DD 66 FD      [19]  648 	ld	h,-3 (ix)
   0393 AF            [ 4]  649 	xor	a, a
   0394 77            [ 7]  650 	ld	(hl), a
   0395 23            [ 6]  651 	inc	hl
   0396 77            [ 7]  652 	ld	(hl), a
   0397 DD 7E E6      [19]  653 	ld	a,-26 (ix)
   039A C6 08         [ 7]  654 	add	a, #0x08
   039C DD 77 F1      [19]  655 	ld	-15 (ix),a
   039F DD 7E E7      [19]  656 	ld	a,-25 (ix)
   03A2 CE 00         [ 7]  657 	adc	a, #0x00
   03A4 DD 77 F2      [19]  658 	ld	-14 (ix),a
   03A7 DD 6E F1      [19]  659 	ld	l,-15 (ix)
   03AA DD 66 F2      [19]  660 	ld	h,-14 (ix)
   03AD 36 06         [10]  661 	ld	(hl),#0x06
   03AF 23            [ 6]  662 	inc	hl
   03B0 36 00         [10]  663 	ld	(hl),#0x00
   03B2 DD 7E E6      [19]  664 	ld	a,-26 (ix)
   03B5 C6 0A         [ 7]  665 	add	a, #0x0A
   03B7 DD 77 EF      [19]  666 	ld	-17 (ix),a
   03BA DD 7E E7      [19]  667 	ld	a,-25 (ix)
   03BD CE 00         [ 7]  668 	adc	a, #0x00
   03BF DD 77 F0      [19]  669 	ld	-16 (ix),a
   03C2 DD 6E EF      [19]  670 	ld	l,-17 (ix)
   03C5 DD 66 F0      [19]  671 	ld	h,-16 (ix)
   03C8 36 03         [10]  672 	ld	(hl),#0x03
   03CA 23            [ 6]  673 	inc	hl
   03CB 36 00         [10]  674 	ld	(hl),#0x00
                            675 ;src/main.c:154: TEnemy  e = { 55,100,0,0 };
   03CD 21 0C 00      [10]  676 	ld	hl,#0x000C
   03D0 39            [11]  677 	add	hl,sp
   03D1 36 37         [10]  678 	ld	(hl),#0x37
   03D3 21 0C 00      [10]  679 	ld	hl,#0x000C
   03D6 39            [11]  680 	add	hl,sp
   03D7 DD 75 FA      [19]  681 	ld	-6 (ix),l
   03DA DD 74 FB      [19]  682 	ld	-5 (ix),h
   03DD DD 7E FA      [19]  683 	ld	a,-6 (ix)
   03E0 C6 01         [ 7]  684 	add	a, #0x01
   03E2 DD 77 F8      [19]  685 	ld	-8 (ix),a
   03E5 DD 7E FB      [19]  686 	ld	a,-5 (ix)
   03E8 CE 00         [ 7]  687 	adc	a, #0x00
   03EA DD 77 F9      [19]  688 	ld	-7 (ix),a
   03ED DD 6E F8      [19]  689 	ld	l,-8 (ix)
   03F0 DD 66 F9      [19]  690 	ld	h,-7 (ix)
   03F3 36 64         [10]  691 	ld	(hl),#0x64
   03F5 DD 7E FA      [19]  692 	ld	a,-6 (ix)
   03F8 C6 02         [ 7]  693 	add	a, #0x02
   03FA DD 77 E9      [19]  694 	ld	-23 (ix),a
   03FD DD 7E FB      [19]  695 	ld	a,-5 (ix)
   0400 CE 00         [ 7]  696 	adc	a, #0x00
   0402 DD 77 EA      [19]  697 	ld	-22 (ix),a
   0405 DD 6E E9      [19]  698 	ld	l,-23 (ix)
   0408 DD 66 EA      [19]  699 	ld	h,-22 (ix)
   040B AF            [ 4]  700 	xor	a, a
   040C 77            [ 7]  701 	ld	(hl), a
   040D 23            [ 6]  702 	inc	hl
   040E 77            [ 7]  703 	ld	(hl), a
   040F DD 7E FA      [19]  704 	ld	a,-6 (ix)
   0412 C6 04         [ 7]  705 	add	a, #0x04
   0414 6F            [ 4]  706 	ld	l,a
   0415 DD 7E FB      [19]  707 	ld	a,-5 (ix)
   0418 CE 00         [ 7]  708 	adc	a, #0x00
   041A 67            [ 4]  709 	ld	h,a
   041B AF            [ 4]  710 	xor	a, a
   041C 77            [ 7]  711 	ld	(hl), a
   041D 23            [ 6]  712 	inc	hl
   041E 77            [ 7]  713 	ld	(hl), a
                            714 ;src/main.c:155: TEnemy pr = { 0,0,1,0 };
   041F 21 14 00      [10]  715 	ld	hl,#0x0014
   0422 39            [11]  716 	add	hl,sp
   0423 36 00         [10]  717 	ld	(hl),#0x00
   0425 21 14 00      [10]  718 	ld	hl,#0x0014
   0428 39            [11]  719 	add	hl,sp
   0429 5D            [ 4]  720 	ld	e,l
   042A 54            [ 4]  721 	ld	d,h
   042B 23            [ 6]  722 	inc	hl
   042C 36 00         [10]  723 	ld	(hl),#0x00
   042E 6B            [ 4]  724 	ld	l, e
   042F 62            [ 4]  725 	ld	h, d
   0430 23            [ 6]  726 	inc	hl
   0431 23            [ 6]  727 	inc	hl
   0432 36 01         [10]  728 	ld	(hl),#0x01
   0434 23            [ 6]  729 	inc	hl
   0435 36 00         [10]  730 	ld	(hl),#0x00
   0437 21 04 00      [10]  731 	ld	hl,#0x0004
   043A 19            [11]  732 	add	hl,de
   043B AF            [ 4]  733 	xor	a, a
   043C 77            [ 7]  734 	ld	(hl), a
   043D 23            [ 6]  735 	inc	hl
   043E 77            [ 7]  736 	ld	(hl), a
                            737 ;src/main.c:160: cpct_clearScreen(0);
   043F 21 00 40      [10]  738 	ld	hl,#0x4000
   0442 E5            [11]  739 	push	hl
   0443 AF            [ 4]  740 	xor	a, a
   0444 F5            [11]  741 	push	af
   0445 33            [ 6]  742 	inc	sp
   0446 26 C0         [ 7]  743 	ld	h, #0xC0
   0448 E5            [11]  744 	push	hl
   0449 CDr00r00      [17]  745 	call	_cpct_memset
                            746 ;src/main.c:162: while (1){
   044C                     747 00169$:
                            748 ;src/main.c:165: cpct_waitVSYNC();
   044C CDr00r00      [17]  749 	call	_cpct_waitVSYNC
                            750 ;src/main.c:168: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   044F DD 6E ED      [19]  751 	ld	l,-19 (ix)
   0452 DD 66 EE      [19]  752 	ld	h,-18 (ix)
   0455 46            [ 7]  753 	ld	b,(hl)
   0456 DD 6E E6      [19]  754 	ld	l,-26 (ix)
   0459 DD 66 E7      [19]  755 	ld	h,-25 (ix)
   045C 4E            [ 7]  756 	ld	c, (hl)
   045D C5            [11]  757 	push	bc
   045E 21 00 C0      [10]  758 	ld	hl,#0xC000
   0461 E5            [11]  759 	push	hl
   0462 CDr00r00      [17]  760 	call	_cpct_getScreenPtr
   0465 EB            [ 4]  761 	ex	de,hl
                            762 ;src/main.c:169: if(p.atk <= 20)
   0466 DD 6E EB      [19]  763 	ld	l,-21 (ix)
   0469 DD 66 EC      [19]  764 	ld	h,-20 (ix)
   046C 46            [ 7]  765 	ld	b,(hl)
   046D 23            [ 6]  766 	inc	hl
   046E 66            [ 7]  767 	ld	h,(hl)
                            768 ;src/main.c:170: cpct_drawSolidBox(memptr,0,4,16);
                            769 ;src/main.c:169: if(p.atk <= 20)
   046F 3E 14         [ 7]  770 	ld	a,#0x14
   0471 B8            [ 4]  771 	cp	a, b
   0472 3E 00         [ 7]  772 	ld	a,#0x00
   0474 9C            [ 4]  773 	sbc	a, h
   0475 38 10         [12]  774 	jr	C,00102$
                            775 ;src/main.c:170: cpct_drawSolidBox(memptr,0,4,16);
   0477 21 04 10      [10]  776 	ld	hl,#0x1004
   047A E5            [11]  777 	push	hl
   047B AF            [ 4]  778 	xor	a, a
   047C F5            [11]  779 	push	af
   047D 33            [ 6]  780 	inc	sp
   047E D5            [11]  781 	push	de
   047F CDr00r00      [17]  782 	call	_cpct_drawSolidBox
   0482 F1            [10]  783 	pop	af
   0483 F1            [10]  784 	pop	af
   0484 33            [ 6]  785 	inc	sp
   0485 18 0E         [12]  786 	jr	00103$
   0487                     787 00102$:
                            788 ;src/main.c:172: cpct_drawSolidBox(memptr,0,5,16);
   0487 21 05 10      [10]  789 	ld	hl,#0x1005
   048A E5            [11]  790 	push	hl
   048B AF            [ 4]  791 	xor	a, a
   048C F5            [11]  792 	push	af
   048D 33            [ 6]  793 	inc	sp
   048E D5            [11]  794 	push	de
   048F CDr00r00      [17]  795 	call	_cpct_drawSolidBox
   0492 F1            [10]  796 	pop	af
   0493 F1            [10]  797 	pop	af
   0494 33            [ 6]  798 	inc	sp
   0495                     799 00103$:
                            800 ;src/main.c:174: memptr = cpct_getScreenPtr(VMEM,55,160);
   0495 21 37 A0      [10]  801 	ld	hl,#0xA037
   0498 E5            [11]  802 	push	hl
   0499 21 00 C0      [10]  803 	ld	hl,#0xC000
   049C E5            [11]  804 	push	hl
   049D CDr00r00      [17]  805 	call	_cpct_getScreenPtr
                            806 ;src/main.c:175: cpct_drawSolidBox(memptr,0,10,16);
   04A0 EB            [ 4]  807 	ex	de,hl
   04A1 21 0A 10      [10]  808 	ld	hl,#0x100A
   04A4 E5            [11]  809 	push	hl
   04A5 AF            [ 4]  810 	xor	a, a
   04A6 F5            [11]  811 	push	af
   04A7 33            [ 6]  812 	inc	sp
   04A8 D5            [11]  813 	push	de
   04A9 CDr00r00      [17]  814 	call	_cpct_drawSolidBox
   04AC F1            [10]  815 	pop	af
   04AD F1            [10]  816 	pop	af
   04AE 33            [ 6]  817 	inc	sp
                            818 ;src/main.c:177: memptr = cpct_getScreenPtr(VMEM,e.x,e.y);
   04AF DD 6E F8      [19]  819 	ld	l,-8 (ix)
   04B2 DD 66 F9      [19]  820 	ld	h,-7 (ix)
   04B5 46            [ 7]  821 	ld	b,(hl)
   04B6 DD 6E FA      [19]  822 	ld	l,-6 (ix)
   04B9 DD 66 FB      [19]  823 	ld	h,-5 (ix)
   04BC 4E            [ 7]  824 	ld	c, (hl)
   04BD C5            [11]  825 	push	bc
   04BE 21 00 C0      [10]  826 	ld	hl,#0xC000
   04C1 E5            [11]  827 	push	hl
   04C2 CDr00r00      [17]  828 	call	_cpct_getScreenPtr
   04C5 4D            [ 4]  829 	ld	c, l
   04C6 44            [ 4]  830 	ld	b, h
                            831 ;src/main.c:178: if(e.vivo == 0)
   04C7 DD 6E E9      [19]  832 	ld	l,-23 (ix)
   04CA DD 66 EA      [19]  833 	ld	h,-22 (ix)
   04CD 56            [ 7]  834 	ld	d,(hl)
   04CE 23            [ 6]  835 	inc	hl
   04CF 7E            [ 7]  836 	ld	a, (hl)
   04D0 B2            [ 4]  837 	or	a,d
   04D1 20 0E         [12]  838 	jr	NZ,00105$
                            839 ;src/main.c:179: cpct_drawSolidBox(memptr,0,4,16);
   04D3 21 04 10      [10]  840 	ld	hl,#0x1004
   04D6 E5            [11]  841 	push	hl
   04D7 AF            [ 4]  842 	xor	a, a
   04D8 F5            [11]  843 	push	af
   04D9 33            [ 6]  844 	inc	sp
   04DA C5            [11]  845 	push	bc
   04DB CDr00r00      [17]  846 	call	_cpct_drawSolidBox
   04DE F1            [10]  847 	pop	af
   04DF F1            [10]  848 	pop	af
   04E0 33            [ 6]  849 	inc	sp
   04E1                     850 00105$:
                            851 ;src/main.c:182: if(p.col != 2){
   04E1 DD 6E FC      [19]  852 	ld	l,-4 (ix)
   04E4 DD 66 FD      [19]  853 	ld	h,-3 (ix)
   04E7 56            [ 7]  854 	ld	d,(hl)
   04E8 23            [ 6]  855 	inc	hl
   04E9 66            [ 7]  856 	ld	h,(hl)
   04EA 7A            [ 4]  857 	ld	a,d
   04EB D6 02         [ 7]  858 	sub	a,#0x02
   04ED 20 04         [12]  859 	jr	NZ,00297$
   04EF B4            [ 4]  860 	or	a,h
   04F0 CAr8Er06      [10]  861 	jp	Z,00146$
   04F3                     862 00297$:
                            863 ;src/main.c:183: cpct_scanKeyboard_f();
   04F3 CDr00r00      [17]  864 	call	_cpct_scanKeyboard_f
                            865 ;src/main.c:184: if(cpct_isKeyPressed(Key_Space) && p.atk >= 20){
   04F6 21 05 80      [10]  866 	ld	hl,#0x8005
   04F9 CDr00r00      [17]  867 	call	_cpct_isKeyPressed
   04FC DD 75 E8      [19]  868 	ld	-24 (ix),l
                            869 ;src/main.c:169: if(p.atk <= 20)
   04FF DD 6E EB      [19]  870 	ld	l,-21 (ix)
   0502 DD 66 EC      [19]  871 	ld	h,-20 (ix)
   0505 7E            [ 7]  872 	ld	a,(hl)
   0506 DD 77 F6      [19]  873 	ld	-10 (ix),a
   0509 23            [ 6]  874 	inc	hl
   050A 7E            [ 7]  875 	ld	a,(hl)
   050B DD 77 F7      [19]  876 	ld	-9 (ix),a
                            877 ;src/main.c:184: if(cpct_isKeyPressed(Key_Space) && p.atk >= 20){
   050E DD 7E F6      [19]  878 	ld	a,-10 (ix)
   0511 D6 14         [ 7]  879 	sub	a, #0x14
   0513 DD 7E F7      [19]  880 	ld	a,-9 (ix)
   0516 DE 00         [ 7]  881 	sbc	a, #0x00
   0518 3E 00         [ 7]  882 	ld	a,#0x00
   051A 17            [ 4]  883 	rla
   051B DD 77 F5      [19]  884 	ld	-11 (ix),a
                            885 ;src/main.c:188: p.atk += 1;
   051E DD 7E F6      [19]  886 	ld	a,-10 (ix)
   0521 C6 01         [ 7]  887 	add	a, #0x01
   0523 DD 77 F3      [19]  888 	ld	-13 (ix),a
   0526 DD 7E F7      [19]  889 	ld	a,-9 (ix)
   0529 CE 00         [ 7]  890 	adc	a, #0x00
   052B DD 77 F4      [19]  891 	ld	-12 (ix),a
                            892 ;src/main.c:184: if(cpct_isKeyPressed(Key_Space) && p.atk >= 20){
   052E DD 7E E8      [19]  893 	ld	a,-24 (ix)
   0531 B7            [ 4]  894 	or	a, a
   0532 28 5D         [12]  895 	jr	Z,00140$
   0534 DD 7E F5      [19]  896 	ld	a,-11 (ix)
   0537 B7            [ 4]  897 	or	a, a
   0538 20 57         [12]  898 	jr	NZ,00140$
                            899 ;src/main.c:185: if(p.atk >= 50)
   053A DD 7E F6      [19]  900 	ld	a,-10 (ix)
   053D D6 32         [ 7]  901 	sub	a, #0x32
   053F DD 7E F7      [19]  902 	ld	a,-9 (ix)
   0542 DE 00         [ 7]  903 	sbc	a, #0x00
   0544 38 0C         [12]  904 	jr	C,00107$
                            905 ;src/main.c:186: p.atk = 0;
   0546 DD 6E EB      [19]  906 	ld	l,-21 (ix)
   0549 DD 66 EC      [19]  907 	ld	h,-20 (ix)
   054C AF            [ 4]  908 	xor	a, a
   054D 77            [ 7]  909 	ld	(hl), a
   054E 23            [ 6]  910 	inc	hl
   054F 77            [ 7]  911 	ld	(hl), a
   0550 18 0F         [12]  912 	jr	00108$
   0552                     913 00107$:
                            914 ;src/main.c:188: p.atk += 1;
   0552 DD 6E EB      [19]  915 	ld	l,-21 (ix)
   0555 DD 66 EC      [19]  916 	ld	h,-20 (ix)
   0558 DD 7E F3      [19]  917 	ld	a,-13 (ix)
   055B 77            [ 7]  918 	ld	(hl),a
   055C 23            [ 6]  919 	inc	hl
   055D DD 7E F4      [19]  920 	ld	a,-12 (ix)
   0560 77            [ 7]  921 	ld	(hl),a
   0561                     922 00108$:
                            923 ;src/main.c:189: if(cpct_isKeyPressed(Key_CursorRight))
   0561 21 00 02      [10]  924 	ld	hl,#0x0200
   0564 CDr00r00      [17]  925 	call	_cpct_isKeyPressed
   0567 7D            [ 4]  926 	ld	a,l
   0568 B7            [ 4]  927 	or	a, a
   0569 28 0D         [12]  928 	jr	Z,00112$
                            929 ;src/main.c:190: p.dir = 0;
   056B DD 6E FE      [19]  930 	ld	l,-2 (ix)
   056E DD 66 FF      [19]  931 	ld	h,-1 (ix)
   0571 AF            [ 4]  932 	xor	a, a
   0572 77            [ 7]  933 	ld	(hl), a
   0573 23            [ 6]  934 	inc	hl
   0574 77            [ 7]  935 	ld	(hl), a
   0575 C3rCBr06      [10]  936 	jp	00147$
   0578                     937 00112$:
                            938 ;src/main.c:191: else if(cpct_isKeyPressed(Key_CursorLeft))
   0578 21 01 01      [10]  939 	ld	hl,#0x0101
   057B CDr00r00      [17]  940 	call	_cpct_isKeyPressed
   057E 7D            [ 4]  941 	ld	a,l
   057F B7            [ 4]  942 	or	a, a
   0580 CArCBr06      [10]  943 	jp	Z,00147$
                            944 ;src/main.c:192: p.dir = 1;
   0583 DD 6E FE      [19]  945 	ld	l,-2 (ix)
   0586 DD 66 FF      [19]  946 	ld	h,-1 (ix)
   0589 36 01         [10]  947 	ld	(hl),#0x01
   058B 23            [ 6]  948 	inc	hl
   058C 36 00         [10]  949 	ld	(hl),#0x00
   058E C3rCBr06      [10]  950 	jp	00147$
   0591                     951 00140$:
                            952 ;src/main.c:194: if(p.atk < 20)
   0591 DD 7E F5      [19]  953 	ld	a,-11 (ix)
   0594 B7            [ 4]  954 	or	a, a
   0595 28 11         [12]  955 	jr	Z,00115$
                            956 ;src/main.c:195: p.atk += 1;
   0597 DD 6E EB      [19]  957 	ld	l,-21 (ix)
   059A DD 66 EC      [19]  958 	ld	h,-20 (ix)
   059D DD 7E F3      [19]  959 	ld	a,-13 (ix)
   05A0 77            [ 7]  960 	ld	(hl),a
   05A1 23            [ 6]  961 	inc	hl
   05A2 DD 7E F4      [19]  962 	ld	a,-12 (ix)
   05A5 77            [ 7]  963 	ld	(hl),a
   05A6 18 0B         [12]  964 	jr	00116$
   05A8                     965 00115$:
                            966 ;src/main.c:197: p.atk = 20;
   05A8 DD 6E EB      [19]  967 	ld	l,-21 (ix)
   05AB DD 66 EC      [19]  968 	ld	h,-20 (ix)
   05AE 36 14         [10]  969 	ld	(hl),#0x14
   05B0 23            [ 6]  970 	inc	hl
   05B1 36 00         [10]  971 	ld	(hl),#0x00
   05B3                     972 00116$:
                            973 ;src/main.c:198: if(cpct_isKeyPressed(Key_CursorRight) && p.x < 76 ){
   05B3 21 00 02      [10]  974 	ld	hl,#0x0200
   05B6 CDr00r00      [17]  975 	call	_cpct_isKeyPressed
   05B9 7D            [ 4]  976 	ld	a,l
   05BA B7            [ 4]  977 	or	a, a
   05BB 28 32         [12]  978 	jr	Z,00136$
   05BD DD 6E E6      [19]  979 	ld	l,-26 (ix)
   05C0 DD 66 E7      [19]  980 	ld	h,-25 (ix)
   05C3 56            [ 7]  981 	ld	d,(hl)
   05C4 7A            [ 4]  982 	ld	a,d
   05C5 D6 4C         [ 7]  983 	sub	a, #0x4C
   05C7 30 26         [12]  984 	jr	NC,00136$
                            985 ;src/main.c:199: if(p.col != 2)
   05C9 DD 6E FC      [19]  986 	ld	l,-4 (ix)
   05CC DD 66 FD      [19]  987 	ld	h,-3 (ix)
   05CF 5E            [ 7]  988 	ld	e,(hl)
   05D0 23            [ 6]  989 	inc	hl
   05D1 66            [ 7]  990 	ld	h,(hl)
   05D2 7B            [ 4]  991 	ld	a,e
   05D3 D6 02         [ 7]  992 	sub	a,#0x02
   05D5 20 03         [12]  993 	jr	NZ,00298$
   05D7 B4            [ 4]  994 	or	a,h
   05D8 28 08         [12]  995 	jr	Z,00118$
   05DA                     996 00298$:
                            997 ;src/main.c:200: p.x += 1;
   05DA 14            [ 4]  998 	inc	d
   05DB DD 6E E6      [19]  999 	ld	l,-26 (ix)
   05DE DD 66 E7      [19] 1000 	ld	h,-25 (ix)
   05E1 72            [ 7] 1001 	ld	(hl),d
   05E2                    1002 00118$:
                           1003 ;src/main.c:201: p.dir = 0;
   05E2 DD 6E FE      [19] 1004 	ld	l,-2 (ix)
   05E5 DD 66 FF      [19] 1005 	ld	h,-1 (ix)
   05E8 AF            [ 4] 1006 	xor	a, a
   05E9 77            [ 7] 1007 	ld	(hl), a
   05EA 23            [ 6] 1008 	inc	hl
   05EB 77            [ 7] 1009 	ld	(hl), a
   05EC C3rCBr06      [10] 1010 	jp	00147$
   05EF                    1011 00136$:
                           1012 ;src/main.c:202: }else if(cpct_isKeyPressed(Key_CursorLeft) && p.x > 0 ){
   05EF 21 01 01      [10] 1013 	ld	hl,#0x0101
   05F2 CDr00r00      [17] 1014 	call	_cpct_isKeyPressed
   05F5 7D            [ 4] 1015 	ld	a,l
   05F6 B7            [ 4] 1016 	or	a, a
   05F7 28 32         [12] 1017 	jr	Z,00132$
   05F9 DD 6E E6      [19] 1018 	ld	l,-26 (ix)
   05FC DD 66 E7      [19] 1019 	ld	h,-25 (ix)
   05FF 56            [ 7] 1020 	ld	d,(hl)
   0600 7A            [ 4] 1021 	ld	a,d
   0601 B7            [ 4] 1022 	or	a, a
   0602 28 27         [12] 1023 	jr	Z,00132$
                           1024 ;src/main.c:203: if(p.col != 2)
   0604 DD 6E FC      [19] 1025 	ld	l,-4 (ix)
   0607 DD 66 FD      [19] 1026 	ld	h,-3 (ix)
   060A 5E            [ 7] 1027 	ld	e,(hl)
   060B 23            [ 6] 1028 	inc	hl
   060C 66            [ 7] 1029 	ld	h,(hl)
   060D 7B            [ 4] 1030 	ld	a,e
   060E D6 02         [ 7] 1031 	sub	a,#0x02
   0610 20 03         [12] 1032 	jr	NZ,00299$
   0612 B4            [ 4] 1033 	or	a,h
   0613 28 08         [12] 1034 	jr	Z,00120$
   0615                    1035 00299$:
                           1036 ;src/main.c:204: p.x -= 1;
   0615 15            [ 4] 1037 	dec	d
   0616 DD 6E E6      [19] 1038 	ld	l,-26 (ix)
   0619 DD 66 E7      [19] 1039 	ld	h,-25 (ix)
   061C 72            [ 7] 1040 	ld	(hl),d
   061D                    1041 00120$:
                           1042 ;src/main.c:205: p.dir = 1;
   061D DD 6E FE      [19] 1043 	ld	l,-2 (ix)
   0620 DD 66 FF      [19] 1044 	ld	h,-1 (ix)
   0623 36 01         [10] 1045 	ld	(hl),#0x01
   0625 23            [ 6] 1046 	inc	hl
   0626 36 00         [10] 1047 	ld	(hl),#0x00
   0628 C3rCBr06      [10] 1048 	jp	00147$
   062B                    1049 00132$:
                           1050 ;src/main.c:206: }else if(cpct_isKeyPressed(Key_CursorDown) && p.y < 184 ){
   062B 21 00 04      [10] 1051 	ld	hl,#0x0400
   062E CDr00r00      [17] 1052 	call	_cpct_isKeyPressed
   0631 7D            [ 4] 1053 	ld	a,l
   0632 B7            [ 4] 1054 	or	a, a
   0633 28 22         [12] 1055 	jr	Z,00128$
                           1056 ;src/main.c:168: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   0635 DD 6E ED      [19] 1057 	ld	l,-19 (ix)
   0638 DD 66 EE      [19] 1058 	ld	h,-18 (ix)
   063B 56            [ 7] 1059 	ld	d,(hl)
                           1060 ;src/main.c:206: }else if(cpct_isKeyPressed(Key_CursorDown) && p.y < 184 ){
   063C 7A            [ 4] 1061 	ld	a,d
   063D D6 B8         [ 7] 1062 	sub	a, #0xB8
   063F 30 16         [12] 1063 	jr	NC,00128$
                           1064 ;src/main.c:207: p.y += 2;
   0641 14            [ 4] 1065 	inc	d
   0642 14            [ 4] 1066 	inc	d
   0643 DD 6E ED      [19] 1067 	ld	l,-19 (ix)
   0646 DD 66 EE      [19] 1068 	ld	h,-18 (ix)
   0649 72            [ 7] 1069 	ld	(hl),d
                           1070 ;src/main.c:208: p.dir = 2;
   064A DD 6E FE      [19] 1071 	ld	l,-2 (ix)
   064D DD 66 FF      [19] 1072 	ld	h,-1 (ix)
   0650 36 02         [10] 1073 	ld	(hl),#0x02
   0652 23            [ 6] 1074 	inc	hl
   0653 36 00         [10] 1075 	ld	(hl),#0x00
   0655 18 74         [12] 1076 	jr	00147$
   0657                    1077 00128$:
                           1078 ;src/main.c:209: }else if(cpct_isKeyPressed(Key_CursorUp) && p.y > 0 ){
   0657 21 00 01      [10] 1079 	ld	hl,#0x0100
   065A CDr00r00      [17] 1080 	call	_cpct_isKeyPressed
   065D 7D            [ 4] 1081 	ld	a,l
   065E B7            [ 4] 1082 	or	a, a
   065F 28 20         [12] 1083 	jr	Z,00124$
                           1084 ;src/main.c:168: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   0661 DD 6E ED      [19] 1085 	ld	l,-19 (ix)
   0664 DD 66 EE      [19] 1086 	ld	h,-18 (ix)
   0667 7E            [ 7] 1087 	ld	a,(hl)
                           1088 ;src/main.c:209: }else if(cpct_isKeyPressed(Key_CursorUp) && p.y > 0 ){
   0668 B7            [ 4] 1089 	or	a, a
   0669 28 16         [12] 1090 	jr	Z,00124$
                           1091 ;src/main.c:210: p.y -= 2;
   066B C6 FE         [ 7] 1092 	add	a,#0xFE
   066D DD 6E ED      [19] 1093 	ld	l,-19 (ix)
   0670 DD 66 EE      [19] 1094 	ld	h,-18 (ix)
   0673 77            [ 7] 1095 	ld	(hl),a
                           1096 ;src/main.c:211: p.dir = 3;
   0674 DD 6E FE      [19] 1097 	ld	l,-2 (ix)
   0677 DD 66 FF      [19] 1098 	ld	h,-1 (ix)
   067A 36 03         [10] 1099 	ld	(hl),#0x03
   067C 23            [ 6] 1100 	inc	hl
   067D 36 00         [10] 1101 	ld	(hl),#0x00
   067F 18 4A         [12] 1102 	jr	00147$
   0681                    1103 00124$:
                           1104 ;src/main.c:212: }else  if(cpct_isKeyPressed(Key_Esc)){
   0681 21 08 04      [10] 1105 	ld	hl,#0x0408
   0684 CDr00r00      [17] 1106 	call	_cpct_isKeyPressed
   0687 7D            [ 4] 1107 	ld	a,l
   0688 B7            [ 4] 1108 	or	a, a
   0689 28 40         [12] 1109 	jr	Z,00147$
                           1110 ;src/main.c:213: return;
   068B C3r8Cr08      [10] 1111 	jp	00171$
   068E                    1112 00146$:
                           1113 ;src/main.c:217: p.x -= 2;
   068E DD 6E E6      [19] 1114 	ld	l,-26 (ix)
   0691 DD 66 E7      [19] 1115 	ld	h,-25 (ix)
   0694 7E            [ 7] 1116 	ld	a,(hl)
   0695 C6 FE         [ 7] 1117 	add	a,#0xFE
   0697 DD 6E E6      [19] 1118 	ld	l,-26 (ix)
   069A DD 66 E7      [19] 1119 	ld	h,-25 (ix)
   069D 77            [ 7] 1120 	ld	(hl),a
                           1121 ;src/main.c:218: p.rebote -= 2;
   069E DD 6E F1      [19] 1122 	ld	l,-15 (ix)
   06A1 DD 66 F2      [19] 1123 	ld	h,-14 (ix)
   06A4 5E            [ 7] 1124 	ld	e,(hl)
   06A5 23            [ 6] 1125 	inc	hl
   06A6 56            [ 7] 1126 	ld	d,(hl)
   06A7 1B            [ 6] 1127 	dec	de
   06A8 1B            [ 6] 1128 	dec	de
   06A9 DD 6E F1      [19] 1129 	ld	l,-15 (ix)
   06AC DD 66 F2      [19] 1130 	ld	h,-14 (ix)
   06AF 73            [ 7] 1131 	ld	(hl),e
   06B0 23            [ 6] 1132 	inc	hl
   06B1 72            [ 7] 1133 	ld	(hl),d
                           1134 ;src/main.c:219: if(p.rebote == 0){
   06B2 7A            [ 4] 1135 	ld	a,d
   06B3 B3            [ 4] 1136 	or	a,e
   06B4 20 15         [12] 1137 	jr	NZ,00147$
                           1138 ;src/main.c:220: p.rebote = 6;
   06B6 DD 6E F1      [19] 1139 	ld	l,-15 (ix)
   06B9 DD 66 F2      [19] 1140 	ld	h,-14 (ix)
   06BC 36 06         [10] 1141 	ld	(hl),#0x06
   06BE 23            [ 6] 1142 	inc	hl
   06BF 36 00         [10] 1143 	ld	(hl),#0x00
                           1144 ;src/main.c:221: p.col = 0;
   06C1 DD 6E FC      [19] 1145 	ld	l,-4 (ix)
   06C4 DD 66 FD      [19] 1146 	ld	h,-3 (ix)
   06C7 AF            [ 4] 1147 	xor	a, a
   06C8 77            [ 7] 1148 	ld	(hl), a
   06C9 23            [ 6] 1149 	inc	hl
   06CA 77            [ 7] 1150 	ld	(hl), a
   06CB                    1151 00147$:
                           1152 ;src/main.c:226: sprite = checkSprite(p.atk,p.dir);
   06CB DD 6E FE      [19] 1153 	ld	l,-2 (ix)
   06CE DD 66 FF      [19] 1154 	ld	h,-1 (ix)
   06D1 4E            [ 7] 1155 	ld	c,(hl)
   06D2 23            [ 6] 1156 	inc	hl
   06D3 46            [ 7] 1157 	ld	b,(hl)
   06D4 DD 6E EB      [19] 1158 	ld	l,-21 (ix)
   06D7 DD 66 EC      [19] 1159 	ld	h,-20 (ix)
   06DA 5E            [ 7] 1160 	ld	e,(hl)
   06DB 23            [ 6] 1161 	inc	hl
   06DC 56            [ 7] 1162 	ld	d,(hl)
   06DD C5            [11] 1163 	push	bc
   06DE D5            [11] 1164 	push	de
   06DF CDr51r01      [17] 1165 	call	_checkSprite
   06E2 F1            [10] 1166 	pop	af
   06E3 F1            [10] 1167 	pop	af
   06E4 DD 75 DE      [19] 1168 	ld	-34 (ix),l
   06E7 DD 74 DF      [19] 1169 	ld	-33 (ix),h
                           1170 ;src/main.c:228: if(p.col != 2 && e.vivo == 0){
   06EA DD 6E FC      [19] 1171 	ld	l,-4 (ix)
   06ED DD 66 FD      [19] 1172 	ld	h,-3 (ix)
   06F0 56            [ 7] 1173 	ld	d,(hl)
   06F1 23            [ 6] 1174 	inc	hl
   06F2 66            [ 7] 1175 	ld	h,(hl)
   06F3 7A            [ 4] 1176 	ld	a,d
   06F4 D6 02         [ 7] 1177 	sub	a,#0x02
   06F6 20 04         [12] 1178 	jr	NZ,00300$
   06F8 B4            [ 4] 1179 	or	a,h
   06F9 CAr94r07      [10] 1180 	jp	Z,00153$
   06FC                    1181 00300$:
   06FC DD 6E E9      [19] 1182 	ld	l,-23 (ix)
   06FF DD 66 EA      [19] 1183 	ld	h,-22 (ix)
   0702 56            [ 7] 1184 	ld	d,(hl)
   0703 23            [ 6] 1185 	inc	hl
   0704 7E            [ 7] 1186 	ld	a, (hl)
   0705 B2            [ 4] 1187 	or	a,d
   0706 C2r94r07      [10] 1188 	jp	NZ,00153$
                           1189 ;src/main.c:229: p.col = checkCollisions(p.x,p.y,e.x,e.y,p.dir,p.atk);
   0709 DD 6E EB      [19] 1190 	ld	l,-21 (ix)
   070C DD 66 EC      [19] 1191 	ld	h,-20 (ix)
   070F 4E            [ 7] 1192 	ld	c,(hl)
   0710 23            [ 6] 1193 	inc	hl
   0711 46            [ 7] 1194 	ld	b,(hl)
   0712 DD 6E FE      [19] 1195 	ld	l,-2 (ix)
   0715 DD 66 FF      [19] 1196 	ld	h,-1 (ix)
   0718 7E            [ 7] 1197 	ld	a,(hl)
   0719 DD 77 F3      [19] 1198 	ld	-13 (ix),a
   071C 23            [ 6] 1199 	inc	hl
   071D 7E            [ 7] 1200 	ld	a,(hl)
   071E DD 77 F4      [19] 1201 	ld	-12 (ix),a
   0721 DD 6E F8      [19] 1202 	ld	l,-8 (ix)
   0724 DD 66 F9      [19] 1203 	ld	h,-7 (ix)
   0727 5E            [ 7] 1204 	ld	e,(hl)
   0728 DD 6E FA      [19] 1205 	ld	l,-6 (ix)
   072B DD 66 FB      [19] 1206 	ld	h,-5 (ix)
   072E 7E            [ 7] 1207 	ld	a,(hl)
   072F DD 77 F5      [19] 1208 	ld	-11 (ix),a
   0732 DD 6E ED      [19] 1209 	ld	l,-19 (ix)
   0735 DD 66 EE      [19] 1210 	ld	h,-18 (ix)
   0738 7E            [ 7] 1211 	ld	a,(hl)
   0739 DD 77 F6      [19] 1212 	ld	-10 (ix),a
   073C DD 6E E6      [19] 1213 	ld	l,-26 (ix)
   073F DD 66 E7      [19] 1214 	ld	h,-25 (ix)
   0742 56            [ 7] 1215 	ld	d,(hl)
   0743 C5            [11] 1216 	push	bc
   0744 DD 6E F3      [19] 1217 	ld	l,-13 (ix)
   0747 DD 66 F4      [19] 1218 	ld	h,-12 (ix)
   074A E5            [11] 1219 	push	hl
   074B 7B            [ 4] 1220 	ld	a,e
   074C F5            [11] 1221 	push	af
   074D 33            [ 6] 1222 	inc	sp
   074E DD 7E F5      [19] 1223 	ld	a,-11 (ix)
   0751 F5            [11] 1224 	push	af
   0752 33            [ 6] 1225 	inc	sp
   0753 DD 7E F6      [19] 1226 	ld	a,-10 (ix)
   0756 F5            [11] 1227 	push	af
   0757 33            [ 6] 1228 	inc	sp
   0758 D5            [11] 1229 	push	de
   0759 33            [ 6] 1230 	inc	sp
   075A CDr95r00      [17] 1231 	call	_checkCollisions
   075D F1            [10] 1232 	pop	af
   075E F1            [10] 1233 	pop	af
   075F F1            [10] 1234 	pop	af
   0760 F1            [10] 1235 	pop	af
   0761 55            [ 4] 1236 	ld	d,l
   0762 5C            [ 4] 1237 	ld	e,h
   0763 DD 6E FC      [19] 1238 	ld	l,-4 (ix)
   0766 DD 66 FD      [19] 1239 	ld	h,-3 (ix)
   0769 72            [ 7] 1240 	ld	(hl),d
   076A 23            [ 6] 1241 	inc	hl
   076B 73            [ 7] 1242 	ld	(hl),e
                           1243 ;src/main.c:230: if(p.col == 2)
   076C 7A            [ 4] 1244 	ld	a,d
   076D D6 02         [ 7] 1245 	sub	a,#0x02
   076F 20 16         [12] 1246 	jr	NZ,00149$
   0771 B3            [ 4] 1247 	or	a,e
   0772 20 13         [12] 1248 	jr	NZ,00149$
                           1249 ;src/main.c:231: p.life--;
   0774 DD 6E EF      [19] 1250 	ld	l,-17 (ix)
   0777 DD 66 F0      [19] 1251 	ld	h,-16 (ix)
   077A 5E            [ 7] 1252 	ld	e,(hl)
   077B 23            [ 6] 1253 	inc	hl
   077C 56            [ 7] 1254 	ld	d,(hl)
   077D 1B            [ 6] 1255 	dec	de
   077E DD 6E EF      [19] 1256 	ld	l,-17 (ix)
   0781 DD 66 F0      [19] 1257 	ld	h,-16 (ix)
   0784 73            [ 7] 1258 	ld	(hl),e
   0785 23            [ 6] 1259 	inc	hl
   0786 72            [ 7] 1260 	ld	(hl),d
   0787                    1261 00149$:
                           1262 ;src/main.c:232: if(p.life == 0)
   0787 DD 6E EF      [19] 1263 	ld	l,-17 (ix)
   078A DD 66 F0      [19] 1264 	ld	h,-16 (ix)
   078D 56            [ 7] 1265 	ld	d,(hl)
   078E 23            [ 6] 1266 	inc	hl
   078F 7E            [ 7] 1267 	ld	a, (hl)
   0790 B2            [ 4] 1268 	or	a,d
                           1269 ;src/main.c:233: return;
   0791 CAr8Cr08      [10] 1270 	jp	Z,00171$
   0794                    1271 00153$:
                           1272 ;src/main.c:235: if(p.col == 1)
   0794 DD 6E FC      [19] 1273 	ld	l,-4 (ix)
   0797 DD 66 FD      [19] 1274 	ld	h,-3 (ix)
   079A 56            [ 7] 1275 	ld	d,(hl)
   079B 23            [ 6] 1276 	inc	hl
   079C 66            [ 7] 1277 	ld	h,(hl)
   079D 15            [ 4] 1278 	dec	d
   079E 20 0F         [12] 1279 	jr	NZ,00156$
   07A0 7C            [ 4] 1280 	ld	a,h
   07A1 B7            [ 4] 1281 	or	a, a
   07A2 20 0B         [12] 1282 	jr	NZ,00156$
                           1283 ;src/main.c:236: e.vivo = 1;
   07A4 DD 6E E9      [19] 1284 	ld	l,-23 (ix)
   07A7 DD 66 EA      [19] 1285 	ld	h,-22 (ix)
   07AA 36 01         [10] 1286 	ld	(hl),#0x01
   07AC 23            [ 6] 1287 	inc	hl
   07AD 36 00         [10] 1288 	ld	(hl),#0x00
   07AF                    1289 00156$:
                           1290 ;src/main.c:239: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   07AF DD 6E ED      [19] 1291 	ld	l,-19 (ix)
   07B2 DD 66 EE      [19] 1292 	ld	h,-18 (ix)
   07B5 46            [ 7] 1293 	ld	b,(hl)
   07B6 DD 6E E6      [19] 1294 	ld	l,-26 (ix)
   07B9 DD 66 E7      [19] 1295 	ld	h,-25 (ix)
   07BC 4E            [ 7] 1296 	ld	c, (hl)
   07BD C5            [11] 1297 	push	bc
   07BE 21 00 C0      [10] 1298 	ld	hl,#0xC000
   07C1 E5            [11] 1299 	push	hl
   07C2 CDr00r00      [17] 1300 	call	_cpct_getScreenPtr
   07C5 4D            [ 4] 1301 	ld	c, l
   07C6 44            [ 4] 1302 	ld	b, h
                           1303 ;src/main.c:242: if(p.atk >= 21)
   07C7 DD 6E EB      [19] 1304 	ld	l,-21 (ix)
   07CA DD 66 EC      [19] 1305 	ld	h,-20 (ix)
   07CD 7E            [ 7] 1306 	ld	a, (hl)
   07CE 23            [ 6] 1307 	inc	hl
   07CF 66            [ 7] 1308 	ld	h,(hl)
   07D0 6F            [ 4] 1309 	ld	l,a
                           1310 ;src/main.c:170: cpct_drawSolidBox(memptr,0,4,16);
   07D1 C5            [11] 1311 	push	bc
   07D2 FD E1         [14] 1312 	pop	iy
                           1313 ;src/main.c:243: cpct_drawSpriteMasked(sprite, memptr, 5, 16);
   07D4 DD 5E DE      [19] 1314 	ld	e,-34 (ix)
   07D7 DD 56 DF      [19] 1315 	ld	d,-33 (ix)
                           1316 ;src/main.c:242: if(p.atk >= 21)
   07DA 7D            [ 4] 1317 	ld	a,l
   07DB D6 15         [ 7] 1318 	sub	a, #0x15
   07DD 7C            [ 4] 1319 	ld	a,h
   07DE DE 00         [ 7] 1320 	sbc	a, #0x00
   07E0 38 0E         [12] 1321 	jr	C,00158$
                           1322 ;src/main.c:243: cpct_drawSpriteMasked(sprite, memptr, 5, 16);
   07E2 C5            [11] 1323 	push	bc
   07E3 21 05 10      [10] 1324 	ld	hl,#0x1005
   07E6 E5            [11] 1325 	push	hl
   07E7 FD E5         [15] 1326 	push	iy
   07E9 D5            [11] 1327 	push	de
   07EA CDr00r00      [17] 1328 	call	_cpct_drawSpriteMasked
   07ED C1            [10] 1329 	pop	bc
   07EE 18 0C         [12] 1330 	jr	00159$
   07F0                    1331 00158$:
                           1332 ;src/main.c:245: cpct_drawSpriteMasked(sprite, memptr, 4, 16);
   07F0 C5            [11] 1333 	push	bc
   07F1 21 04 10      [10] 1334 	ld	hl,#0x1004
   07F4 E5            [11] 1335 	push	hl
   07F5 FD E5         [15] 1336 	push	iy
   07F7 D5            [11] 1337 	push	de
   07F8 CDr00r00      [17] 1338 	call	_cpct_drawSpriteMasked
   07FB C1            [10] 1339 	pop	bc
   07FC                    1340 00159$:
                           1341 ;src/main.c:248: if(e.vivo == 0){
   07FC DD 6E E9      [19] 1342 	ld	l,-23 (ix)
   07FF DD 66 EA      [19] 1343 	ld	h,-22 (ix)
   0802 5E            [ 7] 1344 	ld	e,(hl)
   0803 23            [ 6] 1345 	inc	hl
   0804 7E            [ 7] 1346 	ld	a, (hl)
   0805 B3            [ 4] 1347 	or	a,e
   0806 20 2B         [12] 1348 	jr	NZ,00161$
                           1349 ;src/main.c:249: memptr = cpct_getScreenPtr(VMEM,e.x,e.y);
   0808 DD 6E F8      [19] 1350 	ld	l,-8 (ix)
   080B DD 66 F9      [19] 1351 	ld	h,-7 (ix)
   080E 46            [ 7] 1352 	ld	b,(hl)
   080F DD 6E FA      [19] 1353 	ld	l,-6 (ix)
   0812 DD 66 FB      [19] 1354 	ld	h,-5 (ix)
   0815 4E            [ 7] 1355 	ld	c, (hl)
   0816 C5            [11] 1356 	push	bc
   0817 21 00 C0      [10] 1357 	ld	hl,#0xC000
   081A E5            [11] 1358 	push	hl
   081B CDr00r00      [17] 1359 	call	_cpct_getScreenPtr
   081E 4D            [ 4] 1360 	ld	c, l
   081F 44            [ 4] 1361 	ld	b, h
                           1362 ;src/main.c:250: cpct_drawSolidBox(memptr, 18, 4, 16);
   0820 59            [ 4] 1363 	ld	e, c
   0821 50            [ 4] 1364 	ld	d, b
   0822 C5            [11] 1365 	push	bc
   0823 21 04 10      [10] 1366 	ld	hl,#0x1004
   0826 E5            [11] 1367 	push	hl
   0827 3E 12         [ 7] 1368 	ld	a,#0x12
   0829 F5            [11] 1369 	push	af
   082A 33            [ 6] 1370 	inc	sp
   082B D5            [11] 1371 	push	de
   082C CDr00r00      [17] 1372 	call	_cpct_drawSolidBox
   082F F1            [10] 1373 	pop	af
   0830 F1            [10] 1374 	pop	af
   0831 33            [ 6] 1375 	inc	sp
   0832 C1            [10] 1376 	pop	bc
   0833                    1377 00161$:
                           1378 ;src/main.c:169: if(p.atk <= 20)
   0833 DD 6E EB      [19] 1379 	ld	l,-21 (ix)
   0836 DD 66 EC      [19] 1380 	ld	h,-20 (ix)
   0839 5E            [ 7] 1381 	ld	e,(hl)
   083A 23            [ 6] 1382 	inc	hl
   083B 56            [ 7] 1383 	ld	d,(hl)
                           1384 ;src/main.c:253: if(p.atk < 20)
   083C 7B            [ 4] 1385 	ld	a,e
   083D D6 14         [ 7] 1386 	sub	a, #0x14
   083F 7A            [ 4] 1387 	ld	a,d
   0840 DE 00         [ 7] 1388 	sbc	a, #0x00
   0842 30 10         [12] 1389 	jr	NC,00166$
                           1390 ;src/main.c:254: drawFatiga(p.atk,memptr,2);
   0844 C5            [11] 1391 	push	bc
   0845 3E 02         [ 7] 1392 	ld	a,#0x02
   0847 F5            [11] 1393 	push	af
   0848 33            [ 6] 1394 	inc	sp
   0849 C5            [11] 1395 	push	bc
   084A D5            [11] 1396 	push	de
   084B CDrAFr01      [17] 1397 	call	_drawFatiga
   084E F1            [10] 1398 	pop	af
   084F F1            [10] 1399 	pop	af
   0850 33            [ 6] 1400 	inc	sp
   0851 C1            [10] 1401 	pop	bc
   0852 18 25         [12] 1402 	jr	00167$
   0854                    1403 00166$:
                           1404 ;src/main.c:255: else if(p.atk > 20)
   0854 3E 14         [ 7] 1405 	ld	a,#0x14
   0856 BB            [ 4] 1406 	cp	a, e
   0857 3E 00         [ 7] 1407 	ld	a,#0x00
   0859 9A            [ 4] 1408 	sbc	a, d
   085A 30 10         [12] 1409 	jr	NC,00163$
                           1410 ;src/main.c:256: drawFatiga(p.atk,memptr,16);
   085C C5            [11] 1411 	push	bc
   085D 3E 10         [ 7] 1412 	ld	a,#0x10
   085F F5            [11] 1413 	push	af
   0860 33            [ 6] 1414 	inc	sp
   0861 C5            [11] 1415 	push	bc
   0862 D5            [11] 1416 	push	de
   0863 CDrAFr01      [17] 1417 	call	_drawFatiga
   0866 F1            [10] 1418 	pop	af
   0867 F1            [10] 1419 	pop	af
   0868 33            [ 6] 1420 	inc	sp
   0869 C1            [10] 1421 	pop	bc
   086A 18 0D         [12] 1422 	jr	00167$
   086C                    1423 00163$:
                           1424 ;src/main.c:258: drawFatiga(p.atk,memptr,0);
   086C C5            [11] 1425 	push	bc
   086D AF            [ 4] 1426 	xor	a, a
   086E F5            [11] 1427 	push	af
   086F 33            [ 6] 1428 	inc	sp
   0870 C5            [11] 1429 	push	bc
   0871 D5            [11] 1430 	push	de
   0872 CDrAFr01      [17] 1431 	call	_drawFatiga
   0875 F1            [10] 1432 	pop	af
   0876 F1            [10] 1433 	pop	af
   0877 33            [ 6] 1434 	inc	sp
   0878 C1            [10] 1435 	pop	bc
   0879                    1436 00167$:
                           1437 ;src/main.c:260: drawVida(p.life, memptr);
   0879 DD 6E EF      [19] 1438 	ld	l,-17 (ix)
   087C DD 66 F0      [19] 1439 	ld	h,-16 (ix)
   087F 5E            [ 7] 1440 	ld	e,(hl)
   0880 23            [ 6] 1441 	inc	hl
   0881 56            [ 7] 1442 	ld	d,(hl)
   0882 C5            [11] 1443 	push	bc
   0883 D5            [11] 1444 	push	de
   0884 CDr6Cr02      [17] 1445 	call	_drawVida
   0887 F1            [10] 1446 	pop	af
   0888 F1            [10] 1447 	pop	af
   0889 C3r4Cr04      [10] 1448 	jp	00169$
   088C                    1449 00171$:
   088C DD F9         [10] 1450 	ld	sp, ix
   088E DD E1         [14] 1451 	pop	ix
   0890 C9            [10] 1452 	ret
                           1453 ;src/main.c:267: void main(void) {
                           1454 ;	---------------------------------
                           1455 ; Function main
                           1456 ; ---------------------------------
   0891                    1457 _main::
                           1458 ;src/main.c:269: init();
   0891 CDr00r00      [17] 1459 	call	_init
                           1460 ;src/main.c:272: while(1){
   0894                    1461 00102$:
                           1462 ;src/main.c:273: menu();
   0894 CDr29r00      [17] 1463 	call	_menu
                           1464 ;src/main.c:274: game();
   0897 CDr13r03      [17] 1465 	call	_game
   089A 18 F8         [12] 1466 	jr	00102$
                           1467 	.area _CODE
                           1468 	.area _INITIALIZER
                           1469 	.area _CABS (ABS)
>>>>>>> 100f2f53c950a4f5642a7437e7ddf52df6d2a2ee
