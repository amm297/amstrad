                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Sep 26 2015) (CYGWIN)
                              4 ; This file was generated Fri Oct  2 18:22:59 2015
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _loadMap
                             14 	.globl _game
                             15 	.globl _checkColisions
                             16 	.globl _drawMap
                             17 	.globl _menu
                             18 	.globl _init
                             19 	.globl _cpct_getScreenPtr
                             20 	.globl _cpct_setPalette
                             21 	.globl _cpct_fw2hw
                             22 	.globl _cpct_waitVSYNC
                             23 	.globl _cpct_setVideoMode
                             24 	.globl _cpct_drawStringM0
                             25 	.globl _cpct_drawSolidBox
                             26 	.globl _cpct_drawSpriteMasked
                             27 	.globl _cpct_isKeyPressed
                             28 	.globl _cpct_scanKeyboard_f
                             29 	.globl _cpct_memset
                             30 	.globl _cpct_disableFirmware
                             31 	.globl _sprite
                             32 	.globl _scene
                             33 	.globl _g_palette
                             34 	.globl _mapa2
                             35 	.globl _mapa1
                             36 ;--------------------------------------------------------
                             37 ; special function registers
                             38 ;--------------------------------------------------------
                             39 ;--------------------------------------------------------
                             40 ; ram data
                             41 ;--------------------------------------------------------
                             42 	.area _DATA
   0000                      43 _scene::
   0000                      44 	.ds 6
                             45 ;--------------------------------------------------------
                             46 ; ram data
                             47 ;--------------------------------------------------------
                             48 	.area _INITIALIZED
   0000                      49 _sprite::
   0000                      50 	.ds 2
                             51 ;--------------------------------------------------------
                             52 ; absolute external ram data
                             53 ;--------------------------------------------------------
                             54 	.area _DABS (ABS)
                             55 ;--------------------------------------------------------
                             56 ; global & static initialisations
                             57 ;--------------------------------------------------------
                             58 	.area _HOME
                             59 	.area _GSINIT
                             60 	.area _GSFINAL
                             61 	.area _GSINIT
                             62 ;--------------------------------------------------------
                             63 ; Home
                             64 ;--------------------------------------------------------
                             65 	.area _HOME
                             66 	.area _HOME
                             67 ;--------------------------------------------------------
                             68 ; code
                             69 ;--------------------------------------------------------
                             70 	.area _CODE
                             71 ;src/main.c:67: void init(){
                             72 ;	---------------------------------
                             73 ; Function init
                             74 ; ---------------------------------
   0000                      75 _init::
                             76 ;src/main.c:68: cpct_disableFirmware();
   0000 CDr00r00      [17]   77 	call	_cpct_disableFirmware
                             78 ;src/main.c:69: cpct_setVideoMode(0);
   0003 AF            [ 4]   79 	xor	a, a
   0004 F5            [11]   80 	push	af
   0005 33            [ 6]   81 	inc	sp
   0006 CDr00r00      [17]   82 	call	_cpct_setVideoMode
   0009 33            [ 6]   83 	inc	sp
                             84 ;src/main.c:70: cpct_fw2hw(g_palette,4);
   000A 11rA5r02      [10]   85 	ld	de,#_g_palette
   000D 3E 04         [ 7]   86 	ld	a,#0x04
   000F F5            [11]   87 	push	af
   0010 33            [ 6]   88 	inc	sp
   0011 D5            [11]   89 	push	de
   0012 CDr00r00      [17]   90 	call	_cpct_fw2hw
   0015 F1            [10]   91 	pop	af
   0016 33            [ 6]   92 	inc	sp
                             93 ;src/main.c:71: cpct_setPalette(g_palette,4);
   0017 11rA5r02      [10]   94 	ld	de,#_g_palette
   001A 3E 04         [ 7]   95 	ld	a,#0x04
   001C F5            [11]   96 	push	af
   001D 33            [ 6]   97 	inc	sp
   001E D5            [11]   98 	push	de
   001F CDr00r00      [17]   99 	call	_cpct_setPalette
   0022 F1            [10]  100 	pop	af
   0023 33            [ 6]  101 	inc	sp
   0024 C9            [10]  102 	ret
   0025                     103 _mapa1:
   0025 01 00               104 	.dw #0x0001
   0027 01 00               105 	.dw #0x0001
   0029 01 00               106 	.dw #0x0001
   002B 01 00               107 	.dw #0x0001
   002D 01 00               108 	.dw #0x0001
   002F 01 00               109 	.dw #0x0001
   0031 01 00               110 	.dw #0x0001
   0033 01 00               111 	.dw #0x0001
   0035 01 00               112 	.dw #0x0001
   0037 01 00               113 	.dw #0x0001
   0039 01 00               114 	.dw #0x0001
   003B 01 00               115 	.dw #0x0001
   003D 01 00               116 	.dw #0x0001
   003F 01 00               117 	.dw #0x0001
   0041 01 00               118 	.dw #0x0001
   0043 01 00               119 	.dw #0x0001
   0045 01 00               120 	.dw #0x0001
   0047 00 00               121 	.dw #0x0000
   0049 00 00               122 	.dw #0x0000
   004B 00 00               123 	.dw #0x0000
   004D 00 00               124 	.dw #0x0000
   004F 00 00               125 	.dw #0x0000
   0051 00 00               126 	.dw #0x0000
   0053 00 00               127 	.dw #0x0000
   0055 00 00               128 	.dw #0x0000
   0057 00 00               129 	.dw #0x0000
   0059 00 00               130 	.dw #0x0000
   005B 00 00               131 	.dw #0x0000
   005D 00 00               132 	.dw #0x0000
   005F 00 00               133 	.dw #0x0000
   0061 00 00               134 	.dw #0x0000
   0063 01 00               135 	.dw #0x0001
   0065 01 00               136 	.dw #0x0001
   0067 00 00               137 	.dw #0x0000
   0069 00 00               138 	.dw #0x0000
   006B 00 00               139 	.dw #0x0000
   006D 00 00               140 	.dw #0x0000
   006F 00 00               141 	.dw #0x0000
   0071 00 00               142 	.dw #0x0000
   0073 00 00               143 	.dw #0x0000
   0075 00 00               144 	.dw #0x0000
   0077 00 00               145 	.dw #0x0000
   0079 00 00               146 	.dw #0x0000
   007B 00 00               147 	.dw #0x0000
   007D 00 00               148 	.dw #0x0000
   007F 00 00               149 	.dw #0x0000
   0081 00 00               150 	.dw #0x0000
   0083 01 00               151 	.dw #0x0001
   0085 01 00               152 	.dw #0x0001
   0087 00 00               153 	.dw #0x0000
   0089 00 00               154 	.dw #0x0000
   008B 00 00               155 	.dw #0x0000
   008D 00 00               156 	.dw #0x0000
   008F 00 00               157 	.dw #0x0000
   0091 00 00               158 	.dw #0x0000
   0093 00 00               159 	.dw #0x0000
   0095 00 00               160 	.dw #0x0000
   0097 00 00               161 	.dw #0x0000
   0099 00 00               162 	.dw #0x0000
   009B 00 00               163 	.dw #0x0000
   009D 00 00               164 	.dw #0x0000
   009F 00 00               165 	.dw #0x0000
   00A1 00 00               166 	.dw #0x0000
   00A3 01 00               167 	.dw #0x0001
   00A5 01 00               168 	.dw #0x0001
   00A7 00 00               169 	.dw #0x0000
   00A9 00 00               170 	.dw #0x0000
   00AB 00 00               171 	.dw #0x0000
   00AD 00 00               172 	.dw #0x0000
   00AF 00 00               173 	.dw #0x0000
   00B1 00 00               174 	.dw #0x0000
   00B3 00 00               175 	.dw #0x0000
   00B5 00 00               176 	.dw #0x0000
   00B7 00 00               177 	.dw #0x0000
   00B9 00 00               178 	.dw #0x0000
   00BB 00 00               179 	.dw #0x0000
   00BD 00 00               180 	.dw #0x0000
   00BF 00 00               181 	.dw #0x0000
   00C1 00 00               182 	.dw #0x0000
   00C3 01 00               183 	.dw #0x0001
   00C5 00 00               184 	.dw #0x0000
   00C7 00 00               185 	.dw #0x0000
   00C9 00 00               186 	.dw #0x0000
   00CB 00 00               187 	.dw #0x0000
   00CD 00 00               188 	.dw #0x0000
   00CF 00 00               189 	.dw #0x0000
   00D1 00 00               190 	.dw #0x0000
   00D3 00 00               191 	.dw #0x0000
   00D5 00 00               192 	.dw #0x0000
   00D7 00 00               193 	.dw #0x0000
   00D9 00 00               194 	.dw #0x0000
   00DB 00 00               195 	.dw #0x0000
   00DD 00 00               196 	.dw #0x0000
   00DF 00 00               197 	.dw #0x0000
   00E1 00 00               198 	.dw #0x0000
   00E3 01 00               199 	.dw #0x0001
   00E5 01 00               200 	.dw #0x0001
   00E7 00 00               201 	.dw #0x0000
   00E9 00 00               202 	.dw #0x0000
   00EB 00 00               203 	.dw #0x0000
   00ED 00 00               204 	.dw #0x0000
   00EF 00 00               205 	.dw #0x0000
   00F1 00 00               206 	.dw #0x0000
   00F3 00 00               207 	.dw #0x0000
   00F5 00 00               208 	.dw #0x0000
   00F7 00 00               209 	.dw #0x0000
   00F9 00 00               210 	.dw #0x0000
   00FB 00 00               211 	.dw #0x0000
   00FD 00 00               212 	.dw #0x0000
   00FF 00 00               213 	.dw #0x0000
   0101 00 00               214 	.dw #0x0000
   0103 01 00               215 	.dw #0x0001
   0105 01 00               216 	.dw #0x0001
   0107 00 00               217 	.dw #0x0000
   0109 00 00               218 	.dw #0x0000
   010B 00 00               219 	.dw #0x0000
   010D 00 00               220 	.dw #0x0000
   010F 00 00               221 	.dw #0x0000
   0111 00 00               222 	.dw #0x0000
   0113 00 00               223 	.dw #0x0000
   0115 00 00               224 	.dw #0x0000
   0117 00 00               225 	.dw #0x0000
   0119 00 00               226 	.dw #0x0000
   011B 00 00               227 	.dw #0x0000
   011D 00 00               228 	.dw #0x0000
   011F 00 00               229 	.dw #0x0000
   0121 00 00               230 	.dw #0x0000
   0123 01 00               231 	.dw #0x0001
   0125 01 00               232 	.dw #0x0001
   0127 00 00               233 	.dw #0x0000
   0129 00 00               234 	.dw #0x0000
   012B 00 00               235 	.dw #0x0000
   012D 00 00               236 	.dw #0x0000
   012F 00 00               237 	.dw #0x0000
   0131 00 00               238 	.dw #0x0000
   0133 00 00               239 	.dw #0x0000
   0135 00 00               240 	.dw #0x0000
   0137 00 00               241 	.dw #0x0000
   0139 00 00               242 	.dw #0x0000
   013B 00 00               243 	.dw #0x0000
   013D 00 00               244 	.dw #0x0000
   013F 00 00               245 	.dw #0x0000
   0141 00 00               246 	.dw #0x0000
   0143 01 00               247 	.dw #0x0001
   0145 01 00               248 	.dw #0x0001
   0147 01 00               249 	.dw #0x0001
   0149 01 00               250 	.dw #0x0001
   014B 01 00               251 	.dw #0x0001
   014D 01 00               252 	.dw #0x0001
   014F 01 00               253 	.dw #0x0001
   0151 01 00               254 	.dw #0x0001
   0153 01 00               255 	.dw #0x0001
   0155 01 00               256 	.dw #0x0001
   0157 01 00               257 	.dw #0x0001
   0159 01 00               258 	.dw #0x0001
   015B 01 00               259 	.dw #0x0001
   015D 01 00               260 	.dw #0x0001
   015F 01 00               261 	.dw #0x0001
   0161 01 00               262 	.dw #0x0001
   0163 01 00               263 	.dw #0x0001
   0165                     264 _mapa2:
   0165 01 00               265 	.dw #0x0001
   0167 01 00               266 	.dw #0x0001
   0169 01 00               267 	.dw #0x0001
   016B 01 00               268 	.dw #0x0001
   016D 01 00               269 	.dw #0x0001
   016F 01 00               270 	.dw #0x0001
   0171 01 00               271 	.dw #0x0001
   0173 01 00               272 	.dw #0x0001
   0175 01 00               273 	.dw #0x0001
   0177 01 00               274 	.dw #0x0001
   0179 01 00               275 	.dw #0x0001
   017B 01 00               276 	.dw #0x0001
   017D 01 00               277 	.dw #0x0001
   017F 01 00               278 	.dw #0x0001
   0181 01 00               279 	.dw #0x0001
   0183 01 00               280 	.dw #0x0001
   0185 01 00               281 	.dw #0x0001
   0187 01 00               282 	.dw #0x0001
   0189 01 00               283 	.dw #0x0001
   018B 00 00               284 	.dw #0x0000
   018D 00 00               285 	.dw #0x0000
   018F 00 00               286 	.dw #0x0000
   0191 00 00               287 	.dw #0x0000
   0193 00 00               288 	.dw #0x0000
   0195 00 00               289 	.dw #0x0000
   0197 00 00               290 	.dw #0x0000
   0199 00 00               291 	.dw #0x0000
   019B 00 00               292 	.dw #0x0000
   019D 00 00               293 	.dw #0x0000
   019F 01 00               294 	.dw #0x0001
   01A1 01 00               295 	.dw #0x0001
   01A3 01 00               296 	.dw #0x0001
   01A5 01 00               297 	.dw #0x0001
   01A7 01 00               298 	.dw #0x0001
   01A9 01 00               299 	.dw #0x0001
   01AB 00 00               300 	.dw #0x0000
   01AD 00 00               301 	.dw #0x0000
   01AF 00 00               302 	.dw #0x0000
   01B1 00 00               303 	.dw #0x0000
   01B3 00 00               304 	.dw #0x0000
   01B5 00 00               305 	.dw #0x0000
   01B7 00 00               306 	.dw #0x0000
   01B9 00 00               307 	.dw #0x0000
   01BB 00 00               308 	.dw #0x0000
   01BD 00 00               309 	.dw #0x0000
   01BF 01 00               310 	.dw #0x0001
   01C1 01 00               311 	.dw #0x0001
   01C3 01 00               312 	.dw #0x0001
   01C5 01 00               313 	.dw #0x0001
   01C7 00 00               314 	.dw #0x0000
   01C9 01 00               315 	.dw #0x0001
   01CB 00 00               316 	.dw #0x0000
   01CD 00 00               317 	.dw #0x0000
   01CF 00 00               318 	.dw #0x0000
   01D1 00 00               319 	.dw #0x0000
   01D3 01 00               320 	.dw #0x0001
   01D5 01 00               321 	.dw #0x0001
   01D7 01 00               322 	.dw #0x0001
   01D9 00 00               323 	.dw #0x0000
   01DB 00 00               324 	.dw #0x0000
   01DD 00 00               325 	.dw #0x0000
   01DF 01 00               326 	.dw #0x0001
   01E1 00 00               327 	.dw #0x0000
   01E3 01 00               328 	.dw #0x0001
   01E5 01 00               329 	.dw #0x0001
   01E7 00 00               330 	.dw #0x0000
   01E9 01 00               331 	.dw #0x0001
   01EB 00 00               332 	.dw #0x0000
   01ED 00 00               333 	.dw #0x0000
   01EF 00 00               334 	.dw #0x0000
   01F1 00 00               335 	.dw #0x0000
   01F3 01 00               336 	.dw #0x0001
   01F5 01 00               337 	.dw #0x0001
   01F7 01 00               338 	.dw #0x0001
   01F9 00 00               339 	.dw #0x0000
   01FB 00 00               340 	.dw #0x0000
   01FD 00 00               341 	.dw #0x0000
   01FF 01 00               342 	.dw #0x0001
   0201 00 00               343 	.dw #0x0000
   0203 01 00               344 	.dw #0x0001
   0205 00 00               345 	.dw #0x0000
   0207 00 00               346 	.dw #0x0000
   0209 01 00               347 	.dw #0x0001
   020B 00 00               348 	.dw #0x0000
   020D 00 00               349 	.dw #0x0000
   020F 00 00               350 	.dw #0x0000
   0211 00 00               351 	.dw #0x0000
   0213 01 00               352 	.dw #0x0001
   0215 00 00               353 	.dw #0x0000
   0217 01 00               354 	.dw #0x0001
   0219 00 00               355 	.dw #0x0000
   021B 00 00               356 	.dw #0x0000
   021D 00 00               357 	.dw #0x0000
   021F 01 00               358 	.dw #0x0001
   0221 00 00               359 	.dw #0x0000
   0223 01 00               360 	.dw #0x0001
   0225 01 00               361 	.dw #0x0001
   0227 00 00               362 	.dw #0x0000
   0229 01 00               363 	.dw #0x0001
   022B 01 00               364 	.dw #0x0001
   022D 01 00               365 	.dw #0x0001
   022F 01 00               366 	.dw #0x0001
   0231 01 00               367 	.dw #0x0001
   0233 00 00               368 	.dw #0x0000
   0235 00 00               369 	.dw #0x0000
   0237 00 00               370 	.dw #0x0000
   0239 01 00               371 	.dw #0x0001
   023B 01 00               372 	.dw #0x0001
   023D 01 00               373 	.dw #0x0001
   023F 01 00               374 	.dw #0x0001
   0241 00 00               375 	.dw #0x0000
   0243 01 00               376 	.dw #0x0001
   0245 01 00               377 	.dw #0x0001
   0247 00 00               378 	.dw #0x0000
   0249 01 00               379 	.dw #0x0001
   024B 01 00               380 	.dw #0x0001
   024D 01 00               381 	.dw #0x0001
   024F 01 00               382 	.dw #0x0001
   0251 01 00               383 	.dw #0x0001
   0253 00 00               384 	.dw #0x0000
   0255 00 00               385 	.dw #0x0000
   0257 00 00               386 	.dw #0x0000
   0259 01 00               387 	.dw #0x0001
   025B 01 00               388 	.dw #0x0001
   025D 01 00               389 	.dw #0x0001
   025F 01 00               390 	.dw #0x0001
   0261 00 00               391 	.dw #0x0000
   0263 01 00               392 	.dw #0x0001
   0265 01 00               393 	.dw #0x0001
   0267 00 00               394 	.dw #0x0000
   0269 00 00               395 	.dw #0x0000
   026B 00 00               396 	.dw #0x0000
   026D 00 00               397 	.dw #0x0000
   026F 00 00               398 	.dw #0x0000
   0271 00 00               399 	.dw #0x0000
   0273 00 00               400 	.dw #0x0000
   0275 00 00               401 	.dw #0x0000
   0277 00 00               402 	.dw #0x0000
   0279 00 00               403 	.dw #0x0000
   027B 00 00               404 	.dw #0x0000
   027D 00 00               405 	.dw #0x0000
   027F 00 00               406 	.dw #0x0000
   0281 00 00               407 	.dw #0x0000
   0283 01 00               408 	.dw #0x0001
   0285 01 00               409 	.dw #0x0001
   0287 01 00               410 	.dw #0x0001
   0289 01 00               411 	.dw #0x0001
   028B 01 00               412 	.dw #0x0001
   028D 01 00               413 	.dw #0x0001
   028F 01 00               414 	.dw #0x0001
   0291 01 00               415 	.dw #0x0001
   0293 01 00               416 	.dw #0x0001
   0295 01 00               417 	.dw #0x0001
   0297 01 00               418 	.dw #0x0001
   0299 01 00               419 	.dw #0x0001
   029B 01 00               420 	.dw #0x0001
   029D 01 00               421 	.dw #0x0001
   029F 01 00               422 	.dw #0x0001
   02A1 01 00               423 	.dw #0x0001
   02A3 01 00               424 	.dw #0x0001
   02A5                     425 _g_palette:
   02A5 00                  426 	.db #0x00	; 0
   02A6 1A                  427 	.db #0x1A	; 26
   02A7 06                  428 	.db #0x06	; 6
   02A8 12                  429 	.db #0x12	; 18
                            430 ;src/main.c:75: void menu(){
                            431 ;	---------------------------------
                            432 ; Function menu
                            433 ; ---------------------------------
   02A9                     434 _menu::
                            435 ;src/main.c:77: cpct_clearScreen(0);
   02A9 21 00 40      [10]  436 	ld	hl,#0x4000
   02AC E5            [11]  437 	push	hl
   02AD AF            [ 4]  438 	xor	a, a
   02AE F5            [11]  439 	push	af
   02AF 33            [ 6]  440 	inc	sp
   02B0 26 C0         [ 7]  441 	ld	h, #0xC0
   02B2 E5            [11]  442 	push	hl
   02B3 CDr00r00      [17]  443 	call	_cpct_memset
                            444 ;src/main.c:79: memptr = cpct_getScreenPtr(VMEM,20,10);
   02B6 21 14 0A      [10]  445 	ld	hl,#0x0A14
   02B9 E5            [11]  446 	push	hl
   02BA 21 00 C0      [10]  447 	ld	hl,#0xC000
   02BD E5            [11]  448 	push	hl
   02BE CDr00r00      [17]  449 	call	_cpct_getScreenPtr
                            450 ;src/main.c:80: cpct_drawStringM0("MENU",memptr,2,3);
   02C1 EB            [ 4]  451 	ex	de,hl
   02C2 01rFEr02      [10]  452 	ld	bc,#___str_0+0
   02C5 21 02 03      [10]  453 	ld	hl,#0x0302
   02C8 E5            [11]  454 	push	hl
   02C9 D5            [11]  455 	push	de
   02CA C5            [11]  456 	push	bc
   02CB CDr00r00      [17]  457 	call	_cpct_drawStringM0
   02CE 21 06 00      [10]  458 	ld	hl,#6
   02D1 39            [11]  459 	add	hl,sp
   02D2 F9            [ 6]  460 	ld	sp,hl
                            461 ;src/main.c:82: memptr = cpct_getScreenPtr(VMEM,18,180);
   02D3 21 12 B4      [10]  462 	ld	hl,#0xB412
   02D6 E5            [11]  463 	push	hl
   02D7 21 00 C0      [10]  464 	ld	hl,#0xC000
   02DA E5            [11]  465 	push	hl
   02DB CDr00r00      [17]  466 	call	_cpct_getScreenPtr
                            467 ;src/main.c:83: cpct_drawStringM0("Pulsa Intro",memptr,4,5);
   02DE EB            [ 4]  468 	ex	de,hl
   02DF 01r03r03      [10]  469 	ld	bc,#___str_1+0
   02E2 21 04 05      [10]  470 	ld	hl,#0x0504
   02E5 E5            [11]  471 	push	hl
   02E6 D5            [11]  472 	push	de
   02E7 C5            [11]  473 	push	bc
   02E8 CDr00r00      [17]  474 	call	_cpct_drawStringM0
   02EB 21 06 00      [10]  475 	ld	hl,#6
   02EE 39            [11]  476 	add	hl,sp
   02EF F9            [ 6]  477 	ld	sp,hl
                            478 ;src/main.c:85: do{
   02F0                     479 00101$:
                            480 ;src/main.c:86: cpct_scanKeyboard_f();
   02F0 CDr00r00      [17]  481 	call	_cpct_scanKeyboard_f
                            482 ;src/main.c:87: }while(!cpct_isKeyPressed(Key_Enter));
   02F3 21 00 40      [10]  483 	ld	hl,#0x4000
   02F6 CDr00r00      [17]  484 	call	_cpct_isKeyPressed
   02F9 7D            [ 4]  485 	ld	a,l
   02FA B7            [ 4]  486 	or	a, a
   02FB 28 F3         [12]  487 	jr	Z,00101$
   02FD C9            [10]  488 	ret
   02FE                     489 ___str_0:
   02FE 4D 45 4E 55         490 	.ascii "MENU"
   0302 00                  491 	.db 0x00
   0303                     492 ___str_1:
   0303 50 75 6C 73 61 20   493 	.ascii "Pulsa Intro"
        49 6E 74 72 6F
   030E 00                  494 	.db 0x00
                            495 ;src/main.c:93: void drawMap(int t){
                            496 ;	---------------------------------
                            497 ; Function drawMap
                            498 ; ---------------------------------
   030F                     499 _drawMap::
   030F DD E5         [15]  500 	push	ix
   0311 DD 21 00 00   [14]  501 	ld	ix,#0
   0315 DD 39         [15]  502 	add	ix,sp
   0317 21 FA FF      [10]  503 	ld	hl,#-6
   031A 39            [11]  504 	add	hl,sp
   031B F9            [ 6]  505 	ld	sp,hl
                            506 ;src/main.c:97: if(t == 1){ 
   031C DD 7E 04      [19]  507 	ld	a,4 (ix)
   031F 3D            [ 4]  508 	dec	a
   0320 20 3A         [12]  509 	jr	NZ,00103$
   0322 DD 7E 05      [19]  510 	ld	a,5 (ix)
   0325 B7            [ 4]  511 	or	a, a
   0326 20 34         [12]  512 	jr	NZ,00103$
                            513 ;src/main.c:98: for(x=0;x<height;x++){
   0328 11 00 00      [10]  514 	ld	de,#0x0000
   032B                     515 00111$:
                            516 ;src/main.c:99: scene[x] = mapa1[x];
   032B 6B            [ 4]  517 	ld	l, e
   032C 62            [ 4]  518 	ld	h, d
   032D 29            [11]  519 	add	hl, hl
   032E 3Er00         [ 7]  520 	ld	a,#<(_scene)
   0330 85            [ 4]  521 	add	a, l
   0331 DD 77 FE      [19]  522 	ld	-2 (ix),a
   0334 3Es00         [ 7]  523 	ld	a,#>(_scene)
   0336 8C            [ 4]  524 	adc	a, h
   0337 DD 77 FF      [19]  525 	ld	-1 (ix),a
   033A 6B            [ 4]  526 	ld	l, e
   033B 62            [ 4]  527 	ld	h, d
   033C 29            [11]  528 	add	hl, hl
   033D 29            [11]  529 	add	hl, hl
   033E 29            [11]  530 	add	hl, hl
   033F 29            [11]  531 	add	hl, hl
   0340 29            [11]  532 	add	hl, hl
   0341 01r25r00      [10]  533 	ld	bc,#_mapa1
   0344 09            [11]  534 	add	hl,bc
   0345 45            [ 4]  535 	ld	b,l
   0346 4C            [ 4]  536 	ld	c,h
   0347 DD 6E FE      [19]  537 	ld	l,-2 (ix)
   034A DD 66 FF      [19]  538 	ld	h,-1 (ix)
   034D 70            [ 7]  539 	ld	(hl),b
   034E 23            [ 6]  540 	inc	hl
   034F 71            [ 7]  541 	ld	(hl),c
                            542 ;src/main.c:98: for(x=0;x<height;x++){
   0350 13            [ 6]  543 	inc	de
   0351 7B            [ 4]  544 	ld	a,e
   0352 D6 0A         [ 7]  545 	sub	a, #0x0A
   0354 7A            [ 4]  546 	ld	a,d
   0355 17            [ 4]  547 	rla
   0356 3F            [ 4]  548 	ccf
   0357 1F            [ 4]  549 	rra
   0358 DE 80         [ 7]  550 	sbc	a, #0x80
   035A 38 CF         [12]  551 	jr	C,00111$
   035C                     552 00103$:
                            553 ;src/main.c:103: if(t == 2){ 
   035C DD 7E 04      [19]  554 	ld	a,4 (ix)
   035F D6 02         [ 7]  555 	sub	a, #0x02
   0361 20 30         [12]  556 	jr	NZ,00128$
   0363 DD 7E 05      [19]  557 	ld	a,5 (ix)
   0366 B7            [ 4]  558 	or	a, a
   0367 20 2A         [12]  559 	jr	NZ,00128$
                            560 ;src/main.c:104: for(x=0;x<height;x++){
   0369 01 00 00      [10]  561 	ld	bc,#0x0000
   036C                     562 00113$:
                            563 ;src/main.c:105: scene[x] = mapa2[x];
   036C 69            [ 4]  564 	ld	l, c
   036D 60            [ 4]  565 	ld	h, b
   036E 29            [11]  566 	add	hl, hl
   036F FD 21r00r00   [14]  567 	ld	iy,#_scene
   0373 EB            [ 4]  568 	ex	de,hl
   0374 FD 19         [15]  569 	add	iy, de
   0376 69            [ 4]  570 	ld	l, c
   0377 60            [ 4]  571 	ld	h, b
   0378 29            [11]  572 	add	hl, hl
   0379 29            [11]  573 	add	hl, hl
   037A 29            [11]  574 	add	hl, hl
   037B 29            [11]  575 	add	hl, hl
   037C 29            [11]  576 	add	hl, hl
   037D 11r65r01      [10]  577 	ld	de,#_mapa2
   0380 19            [11]  578 	add	hl,de
   0381 FD 75 00      [19]  579 	ld	0 (iy),l
   0384 FD 74 01      [19]  580 	ld	1 (iy),h
                            581 ;src/main.c:104: for(x=0;x<height;x++){
   0387 03            [ 6]  582 	inc	bc
   0388 79            [ 4]  583 	ld	a,c
   0389 D6 0A         [ 7]  584 	sub	a, #0x0A
   038B 78            [ 4]  585 	ld	a,b
   038C 17            [ 4]  586 	rla
   038D 3F            [ 4]  587 	ccf
   038E 1F            [ 4]  588 	rra
   038F DE 80         [ 7]  589 	sbc	a, #0x80
   0391 38 D9         [12]  590 	jr	C,00113$
                            591 ;src/main.c:109: for(posY=0; posY<height;posY++){
   0393                     592 00128$:
   0393 DD 36 FC 00   [19]  593 	ld	-4 (ix),#0x00
   0397 DD 36 FD 00   [19]  594 	ld	-3 (ix),#0x00
                            595 ;src/main.c:110: for(posX=0; posX<width;posX++){
   039B                     596 00126$:
   039B C1            [10]  597 	pop	bc
   039C E1            [10]  598 	pop	hl
   039D E5            [11]  599 	push	hl
   039E C5            [11]  600 	push	bc
   039F 29            [11]  601 	add	hl, hl
   03A0 3Er00         [ 7]  602 	ld	a,#<(_scene)
   03A2 85            [ 4]  603 	add	a, l
   03A3 DD 77 FE      [19]  604 	ld	-2 (ix),a
   03A6 3Es00         [ 7]  605 	ld	a,#>(_scene)
   03A8 8C            [ 4]  606 	adc	a, h
   03A9 DD 77 FF      [19]  607 	ld	-1 (ix),a
   03AC 11 00 00      [10]  608 	ld	de,#0x0000
   03AF                     609 00115$:
                            610 ;src/main.c:111: memptr = cpct_getScreenPtr(VMEM, posX*5, posY*20); 
   03AF DD 7E FC      [19]  611 	ld	a,-4 (ix)
   03B2 4F            [ 4]  612 	ld	c,a
   03B3 87            [ 4]  613 	add	a, a
   03B4 87            [ 4]  614 	add	a, a
   03B5 81            [ 4]  615 	add	a, c
   03B6 87            [ 4]  616 	add	a, a
   03B7 87            [ 4]  617 	add	a, a
   03B8 47            [ 4]  618 	ld	b,a
   03B9 4B            [ 4]  619 	ld	c,e
   03BA 79            [ 4]  620 	ld	a,c
   03BB 87            [ 4]  621 	add	a, a
   03BC 87            [ 4]  622 	add	a, a
   03BD 81            [ 4]  623 	add	a, c
   03BE D5            [11]  624 	push	de
   03BF C5            [11]  625 	push	bc
   03C0 33            [ 6]  626 	inc	sp
   03C1 F5            [11]  627 	push	af
   03C2 33            [ 6]  628 	inc	sp
   03C3 21 00 C0      [10]  629 	ld	hl,#0xC000
   03C6 E5            [11]  630 	push	hl
   03C7 CDr00r00      [17]  631 	call	_cpct_getScreenPtr
   03CA D1            [10]  632 	pop	de
   03CB 33            [ 6]  633 	inc	sp
   03CC 33            [ 6]  634 	inc	sp
   03CD E5            [11]  635 	push	hl
                            636 ;src/main.c:112: if(scene[posY][posX] == 1){
   03CE DD 6E FE      [19]  637 	ld	l,-2 (ix)
   03D1 DD 66 FF      [19]  638 	ld	h,-1 (ix)
   03D4 4E            [ 7]  639 	ld	c,(hl)
   03D5 23            [ 6]  640 	inc	hl
   03D6 46            [ 7]  641 	ld	b,(hl)
   03D7 6B            [ 4]  642 	ld	l, e
   03D8 62            [ 4]  643 	ld	h, d
   03D9 29            [11]  644 	add	hl, hl
   03DA 09            [11]  645 	add	hl,bc
   03DB 46            [ 7]  646 	ld	b,(hl)
   03DC 23            [ 6]  647 	inc	hl
   03DD 66            [ 7]  648 	ld	h,(hl)
   03DE 10 17         [13]  649 	djnz	00116$
   03E0 7C            [ 4]  650 	ld	a,h
   03E1 B7            [ 4]  651 	or	a, a
   03E2 20 13         [12]  652 	jr	NZ,00116$
                            653 ;src/main.c:113: cpct_drawSolidBox(memptr, 3, 5, 20);
   03E4 C1            [10]  654 	pop	bc
   03E5 C5            [11]  655 	push	bc
   03E6 D5            [11]  656 	push	de
   03E7 21 05 14      [10]  657 	ld	hl,#0x1405
   03EA E5            [11]  658 	push	hl
   03EB 3E 03         [ 7]  659 	ld	a,#0x03
   03ED F5            [11]  660 	push	af
   03EE 33            [ 6]  661 	inc	sp
   03EF C5            [11]  662 	push	bc
   03F0 CDr00r00      [17]  663 	call	_cpct_drawSolidBox
   03F3 F1            [10]  664 	pop	af
   03F4 F1            [10]  665 	pop	af
   03F5 33            [ 6]  666 	inc	sp
   03F6 D1            [10]  667 	pop	de
   03F7                     668 00116$:
                            669 ;src/main.c:110: for(posX=0; posX<width;posX++){
   03F7 13            [ 6]  670 	inc	de
   03F8 7B            [ 4]  671 	ld	a,e
   03F9 D6 10         [ 7]  672 	sub	a, #0x10
   03FB 7A            [ 4]  673 	ld	a,d
   03FC 17            [ 4]  674 	rla
   03FD 3F            [ 4]  675 	ccf
   03FE 1F            [ 4]  676 	rra
   03FF DE 80         [ 7]  677 	sbc	a, #0x80
   0401 38 AC         [12]  678 	jr	C,00115$
                            679 ;src/main.c:109: for(posY=0; posY<height;posY++){
   0403 DD 34 FC      [23]  680 	inc	-4 (ix)
   0406 20 03         [12]  681 	jr	NZ,00163$
   0408 DD 34 FD      [23]  682 	inc	-3 (ix)
   040B                     683 00163$:
   040B DD 7E FC      [19]  684 	ld	a,-4 (ix)
   040E D6 0A         [ 7]  685 	sub	a, #0x0A
   0410 DD 7E FD      [19]  686 	ld	a,-3 (ix)
   0413 17            [ 4]  687 	rla
   0414 3F            [ 4]  688 	ccf
   0415 1F            [ 4]  689 	rra
   0416 DE 80         [ 7]  690 	sbc	a, #0x80
   0418 DAr9Br03      [10]  691 	jp	C,00126$
   041B DD F9         [10]  692 	ld	sp, ix
   041D DD E1         [14]  693 	pop	ix
   041F C9            [10]  694 	ret
                            695 ;src/main.c:123: void checkColisions(u8 *x,u8 *y, u8 lx, u8 ly){
                            696 ;	---------------------------------
                            697 ; Function checkColisions
                            698 ; ---------------------------------
   0420                     699 _checkColisions::
   0420 DD E5         [15]  700 	push	ix
   0422 DD 21 00 00   [14]  701 	ld	ix,#0
   0426 DD 39         [15]  702 	add	ix,sp
   0428 21 F8 FF      [10]  703 	ld	hl,#-8
   042B 39            [11]  704 	add	hl,sp
   042C F9            [ 6]  705 	ld	sp,hl
                            706 ;src/main.c:125: u8 *posX = x;
   042D DD 7E 04      [19]  707 	ld	a,4 (ix)
   0430 DD 77 FA      [19]  708 	ld	-6 (ix),a
   0433 DD 7E 05      [19]  709 	ld	a,5 (ix)
   0436 DD 77 FB      [19]  710 	ld	-5 (ix),a
                            711 ;src/main.c:126: u8 *posY = y;
   0439 DD 7E 06      [19]  712 	ld	a,6 (ix)
   043C DD 77 F8      [19]  713 	ld	-8 (ix),a
   043F DD 7E 07      [19]  714 	ld	a,7 (ix)
   0442 DD 77 F9      [19]  715 	ld	-7 (ix),a
                            716 ;src/main.c:137: if(    scene[(posY[0])/tileheight][(posX[0])/tilewidth] == 1   
   0445 E1            [10]  717 	pop	hl
   0446 E5            [11]  718 	push	hl
   0447 5E            [ 7]  719 	ld	e,(hl)
   0448 D5            [11]  720 	push	de
   0449 16 14         [ 7]  721 	ld	d,#0x14
   044B D5            [11]  722 	push	de
   044C CDr00r00      [17]  723 	call	__divuchar
   044F F1            [10]  724 	pop	af
   0450 D1            [10]  725 	pop	de
   0451 26 00         [ 7]  726 	ld	h,#0x00
   0453 29            [11]  727 	add	hl, hl
   0454 01r00r00      [10]  728 	ld	bc,#_scene
   0457 09            [11]  729 	add	hl,bc
   0458 4E            [ 7]  730 	ld	c,(hl)
   0459 23            [ 6]  731 	inc	hl
   045A 46            [ 7]  732 	ld	b,(hl)
   045B DD 6E FA      [19]  733 	ld	l,-6 (ix)
   045E DD 66 FB      [19]  734 	ld	h,-5 (ix)
   0461 56            [ 7]  735 	ld	d,(hl)
   0462 C5            [11]  736 	push	bc
   0463 D5            [11]  737 	push	de
   0464 3E 05         [ 7]  738 	ld	a,#0x05
   0466 F5            [11]  739 	push	af
   0467 33            [ 6]  740 	inc	sp
   0468 D5            [11]  741 	push	de
   0469 33            [ 6]  742 	inc	sp
   046A CDr00r00      [17]  743 	call	__divuchar
   046D F1            [10]  744 	pop	af
   046E D1            [10]  745 	pop	de
   046F C1            [10]  746 	pop	bc
   0470 26 00         [ 7]  747 	ld	h,#0x00
   0472 29            [11]  748 	add	hl, hl
   0473 DD 75 FE      [19]  749 	ld	-2 (ix),l
   0476 DD 74 FF      [19]  750 	ld	-1 (ix),h
   0479 DD 6E FE      [19]  751 	ld	l,-2 (ix)
   047C DD 66 FF      [19]  752 	ld	h,-1 (ix)
   047F 09            [11]  753 	add	hl,bc
   0480 7E            [ 7]  754 	ld	a, (hl)
   0481 23            [ 6]  755 	inc	hl
   0482 66            [ 7]  756 	ld	h,(hl)
   0483 6F            [ 4]  757 	ld	l,a
   0484 2D            [ 4]  758 	dec	l
   0485 20 04         [12]  759 	jr	NZ,00120$
   0487 7C            [ 4]  760 	ld	a,h
   0488 B7            [ 4]  761 	or	a, a
   0489 28 69         [12]  762 	jr	Z,00101$
   048B                     763 00120$:
                            764 ;src/main.c:138: || scene[(posY[0])/tileheight][(posX[0]+playerwidth-1)/tilewidth] == 1
   048B 6A            [ 4]  765 	ld	l,d
   048C 26 00         [ 7]  766 	ld	h,#0x00
   048E 23            [ 6]  767 	inc	hl
   048F 23            [ 6]  768 	inc	hl
   0490 23            [ 6]  769 	inc	hl
   0491 E5            [11]  770 	push	hl
   0492 FD E1         [14]  771 	pop	iy
   0494 C5            [11]  772 	push	bc
   0495 D5            [11]  773 	push	de
   0496 21 05 00      [10]  774 	ld	hl,#0x0005
   0499 E5            [11]  775 	push	hl
   049A FD E5         [15]  776 	push	iy
   049C CDr00r00      [17]  777 	call	__divsint
   049F F1            [10]  778 	pop	af
   04A0 F1            [10]  779 	pop	af
   04A1 D1            [10]  780 	pop	de
   04A2 C1            [10]  781 	pop	bc
   04A3 29            [11]  782 	add	hl, hl
   04A4 DD 75 FC      [19]  783 	ld	-4 (ix),l
   04A7 DD 74 FD      [19]  784 	ld	-3 (ix),h
   04AA DD 6E FC      [19]  785 	ld	l,-4 (ix)
   04AD DD 66 FD      [19]  786 	ld	h,-3 (ix)
   04B0 09            [11]  787 	add	hl,bc
   04B1 4E            [ 7]  788 	ld	c,(hl)
   04B2 23            [ 6]  789 	inc	hl
   04B3 66            [ 7]  790 	ld	h,(hl)
   04B4 0D            [ 4]  791 	dec	c
   04B5 20 04         [12]  792 	jr	NZ,00121$
   04B7 7C            [ 4]  793 	ld	a,h
   04B8 B7            [ 4]  794 	or	a, a
   04B9 28 39         [12]  795 	jr	Z,00101$
   04BB                     796 00121$:
                            797 ;src/main.c:139: || scene[(posY[0]+playerheight-2)/tileheight][(posX[0])/tilewidth] == 1 
   04BB 16 00         [ 7]  798 	ld	d,#0x00
   04BD 21 0E 00      [10]  799 	ld	hl,#0x000E
   04C0 19            [11]  800 	add	hl,de
   04C1 01 14 00      [10]  801 	ld	bc,#0x0014
   04C4 C5            [11]  802 	push	bc
   04C5 E5            [11]  803 	push	hl
   04C6 CDr00r00      [17]  804 	call	__divsint
   04C9 F1            [10]  805 	pop	af
   04CA F1            [10]  806 	pop	af
   04CB 29            [11]  807 	add	hl, hl
   04CC 11r00r00      [10]  808 	ld	de,#_scene
   04CF 19            [11]  809 	add	hl,de
   04D0 5E            [ 7]  810 	ld	e,(hl)
   04D1 23            [ 6]  811 	inc	hl
   04D2 56            [ 7]  812 	ld	d,(hl)
   04D3 DD 6E FE      [19]  813 	ld	l,-2 (ix)
   04D6 DD 66 FF      [19]  814 	ld	h,-1 (ix)
   04D9 19            [11]  815 	add	hl,de
   04DA 46            [ 7]  816 	ld	b,(hl)
   04DB 23            [ 6]  817 	inc	hl
   04DC 66            [ 7]  818 	ld	h,(hl)
   04DD 10 04         [13]  819 	djnz	00122$
   04DF 7C            [ 4]  820 	ld	a,h
   04E0 B7            [ 4]  821 	or	a, a
   04E1 28 11         [12]  822 	jr	Z,00101$
   04E3                     823 00122$:
                            824 ;src/main.c:140: || scene[(posY[0]+playerheight-2)/tileheight][(posX[0]+playerwidth-1)/tilewidth] == 1
   04E3 DD 6E FC      [19]  825 	ld	l,-4 (ix)
   04E6 DD 66 FD      [19]  826 	ld	h,-3 (ix)
   04E9 19            [11]  827 	add	hl,de
   04EA 5E            [ 7]  828 	ld	e,(hl)
   04EB 23            [ 6]  829 	inc	hl
   04EC 66            [ 7]  830 	ld	h,(hl)
   04ED 1D            [ 4]  831 	dec	e
   04EE 20 14         [12]  832 	jr	NZ,00106$
   04F0 7C            [ 4]  833 	ld	a,h
   04F1 B7            [ 4]  834 	or	a, a
   04F2 20 10         [12]  835 	jr	NZ,00106$
   04F4                     836 00101$:
                            837 ;src/main.c:144: *posX=lx;
   04F4 DD 6E FA      [19]  838 	ld	l,-6 (ix)
   04F7 DD 66 FB      [19]  839 	ld	h,-5 (ix)
   04FA DD 7E 08      [19]  840 	ld	a,8 (ix)
   04FD 77            [ 7]  841 	ld	(hl),a
                            842 ;src/main.c:145: *posY=ly;
   04FE E1            [10]  843 	pop	hl
   04FF E5            [11]  844 	push	hl
   0500 DD 7E 09      [19]  845 	ld	a,9 (ix)
   0503 77            [ 7]  846 	ld	(hl),a
   0504                     847 00106$:
   0504 DD F9         [10]  848 	ld	sp, ix
   0506 DD E1         [14]  849 	pop	ix
   0508 C9            [10]  850 	ret
                            851 ;src/main.c:152: void game(){
                            852 ;	---------------------------------
                            853 ; Function game
                            854 ; ---------------------------------
   0509                     855 _game::
   0509 DD E5         [15]  856 	push	ix
   050B DD 21 00 00   [14]  857 	ld	ix,#0
   050F DD 39         [15]  858 	add	ix,sp
   0511 21 F3 FF      [10]  859 	ld	hl,#-13
   0514 39            [11]  860 	add	hl,sp
   0515 F9            [ 6]  861 	ld	sp,hl
                            862 ;src/main.c:153: TPlayer p = { 0,100 };
   0516 21 01 00      [10]  863 	ld	hl,#0x0001
   0519 39            [11]  864 	add	hl,sp
   051A 36 00         [10]  865 	ld	(hl),#0x00
   051C 21 01 00      [10]  866 	ld	hl,#0x0001
   051F 39            [11]  867 	add	hl,sp
   0520 4D            [ 4]  868 	ld	c,l
   0521 44            [ 4]  869 	ld	b,h
   0522 21 01 00      [10]  870 	ld	hl,#0x0001
   0525 09            [11]  871 	add	hl,bc
   0526 DD 75 FE      [19]  872 	ld	-2 (ix),l
   0529 DD 74 FF      [19]  873 	ld	-1 (ix),h
   052C DD 6E FE      [19]  874 	ld	l,-2 (ix)
   052F DD 66 FF      [19]  875 	ld	h,-1 (ix)
   0532 36 64         [10]  876 	ld	(hl),#0x64
                            877 ;src/main.c:155: int i =1;
   0534 11 01 00      [10]  878 	ld	de,#0x0001
                            879 ;src/main.c:160: cpct_clearScreen(0);
   0537 C5            [11]  880 	push	bc
   0538 D5            [11]  881 	push	de
   0539 21 00 40      [10]  882 	ld	hl,#0x4000
   053C E5            [11]  883 	push	hl
   053D AF            [ 4]  884 	xor	a, a
   053E F5            [11]  885 	push	af
   053F 33            [ 6]  886 	inc	sp
   0540 26 C0         [ 7]  887 	ld	h, #0xC0
   0542 E5            [11]  888 	push	hl
   0543 CDr00r00      [17]  889 	call	_cpct_memset
   0546 21 01 00      [10]  890 	ld	hl,#0x0001
   0549 E5            [11]  891 	push	hl
   054A CDr0Fr03      [17]  892 	call	_drawMap
   054D F1            [10]  893 	pop	af
   054E D1            [10]  894 	pop	de
   054F C1            [10]  895 	pop	bc
                            896 ;src/main.c:162: while (1){
   0550 DD 7E FE      [19]  897 	ld	a,-2 (ix)
   0553 DD 77 FC      [19]  898 	ld	-4 (ix),a
   0556 DD 7E FF      [19]  899 	ld	a,-1 (ix)
   0559 DD 77 FD      [19]  900 	ld	-3 (ix),a
   055C DD 71 FA      [19]  901 	ld	-6 (ix),c
   055F DD 70 FB      [19]  902 	ld	-5 (ix),b
   0562                     903 00118$:
                            904 ;src/main.c:165: cpct_waitVSYNC();
   0562 C5            [11]  905 	push	bc
   0563 D5            [11]  906 	push	de
   0564 CDr00r00      [17]  907 	call	_cpct_waitVSYNC
   0567 D1            [10]  908 	pop	de
   0568 C1            [10]  909 	pop	bc
                            910 ;src/main.c:168: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   0569 DD 6E FE      [19]  911 	ld	l,-2 (ix)
   056C DD 66 FF      [19]  912 	ld	h,-1 (ix)
   056F 7E            [ 7]  913 	ld	a,(hl)
   0570 F5            [11]  914 	push	af
   0571 0A            [ 7]  915 	ld	a,(bc)
   0572 DD 77 F9      [19]  916 	ld	-7 (ix),a
   0575 F1            [10]  917 	pop	af
   0576 C5            [11]  918 	push	bc
   0577 D5            [11]  919 	push	de
   0578 F5            [11]  920 	push	af
   0579 33            [ 6]  921 	inc	sp
   057A DD 7E F9      [19]  922 	ld	a,-7 (ix)
   057D F5            [11]  923 	push	af
   057E 33            [ 6]  924 	inc	sp
   057F 21 00 C0      [10]  925 	ld	hl,#0xC000
   0582 E5            [11]  926 	push	hl
   0583 CDr00r00      [17]  927 	call	_cpct_getScreenPtr
   0586 D1            [10]  928 	pop	de
   0587 C1            [10]  929 	pop	bc
   0588 E5            [11]  930 	push	hl
   0589 FD E1         [14]  931 	pop	iy
                            932 ;src/main.c:169: cpct_drawSolidBox(memptr,0,4,16);
   058B C5            [11]  933 	push	bc
   058C D5            [11]  934 	push	de
   058D 21 04 10      [10]  935 	ld	hl,#0x1004
   0590 E5            [11]  936 	push	hl
   0591 AF            [ 4]  937 	xor	a, a
   0592 F5            [11]  938 	push	af
   0593 33            [ 6]  939 	inc	sp
   0594 FD E5         [15]  940 	push	iy
   0596 CDr00r00      [17]  941 	call	_cpct_drawSolidBox
   0599 F1            [10]  942 	pop	af
   059A F1            [10]  943 	pop	af
   059B 33            [ 6]  944 	inc	sp
   059C D1            [10]  945 	pop	de
   059D C1            [10]  946 	pop	bc
                            947 ;src/main.c:174: lx = p.x;
   059E 0A            [ 7]  948 	ld	a,(bc)
   059F DD 77 F6      [19]  949 	ld	-10 (ix),a
                            950 ;src/main.c:175: ly = p.y;
   05A2 DD 6E FE      [19]  951 	ld	l,-2 (ix)
   05A5 DD 66 FF      [19]  952 	ld	h,-1 (ix)
   05A8 7E            [ 7]  953 	ld	a,(hl)
   05A9 DD 77 F3      [19]  954 	ld	-13 (ix),a
                            955 ;src/main.c:178: cpct_scanKeyboard_f();
   05AC C5            [11]  956 	push	bc
   05AD D5            [11]  957 	push	de
   05AE CDr00r00      [17]  958 	call	_cpct_scanKeyboard_f
   05B1 21 00 02      [10]  959 	ld	hl,#0x0200
   05B4 CDr00r00      [17]  960 	call	_cpct_isKeyPressed
   05B7 7D            [ 4]  961 	ld	a,l
   05B8 D1            [10]  962 	pop	de
   05B9 C1            [10]  963 	pop	bc
   05BA B7            [ 4]  964 	or	a, a
   05BB 28 1B         [12]  965 	jr	Z,00114$
   05BD 0A            [ 7]  966 	ld	a,(bc)
   05BE 67            [ 4]  967 	ld	h,a
   05BF D6 4C         [ 7]  968 	sub	a, #0x4C
   05C1 30 15         [12]  969 	jr	NC,00114$
                            970 ;src/main.c:180: p.x += 1;
   05C3 7C            [ 4]  971 	ld	a,h
   05C4 3C            [ 4]  972 	inc	a
   05C5 02            [ 7]  973 	ld	(bc),a
                            974 ;src/main.c:181: sprite = gladis_quieto_dcha;
   05C6 FD 21r00r00   [14]  975 	ld	iy,#_sprite
   05CA FD 36 00r00   [19]  976 	ld	0 (iy),#<(_gladis_quieto_dcha)
   05CE FD 21r00r00   [14]  977 	ld	iy,#_sprite
   05D2 FD 36 01s00   [19]  978 	ld	1 (iy),#>(_gladis_quieto_dcha)
   05D6 18 6A         [12]  979 	jr	00115$
   05D8                     980 00114$:
                            981 ;src/main.c:182: }else if(cpct_isKeyPressed(Key_CursorLeft) && p.x > 0 ){
   05D8 C5            [11]  982 	push	bc
   05D9 D5            [11]  983 	push	de
   05DA 21 01 01      [10]  984 	ld	hl,#0x0101
   05DD CDr00r00      [17]  985 	call	_cpct_isKeyPressed
   05E0 7D            [ 4]  986 	ld	a,l
   05E1 D1            [10]  987 	pop	de
   05E2 C1            [10]  988 	pop	bc
   05E3 B7            [ 4]  989 	or	a, a
   05E4 28 19         [12]  990 	jr	Z,00110$
   05E6 0A            [ 7]  991 	ld	a,(bc)
   05E7 B7            [ 4]  992 	or	a, a
   05E8 28 15         [12]  993 	jr	Z,00110$
                            994 ;src/main.c:183: p.x -= 1;
   05EA C6 FF         [ 7]  995 	add	a,#0xFF
   05EC 02            [ 7]  996 	ld	(bc),a
                            997 ;src/main.c:184: sprite = gladis_quieto_izda;
   05ED FD 21r00r00   [14]  998 	ld	iy,#_sprite
   05F1 FD 36 00r00   [19]  999 	ld	0 (iy),#<(_gladis_quieto_izda)
   05F5 FD 21r00r00   [14] 1000 	ld	iy,#_sprite
   05F9 FD 36 01s00   [19] 1001 	ld	1 (iy),#>(_gladis_quieto_izda)
   05FD 18 43         [12] 1002 	jr	00115$
   05FF                    1003 00110$:
                           1004 ;src/main.c:185: }else  if(cpct_isKeyPressed(Key_Esc)){
   05FF C5            [11] 1005 	push	bc
   0600 D5            [11] 1006 	push	de
   0601 21 08 04      [10] 1007 	ld	hl,#0x0408
   0604 CDr00r00      [17] 1008 	call	_cpct_isKeyPressed
   0607 7D            [ 4] 1009 	ld	a,l
   0608 D1            [10] 1010 	pop	de
   0609 C1            [10] 1011 	pop	bc
   060A B7            [ 4] 1012 	or	a, a
                           1013 ;src/main.c:186: return;
   060B C2rB5r06      [10] 1014 	jp	NZ,00120$
                           1015 ;src/main.c:187: }else if(cpct_isKeyPressed(Key_Space)){
   060E C5            [11] 1016 	push	bc
   060F D5            [11] 1017 	push	de
   0610 21 05 80      [10] 1018 	ld	hl,#0x8005
   0613 CDr00r00      [17] 1019 	call	_cpct_isKeyPressed
   0616 7D            [ 4] 1020 	ld	a,l
   0617 D1            [10] 1021 	pop	de
   0618 C1            [10] 1022 	pop	bc
   0619 B7            [ 4] 1023 	or	a, a
   061A 28 26         [12] 1024 	jr	Z,00115$
                           1025 ;src/main.c:188: cpct_clearScreen(0);
   061C C5            [11] 1026 	push	bc
   061D D5            [11] 1027 	push	de
   061E 21 00 40      [10] 1028 	ld	hl,#0x4000
   0621 E5            [11] 1029 	push	hl
   0622 AF            [ 4] 1030 	xor	a, a
   0623 F5            [11] 1031 	push	af
   0624 33            [ 6] 1032 	inc	sp
   0625 26 C0         [ 7] 1033 	ld	h, #0xC0
   0627 E5            [11] 1034 	push	hl
   0628 CDr00r00      [17] 1035 	call	_cpct_memset
   062B D1            [10] 1036 	pop	de
   062C C1            [10] 1037 	pop	bc
                           1038 ;src/main.c:189: if(i ==1 ) {i++;}
   062D 7B            [ 4] 1039 	ld	a,e
   062E 3D            [ 4] 1040 	dec	a
   062F 20 07         [12] 1041 	jr	NZ,00102$
   0631 7A            [ 4] 1042 	ld	a,d
   0632 B7            [ 4] 1043 	or	a, a
   0633 20 03         [12] 1044 	jr	NZ,00102$
   0635 13            [ 6] 1045 	inc	de
   0636 18 01         [12] 1046 	jr	00103$
   0638                    1047 00102$:
                           1048 ;src/main.c:190: else {i--;}
   0638 1B            [ 6] 1049 	dec	de
   0639                    1050 00103$:
                           1051 ;src/main.c:191: drawMap(i);
   0639 C5            [11] 1052 	push	bc
   063A D5            [11] 1053 	push	de
   063B D5            [11] 1054 	push	de
   063C CDr0Fr03      [17] 1055 	call	_drawMap
   063F F1            [10] 1056 	pop	af
   0640 D1            [10] 1057 	pop	de
   0641 C1            [10] 1058 	pop	bc
   0642                    1059 00115$:
                           1060 ;src/main.c:195: checkColisions(&p.x,&p.y,lx,ly);
   0642 E5            [11] 1061 	push	hl
   0643 DD 6E FC      [19] 1062 	ld	l,-4 (ix)
   0646 DD 66 FD      [19] 1063 	ld	h,-3 (ix)
   0649 E5            [11] 1064 	push	hl
   064A FD E1         [14] 1065 	pop	iy
   064C E1            [10] 1066 	pop	hl
   064D DD 7E FA      [19] 1067 	ld	a,-6 (ix)
   0650 DD 77 F7      [19] 1068 	ld	-9 (ix),a
   0653 DD 7E FB      [19] 1069 	ld	a,-5 (ix)
   0656 DD 77 F8      [19] 1070 	ld	-8 (ix),a
   0659 C5            [11] 1071 	push	bc
   065A D5            [11] 1072 	push	de
   065B DD 66 F3      [19] 1073 	ld	h,-13 (ix)
   065E DD 6E F6      [19] 1074 	ld	l,-10 (ix)
   0661 E5            [11] 1075 	push	hl
   0662 FD E5         [15] 1076 	push	iy
   0664 DD 6E F7      [19] 1077 	ld	l,-9 (ix)
   0667 DD 66 F8      [19] 1078 	ld	h,-8 (ix)
   066A E5            [11] 1079 	push	hl
   066B CDr20r04      [17] 1080 	call	_checkColisions
   066E 21 06 00      [10] 1081 	ld	hl,#6
   0671 39            [11] 1082 	add	hl,sp
   0672 F9            [ 6] 1083 	ld	sp,hl
   0673 D1            [10] 1084 	pop	de
   0674 C1            [10] 1085 	pop	bc
                           1086 ;src/main.c:198: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   0675 DD 6E FE      [19] 1087 	ld	l,-2 (ix)
   0678 DD 66 FF      [19] 1088 	ld	h,-1 (ix)
   067B 7E            [ 7] 1089 	ld	a,(hl)
   067C F5            [11] 1090 	push	af
   067D 0A            [ 7] 1091 	ld	a,(bc)
   067E DD 77 F7      [19] 1092 	ld	-9 (ix),a
   0681 F1            [10] 1093 	pop	af
   0682 C5            [11] 1094 	push	bc
   0683 D5            [11] 1095 	push	de
   0684 F5            [11] 1096 	push	af
   0685 33            [ 6] 1097 	inc	sp
   0686 DD 7E F7      [19] 1098 	ld	a,-9 (ix)
   0689 F5            [11] 1099 	push	af
   068A 33            [ 6] 1100 	inc	sp
   068B 21 00 C0      [10] 1101 	ld	hl,#0xC000
   068E E5            [11] 1102 	push	hl
   068F CDr00r00      [17] 1103 	call	_cpct_getScreenPtr
   0692 D1            [10] 1104 	pop	de
   0693 C1            [10] 1105 	pop	bc
                           1106 ;src/main.c:199: cpct_drawSpriteMasked(sprite,memptr,4,16);
   0694 DD 75 F7      [19] 1107 	ld	-9 (ix),l
   0697 DD 74 F8      [19] 1108 	ld	-8 (ix),h
   069A FD 2Ar00r00   [20] 1109 	ld	iy,(_sprite)
   069E C5            [11] 1110 	push	bc
   069F D5            [11] 1111 	push	de
   06A0 21 04 10      [10] 1112 	ld	hl,#0x1004
   06A3 E5            [11] 1113 	push	hl
   06A4 DD 6E F7      [19] 1114 	ld	l,-9 (ix)
   06A7 DD 66 F8      [19] 1115 	ld	h,-8 (ix)
   06AA E5            [11] 1116 	push	hl
   06AB FD E5         [15] 1117 	push	iy
   06AD CDr00r00      [17] 1118 	call	_cpct_drawSpriteMasked
   06B0 D1            [10] 1119 	pop	de
   06B1 C1            [10] 1120 	pop	bc
   06B2 C3r62r05      [10] 1121 	jp	00118$
   06B5                    1122 00120$:
   06B5 DD F9         [10] 1123 	ld	sp, ix
   06B7 DD E1         [14] 1124 	pop	ix
   06B9 C9            [10] 1125 	ret
                           1126 ;src/main.c:210: void loadMap(){
                           1127 ;	---------------------------------
                           1128 ; Function loadMap
                           1129 ; ---------------------------------
   06BA                    1130 _loadMap::
                           1131 ;src/main.c:212: }
   06BA C9            [10] 1132 	ret
                           1133 ;src/main.c:217: void main(void) {
                           1134 ;	---------------------------------
                           1135 ; Function main
                           1136 ; ---------------------------------
   06BB                    1137 _main::
                           1138 ;src/main.c:219: init();
   06BB CDr00r00      [17] 1139 	call	_init
                           1140 ;src/main.c:223: while(1){
   06BE                    1141 00102$:
                           1142 ;src/main.c:224: menu();
   06BE CDrA9r02      [17] 1143 	call	_menu
                           1144 ;src/main.c:226: game();
   06C1 CDr09r05      [17] 1145 	call	_game
   06C4 18 F8         [12] 1146 	jr	00102$
                           1147 	.area _CODE
                           1148 	.area _INITIALIZER
   0000                    1149 __xinit__sprite:
   0000r00r00              1150 	.dw _gladis_quieto_dcha
                           1151 	.area _CABS (ABS)
