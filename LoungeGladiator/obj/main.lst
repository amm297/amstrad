                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Sep 26 2015) (CYGWIN)
                              4 ; This file was generated Sun Oct  4 11:56:43 2015
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _loadMap
                             14 	.globl _game
                             15 	.globl _checkKeyboard
                             16 	.globl _checkColisions
                             17 	.globl _drawMap
                             18 	.globl _menu
                             19 	.globl _init
                             20 	.globl _cpct_getScreenPtr
                             21 	.globl _cpct_setPalette
                             22 	.globl _cpct_fw2hw
                             23 	.globl _cpct_waitVSYNC
                             24 	.globl _cpct_setVideoMode
                             25 	.globl _cpct_drawStringM0
                             26 	.globl _cpct_drawSolidBox
                             27 	.globl _cpct_drawSpriteMasked
                             28 	.globl _cpct_isKeyPressed
                             29 	.globl _cpct_scanKeyboard_f
                             30 	.globl _cpct_memset
                             31 	.globl _cpct_disableFirmware
                             32 	.globl _scene
                             33 	.globl _mapa2
                             34 	.globl _mapa1
                             35 	.globl _g_palette
                             36 ;--------------------------------------------------------
                             37 ; special function registers
                             38 ;--------------------------------------------------------
                             39 ;--------------------------------------------------------
                             40 ; ram data
                             41 ;--------------------------------------------------------
                             42 	.area _DATA
   0000                      43 _scene::
   0000                      44 	.ds 20
                             45 ;--------------------------------------------------------
                             46 ; ram data
                             47 ;--------------------------------------------------------
                             48 	.area _INITIALIZED
                             49 ;--------------------------------------------------------
                             50 ; absolute external ram data
                             51 ;--------------------------------------------------------
                             52 	.area _DABS (ABS)
                             53 ;--------------------------------------------------------
                             54 ; global & static initialisations
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _GSINIT
                             58 	.area _GSFINAL
                             59 	.area _GSINIT
                             60 ;--------------------------------------------------------
                             61 ; Home
                             62 ;--------------------------------------------------------
                             63 	.area _HOME
                             64 	.area _HOME
                             65 ;--------------------------------------------------------
                             66 ; code
                             67 ;--------------------------------------------------------
                             68 	.area _CODE
                             69 ;src/main.c:26: void init(){
                             70 ;	---------------------------------
                             71 ; Function init
                             72 ; ---------------------------------
   0000                      73 _init::
                             74 ;src/main.c:27: cpct_disableFirmware();
   0000 CDr00r00      [17]   75 	call	_cpct_disableFirmware
                             76 ;src/main.c:28: cpct_setVideoMode(0);
   0003 AF            [ 4]   77 	xor	a, a
   0004 F5            [11]   78 	push	af
   0005 33            [ 6]   79 	inc	sp
   0006 CDr00r00      [17]   80 	call	_cpct_setVideoMode
   0009 33            [ 6]   81 	inc	sp
                             82 ;src/main.c:29: cpct_fw2hw(g_palette,4);
   000A 11r25r00      [10]   83 	ld	de,#_g_palette
   000D 3E 04         [ 7]   84 	ld	a,#0x04
   000F F5            [11]   85 	push	af
   0010 33            [ 6]   86 	inc	sp
   0011 D5            [11]   87 	push	de
   0012 CDr00r00      [17]   88 	call	_cpct_fw2hw
   0015 F1            [10]   89 	pop	af
   0016 33            [ 6]   90 	inc	sp
                             91 ;src/main.c:30: cpct_setPalette(g_palette,4);
   0017 11r25r00      [10]   92 	ld	de,#_g_palette
   001A 3E 04         [ 7]   93 	ld	a,#0x04
   001C F5            [11]   94 	push	af
   001D 33            [ 6]   95 	inc	sp
   001E D5            [11]   96 	push	de
   001F CDr00r00      [17]   97 	call	_cpct_setPalette
   0022 F1            [10]   98 	pop	af
   0023 33            [ 6]   99 	inc	sp
   0024 C9            [10]  100 	ret
   0025                     101 _g_palette:
   0025 00                  102 	.db #0x00	; 0
   0026 1A                  103 	.db #0x1A	; 26
   0027 06                  104 	.db #0x06	; 6
   0028 12                  105 	.db #0x12	; 18
   0029                     106 _mapa1:
   0029 01 00               107 	.dw #0x0001
   002B 01 00               108 	.dw #0x0001
   002D 01 00               109 	.dw #0x0001
   002F 01 00               110 	.dw #0x0001
   0031 01 00               111 	.dw #0x0001
   0033 01 00               112 	.dw #0x0001
   0035 01 00               113 	.dw #0x0001
   0037 01 00               114 	.dw #0x0001
   0039 01 00               115 	.dw #0x0001
   003B 01 00               116 	.dw #0x0001
   003D 01 00               117 	.dw #0x0001
   003F 01 00               118 	.dw #0x0001
   0041 01 00               119 	.dw #0x0001
   0043 01 00               120 	.dw #0x0001
   0045 01 00               121 	.dw #0x0001
   0047 01 00               122 	.dw #0x0001
   0049 01 00               123 	.dw #0x0001
   004B 00 00               124 	.dw #0x0000
   004D 00 00               125 	.dw #0x0000
   004F 00 00               126 	.dw #0x0000
   0051 00 00               127 	.dw #0x0000
   0053 00 00               128 	.dw #0x0000
   0055 00 00               129 	.dw #0x0000
   0057 00 00               130 	.dw #0x0000
   0059 00 00               131 	.dw #0x0000
   005B 00 00               132 	.dw #0x0000
   005D 00 00               133 	.dw #0x0000
   005F 00 00               134 	.dw #0x0000
   0061 00 00               135 	.dw #0x0000
   0063 00 00               136 	.dw #0x0000
   0065 00 00               137 	.dw #0x0000
   0067 01 00               138 	.dw #0x0001
   0069 01 00               139 	.dw #0x0001
   006B 00 00               140 	.dw #0x0000
   006D 00 00               141 	.dw #0x0000
   006F 00 00               142 	.dw #0x0000
   0071 00 00               143 	.dw #0x0000
   0073 00 00               144 	.dw #0x0000
   0075 00 00               145 	.dw #0x0000
   0077 00 00               146 	.dw #0x0000
   0079 00 00               147 	.dw #0x0000
   007B 00 00               148 	.dw #0x0000
   007D 00 00               149 	.dw #0x0000
   007F 00 00               150 	.dw #0x0000
   0081 00 00               151 	.dw #0x0000
   0083 00 00               152 	.dw #0x0000
   0085 00 00               153 	.dw #0x0000
   0087 01 00               154 	.dw #0x0001
   0089 01 00               155 	.dw #0x0001
   008B 00 00               156 	.dw #0x0000
   008D 00 00               157 	.dw #0x0000
   008F 00 00               158 	.dw #0x0000
   0091 00 00               159 	.dw #0x0000
   0093 00 00               160 	.dw #0x0000
   0095 00 00               161 	.dw #0x0000
   0097 00 00               162 	.dw #0x0000
   0099 00 00               163 	.dw #0x0000
   009B 00 00               164 	.dw #0x0000
   009D 00 00               165 	.dw #0x0000
   009F 00 00               166 	.dw #0x0000
   00A1 00 00               167 	.dw #0x0000
   00A3 00 00               168 	.dw #0x0000
   00A5 00 00               169 	.dw #0x0000
   00A7 01 00               170 	.dw #0x0001
   00A9 01 00               171 	.dw #0x0001
   00AB 00 00               172 	.dw #0x0000
   00AD 00 00               173 	.dw #0x0000
   00AF 00 00               174 	.dw #0x0000
   00B1 00 00               175 	.dw #0x0000
   00B3 00 00               176 	.dw #0x0000
   00B5 00 00               177 	.dw #0x0000
   00B7 00 00               178 	.dw #0x0000
   00B9 00 00               179 	.dw #0x0000
   00BB 00 00               180 	.dw #0x0000
   00BD 00 00               181 	.dw #0x0000
   00BF 00 00               182 	.dw #0x0000
   00C1 00 00               183 	.dw #0x0000
   00C3 00 00               184 	.dw #0x0000
   00C5 00 00               185 	.dw #0x0000
   00C7 01 00               186 	.dw #0x0001
   00C9 00 00               187 	.dw #0x0000
   00CB 00 00               188 	.dw #0x0000
   00CD 00 00               189 	.dw #0x0000
   00CF 00 00               190 	.dw #0x0000
   00D1 00 00               191 	.dw #0x0000
   00D3 00 00               192 	.dw #0x0000
   00D5 00 00               193 	.dw #0x0000
   00D7 00 00               194 	.dw #0x0000
   00D9 00 00               195 	.dw #0x0000
   00DB 00 00               196 	.dw #0x0000
   00DD 00 00               197 	.dw #0x0000
   00DF 00 00               198 	.dw #0x0000
   00E1 00 00               199 	.dw #0x0000
   00E3 00 00               200 	.dw #0x0000
   00E5 00 00               201 	.dw #0x0000
   00E7 01 00               202 	.dw #0x0001
   00E9 01 00               203 	.dw #0x0001
   00EB 00 00               204 	.dw #0x0000
   00ED 00 00               205 	.dw #0x0000
   00EF 00 00               206 	.dw #0x0000
   00F1 00 00               207 	.dw #0x0000
   00F3 00 00               208 	.dw #0x0000
   00F5 00 00               209 	.dw #0x0000
   00F7 00 00               210 	.dw #0x0000
   00F9 00 00               211 	.dw #0x0000
   00FB 00 00               212 	.dw #0x0000
   00FD 00 00               213 	.dw #0x0000
   00FF 00 00               214 	.dw #0x0000
   0101 00 00               215 	.dw #0x0000
   0103 00 00               216 	.dw #0x0000
   0105 00 00               217 	.dw #0x0000
   0107 01 00               218 	.dw #0x0001
   0109 01 00               219 	.dw #0x0001
   010B 00 00               220 	.dw #0x0000
   010D 00 00               221 	.dw #0x0000
   010F 00 00               222 	.dw #0x0000
   0111 00 00               223 	.dw #0x0000
   0113 00 00               224 	.dw #0x0000
   0115 00 00               225 	.dw #0x0000
   0117 00 00               226 	.dw #0x0000
   0119 00 00               227 	.dw #0x0000
   011B 00 00               228 	.dw #0x0000
   011D 00 00               229 	.dw #0x0000
   011F 00 00               230 	.dw #0x0000
   0121 00 00               231 	.dw #0x0000
   0123 00 00               232 	.dw #0x0000
   0125 00 00               233 	.dw #0x0000
   0127 01 00               234 	.dw #0x0001
   0129 01 00               235 	.dw #0x0001
   012B 00 00               236 	.dw #0x0000
   012D 00 00               237 	.dw #0x0000
   012F 00 00               238 	.dw #0x0000
   0131 00 00               239 	.dw #0x0000
   0133 00 00               240 	.dw #0x0000
   0135 00 00               241 	.dw #0x0000
   0137 00 00               242 	.dw #0x0000
   0139 00 00               243 	.dw #0x0000
   013B 00 00               244 	.dw #0x0000
   013D 00 00               245 	.dw #0x0000
   013F 00 00               246 	.dw #0x0000
   0141 00 00               247 	.dw #0x0000
   0143 00 00               248 	.dw #0x0000
   0145 00 00               249 	.dw #0x0000
   0147 01 00               250 	.dw #0x0001
   0149 01 00               251 	.dw #0x0001
   014B 01 00               252 	.dw #0x0001
   014D 01 00               253 	.dw #0x0001
   014F 01 00               254 	.dw #0x0001
   0151 01 00               255 	.dw #0x0001
   0153 01 00               256 	.dw #0x0001
   0155 01 00               257 	.dw #0x0001
   0157 01 00               258 	.dw #0x0001
   0159 01 00               259 	.dw #0x0001
   015B 01 00               260 	.dw #0x0001
   015D 01 00               261 	.dw #0x0001
   015F 01 00               262 	.dw #0x0001
   0161 01 00               263 	.dw #0x0001
   0163 01 00               264 	.dw #0x0001
   0165 01 00               265 	.dw #0x0001
   0167 01 00               266 	.dw #0x0001
   0169                     267 _mapa2:
   0169 01 00               268 	.dw #0x0001
   016B 01 00               269 	.dw #0x0001
   016D 01 00               270 	.dw #0x0001
   016F 01 00               271 	.dw #0x0001
   0171 01 00               272 	.dw #0x0001
   0173 01 00               273 	.dw #0x0001
   0175 01 00               274 	.dw #0x0001
   0177 01 00               275 	.dw #0x0001
   0179 01 00               276 	.dw #0x0001
   017B 01 00               277 	.dw #0x0001
   017D 01 00               278 	.dw #0x0001
   017F 01 00               279 	.dw #0x0001
   0181 01 00               280 	.dw #0x0001
   0183 01 00               281 	.dw #0x0001
   0185 01 00               282 	.dw #0x0001
   0187 01 00               283 	.dw #0x0001
   0189 01 00               284 	.dw #0x0001
   018B 01 00               285 	.dw #0x0001
   018D 01 00               286 	.dw #0x0001
   018F 00 00               287 	.dw #0x0000
   0191 00 00               288 	.dw #0x0000
   0193 00 00               289 	.dw #0x0000
   0195 00 00               290 	.dw #0x0000
   0197 00 00               291 	.dw #0x0000
   0199 00 00               292 	.dw #0x0000
   019B 00 00               293 	.dw #0x0000
   019D 00 00               294 	.dw #0x0000
   019F 00 00               295 	.dw #0x0000
   01A1 00 00               296 	.dw #0x0000
   01A3 01 00               297 	.dw #0x0001
   01A5 01 00               298 	.dw #0x0001
   01A7 01 00               299 	.dw #0x0001
   01A9 01 00               300 	.dw #0x0001
   01AB 01 00               301 	.dw #0x0001
   01AD 01 00               302 	.dw #0x0001
   01AF 00 00               303 	.dw #0x0000
   01B1 00 00               304 	.dw #0x0000
   01B3 00 00               305 	.dw #0x0000
   01B5 00 00               306 	.dw #0x0000
   01B7 00 00               307 	.dw #0x0000
   01B9 00 00               308 	.dw #0x0000
   01BB 00 00               309 	.dw #0x0000
   01BD 00 00               310 	.dw #0x0000
   01BF 00 00               311 	.dw #0x0000
   01C1 00 00               312 	.dw #0x0000
   01C3 01 00               313 	.dw #0x0001
   01C5 01 00               314 	.dw #0x0001
   01C7 01 00               315 	.dw #0x0001
   01C9 01 00               316 	.dw #0x0001
   01CB 00 00               317 	.dw #0x0000
   01CD 01 00               318 	.dw #0x0001
   01CF 00 00               319 	.dw #0x0000
   01D1 00 00               320 	.dw #0x0000
   01D3 00 00               321 	.dw #0x0000
   01D5 00 00               322 	.dw #0x0000
   01D7 01 00               323 	.dw #0x0001
   01D9 01 00               324 	.dw #0x0001
   01DB 01 00               325 	.dw #0x0001
   01DD 00 00               326 	.dw #0x0000
   01DF 00 00               327 	.dw #0x0000
   01E1 00 00               328 	.dw #0x0000
   01E3 01 00               329 	.dw #0x0001
   01E5 00 00               330 	.dw #0x0000
   01E7 01 00               331 	.dw #0x0001
   01E9 01 00               332 	.dw #0x0001
   01EB 00 00               333 	.dw #0x0000
   01ED 01 00               334 	.dw #0x0001
   01EF 00 00               335 	.dw #0x0000
   01F1 00 00               336 	.dw #0x0000
   01F3 00 00               337 	.dw #0x0000
   01F5 00 00               338 	.dw #0x0000
   01F7 01 00               339 	.dw #0x0001
   01F9 01 00               340 	.dw #0x0001
   01FB 01 00               341 	.dw #0x0001
   01FD 00 00               342 	.dw #0x0000
   01FF 00 00               343 	.dw #0x0000
   0201 00 00               344 	.dw #0x0000
   0203 01 00               345 	.dw #0x0001
   0205 00 00               346 	.dw #0x0000
   0207 01 00               347 	.dw #0x0001
   0209 00 00               348 	.dw #0x0000
   020B 00 00               349 	.dw #0x0000
   020D 01 00               350 	.dw #0x0001
   020F 00 00               351 	.dw #0x0000
   0211 00 00               352 	.dw #0x0000
   0213 00 00               353 	.dw #0x0000
   0215 00 00               354 	.dw #0x0000
   0217 01 00               355 	.dw #0x0001
   0219 00 00               356 	.dw #0x0000
   021B 01 00               357 	.dw #0x0001
   021D 00 00               358 	.dw #0x0000
   021F 00 00               359 	.dw #0x0000
   0221 00 00               360 	.dw #0x0000
   0223 01 00               361 	.dw #0x0001
   0225 00 00               362 	.dw #0x0000
   0227 01 00               363 	.dw #0x0001
   0229 01 00               364 	.dw #0x0001
   022B 00 00               365 	.dw #0x0000
   022D 01 00               366 	.dw #0x0001
   022F 01 00               367 	.dw #0x0001
   0231 01 00               368 	.dw #0x0001
   0233 01 00               369 	.dw #0x0001
   0235 01 00               370 	.dw #0x0001
   0237 00 00               371 	.dw #0x0000
   0239 00 00               372 	.dw #0x0000
   023B 00 00               373 	.dw #0x0000
   023D 01 00               374 	.dw #0x0001
   023F 01 00               375 	.dw #0x0001
   0241 01 00               376 	.dw #0x0001
   0243 01 00               377 	.dw #0x0001
   0245 00 00               378 	.dw #0x0000
   0247 01 00               379 	.dw #0x0001
   0249 01 00               380 	.dw #0x0001
   024B 00 00               381 	.dw #0x0000
   024D 01 00               382 	.dw #0x0001
   024F 01 00               383 	.dw #0x0001
   0251 01 00               384 	.dw #0x0001
   0253 01 00               385 	.dw #0x0001
   0255 01 00               386 	.dw #0x0001
   0257 00 00               387 	.dw #0x0000
   0259 00 00               388 	.dw #0x0000
   025B 00 00               389 	.dw #0x0000
   025D 01 00               390 	.dw #0x0001
   025F 01 00               391 	.dw #0x0001
   0261 01 00               392 	.dw #0x0001
   0263 01 00               393 	.dw #0x0001
   0265 00 00               394 	.dw #0x0000
   0267 01 00               395 	.dw #0x0001
   0269 01 00               396 	.dw #0x0001
   026B 00 00               397 	.dw #0x0000
   026D 00 00               398 	.dw #0x0000
   026F 00 00               399 	.dw #0x0000
   0271 00 00               400 	.dw #0x0000
   0273 00 00               401 	.dw #0x0000
   0275 00 00               402 	.dw #0x0000
   0277 00 00               403 	.dw #0x0000
   0279 00 00               404 	.dw #0x0000
   027B 00 00               405 	.dw #0x0000
   027D 00 00               406 	.dw #0x0000
   027F 00 00               407 	.dw #0x0000
   0281 00 00               408 	.dw #0x0000
   0283 00 00               409 	.dw #0x0000
   0285 00 00               410 	.dw #0x0000
   0287 01 00               411 	.dw #0x0001
   0289 01 00               412 	.dw #0x0001
   028B 01 00               413 	.dw #0x0001
   028D 01 00               414 	.dw #0x0001
   028F 01 00               415 	.dw #0x0001
   0291 01 00               416 	.dw #0x0001
   0293 01 00               417 	.dw #0x0001
   0295 01 00               418 	.dw #0x0001
   0297 01 00               419 	.dw #0x0001
   0299 01 00               420 	.dw #0x0001
   029B 01 00               421 	.dw #0x0001
   029D 01 00               422 	.dw #0x0001
   029F 01 00               423 	.dw #0x0001
   02A1 01 00               424 	.dw #0x0001
   02A3 01 00               425 	.dw #0x0001
   02A5 01 00               426 	.dw #0x0001
   02A7 01 00               427 	.dw #0x0001
                            428 ;src/main.c:34: void menu(){
                            429 ;	---------------------------------
                            430 ; Function menu
                            431 ; ---------------------------------
   02A9                     432 _menu::
                            433 ;src/main.c:36: cpct_clearScreen(0);
   02A9 21 00 40      [10]  434 	ld	hl,#0x4000
   02AC E5            [11]  435 	push	hl
   02AD AF            [ 4]  436 	xor	a, a
   02AE F5            [11]  437 	push	af
   02AF 33            [ 6]  438 	inc	sp
   02B0 26 C0         [ 7]  439 	ld	h, #0xC0
   02B2 E5            [11]  440 	push	hl
   02B3 CDr00r00      [17]  441 	call	_cpct_memset
                            442 ;src/main.c:38: memptr = cpct_getScreenPtr(VMEM,20,10);
   02B6 21 14 0A      [10]  443 	ld	hl,#0x0A14
   02B9 E5            [11]  444 	push	hl
   02BA 21 00 C0      [10]  445 	ld	hl,#0xC000
   02BD E5            [11]  446 	push	hl
   02BE CDr00r00      [17]  447 	call	_cpct_getScreenPtr
                            448 ;src/main.c:39: cpct_drawStringM0("MENU",memptr,2,3);
   02C1 EB            [ 4]  449 	ex	de,hl
   02C2 01rFEr02      [10]  450 	ld	bc,#___str_0+0
   02C5 21 02 03      [10]  451 	ld	hl,#0x0302
   02C8 E5            [11]  452 	push	hl
   02C9 D5            [11]  453 	push	de
   02CA C5            [11]  454 	push	bc
   02CB CDr00r00      [17]  455 	call	_cpct_drawStringM0
   02CE 21 06 00      [10]  456 	ld	hl,#6
   02D1 39            [11]  457 	add	hl,sp
   02D2 F9            [ 6]  458 	ld	sp,hl
                            459 ;src/main.c:41: memptr = cpct_getScreenPtr(VMEM,18,180);
   02D3 21 12 B4      [10]  460 	ld	hl,#0xB412
   02D6 E5            [11]  461 	push	hl
   02D7 21 00 C0      [10]  462 	ld	hl,#0xC000
   02DA E5            [11]  463 	push	hl
   02DB CDr00r00      [17]  464 	call	_cpct_getScreenPtr
                            465 ;src/main.c:42: cpct_drawStringM0("Pulsa Intro",memptr,4,5);
   02DE EB            [ 4]  466 	ex	de,hl
   02DF 01r03r03      [10]  467 	ld	bc,#___str_1+0
   02E2 21 04 05      [10]  468 	ld	hl,#0x0504
   02E5 E5            [11]  469 	push	hl
   02E6 D5            [11]  470 	push	de
   02E7 C5            [11]  471 	push	bc
   02E8 CDr00r00      [17]  472 	call	_cpct_drawStringM0
   02EB 21 06 00      [10]  473 	ld	hl,#6
   02EE 39            [11]  474 	add	hl,sp
   02EF F9            [ 6]  475 	ld	sp,hl
                            476 ;src/main.c:44: do{
   02F0                     477 00101$:
                            478 ;src/main.c:45: cpct_scanKeyboard_f();
   02F0 CDr00r00      [17]  479 	call	_cpct_scanKeyboard_f
                            480 ;src/main.c:46: }while(!cpct_isKeyPressed(Key_Enter));
   02F3 21 00 40      [10]  481 	ld	hl,#0x4000
   02F6 CDr00r00      [17]  482 	call	_cpct_isKeyPressed
   02F9 7D            [ 4]  483 	ld	a,l
   02FA B7            [ 4]  484 	or	a, a
   02FB 28 F3         [12]  485 	jr	Z,00101$
   02FD C9            [10]  486 	ret
   02FE                     487 ___str_0:
   02FE 4D 45 4E 55         488 	.ascii "MENU"
   0302 00                  489 	.db 0x00
   0303                     490 ___str_1:
   0303 50 75 6C 73 61 20   491 	.ascii "Pulsa Intro"
        49 6E 74 72 6F
   030E 00                  492 	.db 0x00
                            493 ;src/main.c:52: void drawMap(int t){
                            494 ;	---------------------------------
                            495 ; Function drawMap
                            496 ; ---------------------------------
   030F                     497 _drawMap::
   030F DD E5         [15]  498 	push	ix
   0311 DD 21 00 00   [14]  499 	ld	ix,#0
   0315 DD 39         [15]  500 	add	ix,sp
   0317 21 FA FF      [10]  501 	ld	hl,#-6
   031A 39            [11]  502 	add	hl,sp
   031B F9            [ 6]  503 	ld	sp,hl
                            504 ;src/main.c:56: if(t == 1){ 
   031C DD 7E 04      [19]  505 	ld	a,4 (ix)
   031F 3D            [ 4]  506 	dec	a
   0320 20 3A         [12]  507 	jr	NZ,00103$
   0322 DD 7E 05      [19]  508 	ld	a,5 (ix)
   0325 B7            [ 4]  509 	or	a, a
   0326 20 34         [12]  510 	jr	NZ,00103$
                            511 ;src/main.c:57: for(x=0;x<height;x++){
   0328 11 00 00      [10]  512 	ld	de,#0x0000
   032B                     513 00111$:
                            514 ;src/main.c:58: scene[x] = mapa1[x];
   032B 6B            [ 4]  515 	ld	l, e
   032C 62            [ 4]  516 	ld	h, d
   032D 29            [11]  517 	add	hl, hl
   032E 3Er00         [ 7]  518 	ld	a,#<(_scene)
   0330 85            [ 4]  519 	add	a, l
   0331 DD 77 FE      [19]  520 	ld	-2 (ix),a
   0334 3Es00         [ 7]  521 	ld	a,#>(_scene)
   0336 8C            [ 4]  522 	adc	a, h
   0337 DD 77 FF      [19]  523 	ld	-1 (ix),a
   033A 6B            [ 4]  524 	ld	l, e
   033B 62            [ 4]  525 	ld	h, d
   033C 29            [11]  526 	add	hl, hl
   033D 29            [11]  527 	add	hl, hl
   033E 29            [11]  528 	add	hl, hl
   033F 29            [11]  529 	add	hl, hl
   0340 29            [11]  530 	add	hl, hl
   0341 01r29r00      [10]  531 	ld	bc,#_mapa1
   0344 09            [11]  532 	add	hl,bc
   0345 45            [ 4]  533 	ld	b,l
   0346 4C            [ 4]  534 	ld	c,h
   0347 DD 6E FE      [19]  535 	ld	l,-2 (ix)
   034A DD 66 FF      [19]  536 	ld	h,-1 (ix)
   034D 70            [ 7]  537 	ld	(hl),b
   034E 23            [ 6]  538 	inc	hl
   034F 71            [ 7]  539 	ld	(hl),c
                            540 ;src/main.c:57: for(x=0;x<height;x++){
   0350 13            [ 6]  541 	inc	de
   0351 7B            [ 4]  542 	ld	a,e
   0352 D6 0A         [ 7]  543 	sub	a, #0x0A
   0354 7A            [ 4]  544 	ld	a,d
   0355 17            [ 4]  545 	rla
   0356 3F            [ 4]  546 	ccf
   0357 1F            [ 4]  547 	rra
   0358 DE 80         [ 7]  548 	sbc	a, #0x80
   035A 38 CF         [12]  549 	jr	C,00111$
   035C                     550 00103$:
                            551 ;src/main.c:62: if(t == 2){ 
   035C DD 7E 04      [19]  552 	ld	a,4 (ix)
   035F D6 02         [ 7]  553 	sub	a, #0x02
   0361 20 30         [12]  554 	jr	NZ,00128$
   0363 DD 7E 05      [19]  555 	ld	a,5 (ix)
   0366 B7            [ 4]  556 	or	a, a
   0367 20 2A         [12]  557 	jr	NZ,00128$
                            558 ;src/main.c:63: for(x=0;x<height;x++){
   0369 01 00 00      [10]  559 	ld	bc,#0x0000
   036C                     560 00113$:
                            561 ;src/main.c:64: scene[x] = mapa2[x];
   036C 69            [ 4]  562 	ld	l, c
   036D 60            [ 4]  563 	ld	h, b
   036E 29            [11]  564 	add	hl, hl
   036F FD 21r00r00   [14]  565 	ld	iy,#_scene
   0373 EB            [ 4]  566 	ex	de,hl
   0374 FD 19         [15]  567 	add	iy, de
   0376 69            [ 4]  568 	ld	l, c
   0377 60            [ 4]  569 	ld	h, b
   0378 29            [11]  570 	add	hl, hl
   0379 29            [11]  571 	add	hl, hl
   037A 29            [11]  572 	add	hl, hl
   037B 29            [11]  573 	add	hl, hl
   037C 29            [11]  574 	add	hl, hl
   037D 11r69r01      [10]  575 	ld	de,#_mapa2
   0380 19            [11]  576 	add	hl,de
   0381 FD 75 00      [19]  577 	ld	0 (iy),l
   0384 FD 74 01      [19]  578 	ld	1 (iy),h
                            579 ;src/main.c:63: for(x=0;x<height;x++){
   0387 03            [ 6]  580 	inc	bc
   0388 79            [ 4]  581 	ld	a,c
   0389 D6 0A         [ 7]  582 	sub	a, #0x0A
   038B 78            [ 4]  583 	ld	a,b
   038C 17            [ 4]  584 	rla
   038D 3F            [ 4]  585 	ccf
   038E 1F            [ 4]  586 	rra
   038F DE 80         [ 7]  587 	sbc	a, #0x80
   0391 38 D9         [12]  588 	jr	C,00113$
                            589 ;src/main.c:68: for(posY=0; posY<height;posY++){
   0393                     590 00128$:
   0393 DD 36 FC 00   [19]  591 	ld	-4 (ix),#0x00
   0397 DD 36 FD 00   [19]  592 	ld	-3 (ix),#0x00
                            593 ;src/main.c:69: for(posX=0; posX<width;posX++){
   039B                     594 00126$:
   039B C1            [10]  595 	pop	bc
   039C E1            [10]  596 	pop	hl
   039D E5            [11]  597 	push	hl
   039E C5            [11]  598 	push	bc
   039F 29            [11]  599 	add	hl, hl
   03A0 3Er00         [ 7]  600 	ld	a,#<(_scene)
   03A2 85            [ 4]  601 	add	a, l
   03A3 DD 77 FE      [19]  602 	ld	-2 (ix),a
   03A6 3Es00         [ 7]  603 	ld	a,#>(_scene)
   03A8 8C            [ 4]  604 	adc	a, h
   03A9 DD 77 FF      [19]  605 	ld	-1 (ix),a
   03AC 11 00 00      [10]  606 	ld	de,#0x0000
   03AF                     607 00115$:
                            608 ;src/main.c:70: memptr = cpct_getScreenPtr(VMEM, posX*5, posY*20); 
   03AF DD 7E FC      [19]  609 	ld	a,-4 (ix)
   03B2 4F            [ 4]  610 	ld	c,a
   03B3 87            [ 4]  611 	add	a, a
   03B4 87            [ 4]  612 	add	a, a
   03B5 81            [ 4]  613 	add	a, c
   03B6 87            [ 4]  614 	add	a, a
   03B7 87            [ 4]  615 	add	a, a
   03B8 47            [ 4]  616 	ld	b,a
   03B9 4B            [ 4]  617 	ld	c,e
   03BA 79            [ 4]  618 	ld	a,c
   03BB 87            [ 4]  619 	add	a, a
   03BC 87            [ 4]  620 	add	a, a
   03BD 81            [ 4]  621 	add	a, c
   03BE D5            [11]  622 	push	de
   03BF C5            [11]  623 	push	bc
   03C0 33            [ 6]  624 	inc	sp
   03C1 F5            [11]  625 	push	af
   03C2 33            [ 6]  626 	inc	sp
   03C3 21 00 C0      [10]  627 	ld	hl,#0xC000
   03C6 E5            [11]  628 	push	hl
   03C7 CDr00r00      [17]  629 	call	_cpct_getScreenPtr
   03CA D1            [10]  630 	pop	de
   03CB 33            [ 6]  631 	inc	sp
   03CC 33            [ 6]  632 	inc	sp
   03CD E5            [11]  633 	push	hl
                            634 ;src/main.c:71: if(scene[posY][posX] == 1){
   03CE DD 6E FE      [19]  635 	ld	l,-2 (ix)
   03D1 DD 66 FF      [19]  636 	ld	h,-1 (ix)
   03D4 4E            [ 7]  637 	ld	c,(hl)
   03D5 23            [ 6]  638 	inc	hl
   03D6 46            [ 7]  639 	ld	b,(hl)
   03D7 6B            [ 4]  640 	ld	l, e
   03D8 62            [ 4]  641 	ld	h, d
   03D9 29            [11]  642 	add	hl, hl
   03DA 09            [11]  643 	add	hl,bc
   03DB 46            [ 7]  644 	ld	b,(hl)
   03DC 23            [ 6]  645 	inc	hl
   03DD 66            [ 7]  646 	ld	h,(hl)
   03DE 10 17         [13]  647 	djnz	00116$
   03E0 7C            [ 4]  648 	ld	a,h
   03E1 B7            [ 4]  649 	or	a, a
   03E2 20 13         [12]  650 	jr	NZ,00116$
                            651 ;src/main.c:72: cpct_drawSolidBox(memptr, 3, 5, 20);
   03E4 C1            [10]  652 	pop	bc
   03E5 C5            [11]  653 	push	bc
   03E6 D5            [11]  654 	push	de
   03E7 21 05 14      [10]  655 	ld	hl,#0x1405
   03EA E5            [11]  656 	push	hl
   03EB 3E 03         [ 7]  657 	ld	a,#0x03
   03ED F5            [11]  658 	push	af
   03EE 33            [ 6]  659 	inc	sp
   03EF C5            [11]  660 	push	bc
   03F0 CDr00r00      [17]  661 	call	_cpct_drawSolidBox
   03F3 F1            [10]  662 	pop	af
   03F4 F1            [10]  663 	pop	af
   03F5 33            [ 6]  664 	inc	sp
   03F6 D1            [10]  665 	pop	de
   03F7                     666 00116$:
                            667 ;src/main.c:69: for(posX=0; posX<width;posX++){
   03F7 13            [ 6]  668 	inc	de
   03F8 7B            [ 4]  669 	ld	a,e
   03F9 D6 10         [ 7]  670 	sub	a, #0x10
   03FB 7A            [ 4]  671 	ld	a,d
   03FC 17            [ 4]  672 	rla
   03FD 3F            [ 4]  673 	ccf
   03FE 1F            [ 4]  674 	rra
   03FF DE 80         [ 7]  675 	sbc	a, #0x80
   0401 38 AC         [12]  676 	jr	C,00115$
                            677 ;src/main.c:68: for(posY=0; posY<height;posY++){
   0403 DD 34 FC      [23]  678 	inc	-4 (ix)
   0406 20 03         [12]  679 	jr	NZ,00163$
   0408 DD 34 FD      [23]  680 	inc	-3 (ix)
   040B                     681 00163$:
   040B DD 7E FC      [19]  682 	ld	a,-4 (ix)
   040E D6 0A         [ 7]  683 	sub	a, #0x0A
   0410 DD 7E FD      [19]  684 	ld	a,-3 (ix)
   0413 17            [ 4]  685 	rla
   0414 3F            [ 4]  686 	ccf
   0415 1F            [ 4]  687 	rra
   0416 DE 80         [ 7]  688 	sbc	a, #0x80
   0418 DAr9Br03      [10]  689 	jp	C,00126$
   041B DD F9         [10]  690 	ld	sp, ix
   041D DD E1         [14]  691 	pop	ix
   041F C9            [10]  692 	ret
                            693 ;src/main.c:82: void checkColisions(u8 *x,u8 *y, u8 lx, u8 ly){
                            694 ;	---------------------------------
                            695 ; Function checkColisions
                            696 ; ---------------------------------
   0420                     697 _checkColisions::
   0420 DD E5         [15]  698 	push	ix
   0422 DD 21 00 00   [14]  699 	ld	ix,#0
   0426 DD 39         [15]  700 	add	ix,sp
   0428 21 F8 FF      [10]  701 	ld	hl,#-8
   042B 39            [11]  702 	add	hl,sp
   042C F9            [ 6]  703 	ld	sp,hl
                            704 ;src/main.c:84: u8 *posX = x;
   042D DD 7E 04      [19]  705 	ld	a,4 (ix)
   0430 DD 77 FA      [19]  706 	ld	-6 (ix),a
   0433 DD 7E 05      [19]  707 	ld	a,5 (ix)
   0436 DD 77 FB      [19]  708 	ld	-5 (ix),a
                            709 ;src/main.c:85: u8 *posY = y;
   0439 DD 7E 06      [19]  710 	ld	a,6 (ix)
   043C DD 77 F8      [19]  711 	ld	-8 (ix),a
   043F DD 7E 07      [19]  712 	ld	a,7 (ix)
   0442 DD 77 F9      [19]  713 	ld	-7 (ix),a
                            714 ;src/main.c:96: if(    scene[(posY[0])/tileheight][(posX[0])/tilewidth] == 1   
   0445 E1            [10]  715 	pop	hl
   0446 E5            [11]  716 	push	hl
   0447 5E            [ 7]  717 	ld	e,(hl)
   0448 D5            [11]  718 	push	de
   0449 16 14         [ 7]  719 	ld	d,#0x14
   044B D5            [11]  720 	push	de
   044C CDr00r00      [17]  721 	call	__divuchar
   044F F1            [10]  722 	pop	af
   0450 D1            [10]  723 	pop	de
   0451 26 00         [ 7]  724 	ld	h,#0x00
   0453 29            [11]  725 	add	hl, hl
   0454 01r00r00      [10]  726 	ld	bc,#_scene
   0457 09            [11]  727 	add	hl,bc
   0458 4E            [ 7]  728 	ld	c,(hl)
   0459 23            [ 6]  729 	inc	hl
   045A 46            [ 7]  730 	ld	b,(hl)
   045B DD 6E FA      [19]  731 	ld	l,-6 (ix)
   045E DD 66 FB      [19]  732 	ld	h,-5 (ix)
   0461 56            [ 7]  733 	ld	d,(hl)
   0462 C5            [11]  734 	push	bc
   0463 D5            [11]  735 	push	de
   0464 3E 05         [ 7]  736 	ld	a,#0x05
   0466 F5            [11]  737 	push	af
   0467 33            [ 6]  738 	inc	sp
   0468 D5            [11]  739 	push	de
   0469 33            [ 6]  740 	inc	sp
   046A CDr00r00      [17]  741 	call	__divuchar
   046D F1            [10]  742 	pop	af
   046E D1            [10]  743 	pop	de
   046F C1            [10]  744 	pop	bc
   0470 26 00         [ 7]  745 	ld	h,#0x00
   0472 29            [11]  746 	add	hl, hl
   0473 DD 75 FE      [19]  747 	ld	-2 (ix),l
   0476 DD 74 FF      [19]  748 	ld	-1 (ix),h
   0479 DD 6E FE      [19]  749 	ld	l,-2 (ix)
   047C DD 66 FF      [19]  750 	ld	h,-1 (ix)
   047F 09            [11]  751 	add	hl,bc
   0480 7E            [ 7]  752 	ld	a, (hl)
   0481 23            [ 6]  753 	inc	hl
   0482 66            [ 7]  754 	ld	h,(hl)
   0483 6F            [ 4]  755 	ld	l,a
   0484 2D            [ 4]  756 	dec	l
   0485 20 04         [12]  757 	jr	NZ,00120$
   0487 7C            [ 4]  758 	ld	a,h
   0488 B7            [ 4]  759 	or	a, a
   0489 28 69         [12]  760 	jr	Z,00101$
   048B                     761 00120$:
                            762 ;src/main.c:97: || scene[(posY[0])/tileheight][(posX[0]+playerwidth-1)/tilewidth] == 1
   048B 6A            [ 4]  763 	ld	l,d
   048C 26 00         [ 7]  764 	ld	h,#0x00
   048E 23            [ 6]  765 	inc	hl
   048F 23            [ 6]  766 	inc	hl
   0490 23            [ 6]  767 	inc	hl
   0491 E5            [11]  768 	push	hl
   0492 FD E1         [14]  769 	pop	iy
   0494 C5            [11]  770 	push	bc
   0495 D5            [11]  771 	push	de
   0496 21 05 00      [10]  772 	ld	hl,#0x0005
   0499 E5            [11]  773 	push	hl
   049A FD E5         [15]  774 	push	iy
   049C CDr00r00      [17]  775 	call	__divsint
   049F F1            [10]  776 	pop	af
   04A0 F1            [10]  777 	pop	af
   04A1 D1            [10]  778 	pop	de
   04A2 C1            [10]  779 	pop	bc
   04A3 29            [11]  780 	add	hl, hl
   04A4 DD 75 FC      [19]  781 	ld	-4 (ix),l
   04A7 DD 74 FD      [19]  782 	ld	-3 (ix),h
   04AA DD 6E FC      [19]  783 	ld	l,-4 (ix)
   04AD DD 66 FD      [19]  784 	ld	h,-3 (ix)
   04B0 09            [11]  785 	add	hl,bc
   04B1 4E            [ 7]  786 	ld	c,(hl)
   04B2 23            [ 6]  787 	inc	hl
   04B3 66            [ 7]  788 	ld	h,(hl)
   04B4 0D            [ 4]  789 	dec	c
   04B5 20 04         [12]  790 	jr	NZ,00121$
   04B7 7C            [ 4]  791 	ld	a,h
   04B8 B7            [ 4]  792 	or	a, a
   04B9 28 39         [12]  793 	jr	Z,00101$
   04BB                     794 00121$:
                            795 ;src/main.c:98: || scene[(posY[0]+playerheight-2)/tileheight][(posX[0])/tilewidth] == 1 
   04BB 16 00         [ 7]  796 	ld	d,#0x00
   04BD 21 0E 00      [10]  797 	ld	hl,#0x000E
   04C0 19            [11]  798 	add	hl,de
   04C1 01 14 00      [10]  799 	ld	bc,#0x0014
   04C4 C5            [11]  800 	push	bc
   04C5 E5            [11]  801 	push	hl
   04C6 CDr00r00      [17]  802 	call	__divsint
   04C9 F1            [10]  803 	pop	af
   04CA F1            [10]  804 	pop	af
   04CB 29            [11]  805 	add	hl, hl
   04CC 11r00r00      [10]  806 	ld	de,#_scene
   04CF 19            [11]  807 	add	hl,de
   04D0 5E            [ 7]  808 	ld	e,(hl)
   04D1 23            [ 6]  809 	inc	hl
   04D2 56            [ 7]  810 	ld	d,(hl)
   04D3 DD 6E FE      [19]  811 	ld	l,-2 (ix)
   04D6 DD 66 FF      [19]  812 	ld	h,-1 (ix)
   04D9 19            [11]  813 	add	hl,de
   04DA 46            [ 7]  814 	ld	b,(hl)
   04DB 23            [ 6]  815 	inc	hl
   04DC 66            [ 7]  816 	ld	h,(hl)
   04DD 10 04         [13]  817 	djnz	00122$
   04DF 7C            [ 4]  818 	ld	a,h
   04E0 B7            [ 4]  819 	or	a, a
   04E1 28 11         [12]  820 	jr	Z,00101$
   04E3                     821 00122$:
                            822 ;src/main.c:99: || scene[(posY[0]+playerheight-2)/tileheight][(posX[0]+playerwidth-1)/tilewidth] == 1
   04E3 DD 6E FC      [19]  823 	ld	l,-4 (ix)
   04E6 DD 66 FD      [19]  824 	ld	h,-3 (ix)
   04E9 19            [11]  825 	add	hl,de
   04EA 5E            [ 7]  826 	ld	e,(hl)
   04EB 23            [ 6]  827 	inc	hl
   04EC 66            [ 7]  828 	ld	h,(hl)
   04ED 1D            [ 4]  829 	dec	e
   04EE 20 14         [12]  830 	jr	NZ,00106$
   04F0 7C            [ 4]  831 	ld	a,h
   04F1 B7            [ 4]  832 	or	a, a
   04F2 20 10         [12]  833 	jr	NZ,00106$
   04F4                     834 00101$:
                            835 ;src/main.c:102: *posX=lx;
   04F4 DD 6E FA      [19]  836 	ld	l,-6 (ix)
   04F7 DD 66 FB      [19]  837 	ld	h,-5 (ix)
   04FA DD 7E 08      [19]  838 	ld	a,8 (ix)
   04FD 77            [ 7]  839 	ld	(hl),a
                            840 ;src/main.c:103: *posY=ly;
   04FE E1            [10]  841 	pop	hl
   04FF E5            [11]  842 	push	hl
   0500 DD 7E 09      [19]  843 	ld	a,9 (ix)
   0503 77            [ 7]  844 	ld	(hl),a
   0504                     845 00106$:
   0504 DD F9         [10]  846 	ld	sp, ix
   0506 DD E1         [14]  847 	pop	ix
   0508 C9            [10]  848 	ret
                            849 ;src/main.c:110: u8* checkKeyboard(u8 *x, u8 *y,int *finish,u8 *s,u8 *dir,u8 *size){
                            850 ;	---------------------------------
                            851 ; Function checkKeyboard
                            852 ; ---------------------------------
   0509                     853 _checkKeyboard::
   0509 DD E5         [15]  854 	push	ix
   050B DD 21 00 00   [14]  855 	ld	ix,#0
   050F DD 39         [15]  856 	add	ix,sp
   0511 F5            [11]  857 	push	af
   0512 F5            [11]  858 	push	af
                            859 ;src/main.c:112: u8 *sprite = s;
   0513 DD 5E 0A      [19]  860 	ld	e,10 (ix)
   0516 DD 56 0B      [19]  861 	ld	d,11 (ix)
                            862 ;src/main.c:113: if(cpct_isKeyPressed(Key_CursorRight) && x[0] < 76 ){
   0519 D5            [11]  863 	push	de
   051A 21 00 02      [10]  864 	ld	hl,#0x0200
   051D CDr00r00      [17]  865 	call	_cpct_isKeyPressed
   0520 4D            [ 4]  866 	ld	c,l
   0521 D1            [10]  867 	pop	de
   0522 DD 6E 04      [19]  868 	ld	l,4 (ix)
   0525 DD 66 05      [19]  869 	ld	h,5 (ix)
                            870 ;src/main.c:115: dir[0] = 6;
   0528 DD 7E 0C      [19]  871 	ld	a,12 (ix)
   052B DD 77 FE      [19]  872 	ld	-2 (ix),a
   052E DD 7E 0D      [19]  873 	ld	a,13 (ix)
   0531 DD 77 FF      [19]  874 	ld	-1 (ix),a
                            875 ;src/main.c:116: size[0] = 4;
   0534 DD 7E 0E      [19]  876 	ld	a,14 (ix)
   0537 DD 77 FC      [19]  877 	ld	-4 (ix),a
   053A DD 7E 0F      [19]  878 	ld	a,15 (ix)
   053D DD 77 FD      [19]  879 	ld	-3 (ix),a
                            880 ;src/main.c:113: if(cpct_isKeyPressed(Key_CursorRight) && x[0] < 76 ){
   0540 79            [ 4]  881 	ld	a,c
   0541 B7            [ 4]  882 	or	a, a
   0542 28 1A         [12]  883 	jr	Z,00125$
   0544 46            [ 7]  884 	ld	b,(hl)
   0545 78            [ 4]  885 	ld	a,b
   0546 D6 4C         [ 7]  886 	sub	a, #0x4C
   0548 30 14         [12]  887 	jr	NC,00125$
                            888 ;src/main.c:114: x[0] += 1;
   054A 04            [ 4]  889 	inc	b
   054B 70            [ 7]  890 	ld	(hl),b
                            891 ;src/main.c:115: dir[0] = 6;
   054C DD 6E FE      [19]  892 	ld	l,-2 (ix)
   054F DD 66 FF      [19]  893 	ld	h,-1 (ix)
   0552 36 06         [10]  894 	ld	(hl),#0x06
                            895 ;src/main.c:116: size[0] = 4;
   0554 E1            [10]  896 	pop	hl
   0555 E5            [11]  897 	push	hl
   0556 36 04         [10]  898 	ld	(hl),#0x04
                            899 ;src/main.c:117: sprite = gladis_quieto_dcha;
   0558 11r00r00      [10]  900 	ld	de,#_gladis_quieto_dcha+0
   055B C3r1Fr06      [10]  901 	jp	00126$
   055E                     902 00125$:
                            903 ;src/main.c:118: }else if(cpct_isKeyPressed(Key_CursorLeft) && x[0] > 0 ){
   055E E5            [11]  904 	push	hl
   055F D5            [11]  905 	push	de
   0560 21 01 01      [10]  906 	ld	hl,#0x0101
   0563 CDr00r00      [17]  907 	call	_cpct_isKeyPressed
   0566 7D            [ 4]  908 	ld	a,l
   0567 D1            [10]  909 	pop	de
   0568 E1            [10]  910 	pop	hl
   0569 B7            [ 4]  911 	or	a, a
   056A 28 19         [12]  912 	jr	Z,00121$
   056C 7E            [ 7]  913 	ld	a,(hl)
   056D B7            [ 4]  914 	or	a, a
   056E 28 15         [12]  915 	jr	Z,00121$
                            916 ;src/main.c:119: x[0] -= 1;
   0570 C6 FF         [ 7]  917 	add	a,#0xFF
   0572 77            [ 7]  918 	ld	(hl),a
                            919 ;src/main.c:120: dir[0] = 4;
   0573 DD 6E FE      [19]  920 	ld	l,-2 (ix)
   0576 DD 66 FF      [19]  921 	ld	h,-1 (ix)
   0579 36 04         [10]  922 	ld	(hl),#0x04
                            923 ;src/main.c:121: size[0] = 4;
   057B E1            [10]  924 	pop	hl
   057C E5            [11]  925 	push	hl
   057D 36 04         [10]  926 	ld	(hl),#0x04
                            927 ;src/main.c:122: sprite = gladis_quieto_izda;
   057F 11r00r00      [10]  928 	ld	de,#_gladis_quieto_izda+0
   0582 C3r1Fr06      [10]  929 	jp	00126$
   0585                     930 00121$:
                            931 ;src/main.c:123: }else  if(cpct_isKeyPressed(Key_CursorDown) && y[0] < 180){
   0585 D5            [11]  932 	push	de
   0586 21 00 04      [10]  933 	ld	hl,#0x0400
   0589 CDr00r00      [17]  934 	call	_cpct_isKeyPressed
   058C 4D            [ 4]  935 	ld	c,l
   058D D1            [10]  936 	pop	de
   058E DD 6E 06      [19]  937 	ld	l,6 (ix)
   0591 DD 66 07      [19]  938 	ld	h,7 (ix)
   0594 79            [ 4]  939 	ld	a,c
   0595 B7            [ 4]  940 	or	a, a
   0596 28 1A         [12]  941 	jr	Z,00117$
   0598 46            [ 7]  942 	ld	b,(hl)
   0599 78            [ 4]  943 	ld	a,b
   059A D6 B4         [ 7]  944 	sub	a, #0xB4
   059C 30 14         [12]  945 	jr	NC,00117$
                            946 ;src/main.c:124: y[0] += 2;
   059E 04            [ 4]  947 	inc	b
   059F 04            [ 4]  948 	inc	b
   05A0 70            [ 7]  949 	ld	(hl),b
                            950 ;src/main.c:125: dir[0] = 2;
   05A1 DD 6E FE      [19]  951 	ld	l,-2 (ix)
   05A4 DD 66 FF      [19]  952 	ld	h,-1 (ix)
   05A7 36 02         [10]  953 	ld	(hl),#0x02
                            954 ;src/main.c:126: size[0] = 4;
   05A9 E1            [10]  955 	pop	hl
   05AA E5            [11]  956 	push	hl
   05AB 36 04         [10]  957 	ld	(hl),#0x04
                            958 ;src/main.c:127: sprite = gladis_quieto_dcha;
   05AD 11r00r00      [10]  959 	ld	de,#_gladis_quieto_dcha+0
   05B0 18 6D         [12]  960 	jr	00126$
   05B2                     961 00117$:
                            962 ;src/main.c:128: }else if(cpct_isKeyPressed(Key_CursorUp) && y[0] > 0 ){
   05B2 E5            [11]  963 	push	hl
   05B3 D5            [11]  964 	push	de
   05B4 21 00 01      [10]  965 	ld	hl,#0x0100
   05B7 CDr00r00      [17]  966 	call	_cpct_isKeyPressed
   05BA 7D            [ 4]  967 	ld	a,l
   05BB D1            [10]  968 	pop	de
   05BC E1            [10]  969 	pop	hl
   05BD B7            [ 4]  970 	or	a, a
   05BE 28 18         [12]  971 	jr	Z,00113$
   05C0 7E            [ 7]  972 	ld	a,(hl)
   05C1 B7            [ 4]  973 	or	a, a
   05C2 28 14         [12]  974 	jr	Z,00113$
                            975 ;src/main.c:129: y[0] -= 2;
   05C4 C6 FE         [ 7]  976 	add	a,#0xFE
   05C6 77            [ 7]  977 	ld	(hl),a
                            978 ;src/main.c:130: dir[0] = 8;
   05C7 DD 6E FE      [19]  979 	ld	l,-2 (ix)
   05CA DD 66 FF      [19]  980 	ld	h,-1 (ix)
   05CD 36 08         [10]  981 	ld	(hl),#0x08
                            982 ;src/main.c:131: size[0] = 4;
   05CF E1            [10]  983 	pop	hl
   05D0 E5            [11]  984 	push	hl
   05D1 36 04         [10]  985 	ld	(hl),#0x04
                            986 ;src/main.c:132: sprite = gladis_quieto_dcha;
   05D3 11r00r00      [10]  987 	ld	de,#_gladis_quieto_dcha+0
   05D6 18 47         [12]  988 	jr	00126$
   05D8                     989 00113$:
                            990 ;src/main.c:133: }else  if(cpct_isKeyPressed(Key_Esc)){
   05D8 D5            [11]  991 	push	de
   05D9 21 08 04      [10]  992 	ld	hl,#0x0408
   05DC CDr00r00      [17]  993 	call	_cpct_isKeyPressed
   05DF 7D            [ 4]  994 	ld	a,l
   05E0 D1            [10]  995 	pop	de
   05E1 B7            [ 4]  996 	or	a, a
   05E2 28 0D         [12]  997 	jr	Z,00110$
                            998 ;src/main.c:134: finish[0] = 1;
   05E4 DD 6E 08      [19]  999 	ld	l,8 (ix)
   05E7 DD 66 09      [19] 1000 	ld	h,9 (ix)
   05EA 36 01         [10] 1001 	ld	(hl),#0x01
   05EC 23            [ 6] 1002 	inc	hl
   05ED 36 00         [10] 1003 	ld	(hl),#0x00
   05EF 18 2E         [12] 1004 	jr	00126$
   05F1                    1005 00110$:
                           1006 ;src/main.c:135: }else if(cpct_isKeyPressed(Key_Space)){
   05F1 D5            [11] 1007 	push	de
   05F2 21 05 80      [10] 1008 	ld	hl,#0x8005
   05F5 CDr00r00      [17] 1009 	call	_cpct_isKeyPressed
   05F8 7D            [ 4] 1010 	ld	a,l
   05F9 D1            [10] 1011 	pop	de
   05FA B7            [ 4] 1012 	or	a, a
   05FB 28 22         [12] 1013 	jr	Z,00126$
                           1014 ;src/main.c:136: size[0] = 5;
   05FD E1            [10] 1015 	pop	hl
   05FE E5            [11] 1016 	push	hl
   05FF 36 05         [10] 1017 	ld	(hl),#0x05
                           1018 ;src/main.c:137: if(dir[0] == 6) {sprite = gladis_atk_dcha;}
   0601 DD 6E FE      [19] 1019 	ld	l,-2 (ix)
   0604 DD 66 FF      [19] 1020 	ld	h,-1 (ix)
   0607 6E            [ 7] 1021 	ld	l,(hl)
   0608 7D            [ 4] 1022 	ld	a,l
   0609 D6 06         [ 7] 1023 	sub	a, #0x06
   060B 20 05         [12] 1024 	jr	NZ,00105$
   060D 11r00r00      [10] 1025 	ld	de,#_gladis_atk_dcha+0
   0610 18 0D         [12] 1026 	jr	00126$
   0612                    1027 00105$:
                           1028 ;src/main.c:138: else if(dir[0] == 4) {sprite = gladis_atk_izda;}
   0612 7D            [ 4] 1029 	ld	a,l
   0613 D6 04         [ 7] 1030 	sub	a, #0x04
   0615 20 05         [12] 1031 	jr	NZ,00102$
   0617 11r00r00      [10] 1032 	ld	de,#_gladis_atk_izda+0
   061A 18 03         [12] 1033 	jr	00126$
   061C                    1034 00102$:
                           1035 ;src/main.c:139: else {sprite = gladis_quieto_dcha;} 
   061C 11r00r00      [10] 1036 	ld	de,#_gladis_quieto_dcha+0
   061F                    1037 00126$:
                           1038 ;src/main.c:141: return sprite;
   061F EB            [ 4] 1039 	ex	de,hl
   0620 DD F9         [10] 1040 	ld	sp, ix
   0622 DD E1         [14] 1041 	pop	ix
   0624 C9            [10] 1042 	ret
                           1043 ;src/main.c:147: void game(){
                           1044 ;	---------------------------------
                           1045 ; Function game
                           1046 ; ---------------------------------
   0625                    1047 _game::
   0625 DD E5         [15] 1048 	push	ix
   0627 DD 21 00 00   [14] 1049 	ld	ix,#0
   062B DD 39         [15] 1050 	add	ix,sp
   062D 21 D6 FF      [10] 1051 	ld	hl,#-42
   0630 39            [11] 1052 	add	hl,sp
   0631 F9            [ 6] 1053 	ld	sp,hl
                           1054 ;src/main.c:148: TPlayer p = {0,100,gladis_quieto_dcha,10,6,4};
   0632 21 00 00      [10] 1055 	ld	hl,#0x0000
   0635 39            [11] 1056 	add	hl,sp
   0636 36 00         [10] 1057 	ld	(hl),#0x00
   0638 21 00 00      [10] 1058 	ld	hl,#0x0000
   063B 39            [11] 1059 	add	hl,sp
   063C 5D            [ 4] 1060 	ld	e, l
   063D 54            [ 4] 1061 	ld	d, h
   063E 23            [ 6] 1062 	inc	hl
   063F DD 75 FE      [19] 1063 	ld	-2 (ix),l
   0642 DD 74 FF      [19] 1064 	ld	-1 (ix),h
   0645 DD 6E FE      [19] 1065 	ld	l,-2 (ix)
   0648 DD 66 FF      [19] 1066 	ld	h,-1 (ix)
   064B 36 64         [10] 1067 	ld	(hl),#0x64
   064D 21 02 00      [10] 1068 	ld	hl,#0x0002
   0650 19            [11] 1069 	add	hl,de
   0651 DD 75 FC      [19] 1070 	ld	-4 (ix),l
   0654 DD 74 FD      [19] 1071 	ld	-3 (ix),h
   0657 DD 6E FC      [19] 1072 	ld	l,-4 (ix)
   065A DD 66 FD      [19] 1073 	ld	h,-3 (ix)
   065D 36r00         [10] 1074 	ld	(hl),#<(_gladis_quieto_dcha)
   065F 23            [ 6] 1075 	inc	hl
   0660 36s00         [10] 1076 	ld	(hl),#>(_gladis_quieto_dcha)
   0662 21 04 00      [10] 1077 	ld	hl,#0x0004
   0665 19            [11] 1078 	add	hl,de
   0666 36 0A         [10] 1079 	ld	(hl),#0x0A
   0668 21 05 00      [10] 1080 	ld	hl,#0x0005
   066B 19            [11] 1081 	add	hl,de
   066C DD 75 FA      [19] 1082 	ld	-6 (ix),l
   066F DD 74 FB      [19] 1083 	ld	-5 (ix),h
   0672 DD 6E FA      [19] 1084 	ld	l,-6 (ix)
   0675 DD 66 FB      [19] 1085 	ld	h,-5 (ix)
   0678 36 06         [10] 1086 	ld	(hl),#0x06
   067A 21 06 00      [10] 1087 	ld	hl,#0x0006
   067D 19            [11] 1088 	add	hl,de
   067E DD 75 F8      [19] 1089 	ld	-8 (ix),l
   0681 DD 74 F9      [19] 1090 	ld	-7 (ix),h
   0684 DD 6E F8      [19] 1091 	ld	l,-8 (ix)
   0687 DD 66 F9      [19] 1092 	ld	h,-7 (ix)
   068A 36 04         [10] 1093 	ld	(hl),#0x04
                           1094 ;src/main.c:149: TPlayer e = {30,100,gladis_quieto_dcha,5,4,4};
   068C 21 07 00      [10] 1095 	ld	hl,#0x0007
   068F 39            [11] 1096 	add	hl,sp
   0690 36 1E         [10] 1097 	ld	(hl),#0x1E
   0692 21 07 00      [10] 1098 	ld	hl,#0x0007
   0695 39            [11] 1099 	add	hl,sp
   0696 4D            [ 4] 1100 	ld	c,l
   0697 44            [ 4] 1101 	ld	b,h
   0698 23            [ 6] 1102 	inc	hl
   0699 36 64         [10] 1103 	ld	(hl),#0x64
   069B 69            [ 4] 1104 	ld	l, c
   069C 60            [ 4] 1105 	ld	h, b
   069D 23            [ 6] 1106 	inc	hl
   069E 23            [ 6] 1107 	inc	hl
   069F 36r00         [10] 1108 	ld	(hl),#<(_gladis_quieto_dcha)
   06A1 23            [ 6] 1109 	inc	hl
   06A2 36s00         [10] 1110 	ld	(hl),#>(_gladis_quieto_dcha)
   06A4 21 04 00      [10] 1111 	ld	hl,#0x0004
   06A7 09            [11] 1112 	add	hl,bc
   06A8 36 05         [10] 1113 	ld	(hl),#0x05
   06AA 21 05 00      [10] 1114 	ld	hl,#0x0005
   06AD 09            [11] 1115 	add	hl,bc
   06AE 36 04         [10] 1116 	ld	(hl),#0x04
   06B0 21 06 00      [10] 1117 	ld	hl,#0x0006
   06B3 09            [11] 1118 	add	hl,bc
   06B4 36 04         [10] 1119 	ld	(hl),#0x04
                           1120 ;src/main.c:153: int finish = 0;
   06B6 DD 36 E6 00   [19] 1121 	ld	-26 (ix),#0x00
   06BA DD 36 E7 00   [19] 1122 	ld	-25 (ix),#0x00
                           1123 ;src/main.c:158: cpct_clearScreen(0);
   06BE D5            [11] 1124 	push	de
   06BF 21 00 40      [10] 1125 	ld	hl,#0x4000
   06C2 E5            [11] 1126 	push	hl
   06C3 AF            [ 4] 1127 	xor	a, a
   06C4 F5            [11] 1128 	push	af
   06C5 33            [ 6] 1129 	inc	sp
   06C6 26 C0         [ 7] 1130 	ld	h, #0xC0
   06C8 E5            [11] 1131 	push	hl
   06C9 CDr00r00      [17] 1132 	call	_cpct_memset
   06CC 21 01 00      [10] 1133 	ld	hl,#0x0001
   06CF E5            [11] 1134 	push	hl
   06D0 CDr0Fr03      [17] 1135 	call	_drawMap
   06D3 F1            [10] 1136 	pop	af
   06D4 D1            [10] 1137 	pop	de
                           1138 ;src/main.c:161: while (1){
   06D5 DD 7E F8      [19] 1139 	ld	a,-8 (ix)
   06D8 DD 77 F6      [19] 1140 	ld	-10 (ix),a
   06DB DD 7E F9      [19] 1141 	ld	a,-7 (ix)
   06DE DD 77 F7      [19] 1142 	ld	-9 (ix),a
   06E1 DD 7E FE      [19] 1143 	ld	a,-2 (ix)
   06E4 DD 77 F4      [19] 1144 	ld	-12 (ix),a
   06E7 DD 7E FF      [19] 1145 	ld	a,-1 (ix)
   06EA DD 77 F5      [19] 1146 	ld	-11 (ix),a
   06ED DD 73 F2      [19] 1147 	ld	-14 (ix),e
   06F0 DD 72 F3      [19] 1148 	ld	-13 (ix),d
   06F3 DD 7E FE      [19] 1149 	ld	a,-2 (ix)
   06F6 DD 77 F0      [19] 1150 	ld	-16 (ix),a
   06F9 DD 7E FF      [19] 1151 	ld	a,-1 (ix)
   06FC DD 77 F1      [19] 1152 	ld	-15 (ix),a
   06FF DD 73 EE      [19] 1153 	ld	-18 (ix),e
   0702 DD 72 EF      [19] 1154 	ld	-17 (ix),d
   0705                    1155 00104$:
                           1156 ;src/main.c:164: cpct_waitVSYNC();
   0705 D5            [11] 1157 	push	de
   0706 CDr00r00      [17] 1158 	call	_cpct_waitVSYNC
   0709 D1            [10] 1159 	pop	de
                           1160 ;src/main.c:167: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   070A DD 6E FE      [19] 1161 	ld	l,-2 (ix)
   070D DD 66 FF      [19] 1162 	ld	h,-1 (ix)
   0710 46            [ 7] 1163 	ld	b,(hl)
   0711 1A            [ 7] 1164 	ld	a,(de)
   0712 D5            [11] 1165 	push	de
   0713 C5            [11] 1166 	push	bc
   0714 33            [ 6] 1167 	inc	sp
   0715 F5            [11] 1168 	push	af
   0716 33            [ 6] 1169 	inc	sp
   0717 21 00 C0      [10] 1170 	ld	hl,#0xC000
   071A E5            [11] 1171 	push	hl
   071B CDr00r00      [17] 1172 	call	_cpct_getScreenPtr
   071E D1            [10] 1173 	pop	de
   071F E5            [11] 1174 	push	hl
   0720 FD E1         [14] 1175 	pop	iy
                           1176 ;src/main.c:168: cpct_drawSolidBox(memptr,0,p.size,16);
   0722 DD 6E F8      [19] 1177 	ld	l,-8 (ix)
   0725 DD 66 F9      [19] 1178 	ld	h,-7 (ix)
   0728 4E            [ 7] 1179 	ld	c,(hl)
   0729 D5            [11] 1180 	push	de
   072A 3E 10         [ 7] 1181 	ld	a,#0x10
   072C F5            [11] 1182 	push	af
   072D 33            [ 6] 1183 	inc	sp
   072E 79            [ 4] 1184 	ld	a,c
   072F F5            [11] 1185 	push	af
   0730 33            [ 6] 1186 	inc	sp
   0731 AF            [ 4] 1187 	xor	a, a
   0732 F5            [11] 1188 	push	af
   0733 33            [ 6] 1189 	inc	sp
   0734 FD E5         [15] 1190 	push	iy
   0736 CDr00r00      [17] 1191 	call	_cpct_drawSolidBox
   0739 F1            [10] 1192 	pop	af
   073A F1            [10] 1193 	pop	af
   073B 33            [ 6] 1194 	inc	sp
   073C D1            [10] 1195 	pop	de
                           1196 ;src/main.c:173: lx = p.x;
   073D 1A            [ 7] 1197 	ld	a,(de)
   073E DD 77 E4      [19] 1198 	ld	-28 (ix),a
                           1199 ;src/main.c:174: ly = p.y;
   0741 DD 6E FE      [19] 1200 	ld	l,-2 (ix)
   0744 DD 66 FF      [19] 1201 	ld	h,-1 (ix)
   0747 7E            [ 7] 1202 	ld	a,(hl)
   0748 DD 77 E5      [19] 1203 	ld	-27 (ix),a
                           1204 ;src/main.c:177: cpct_scanKeyboard_f();
   074B D5            [11] 1205 	push	de
   074C CDr00r00      [17] 1206 	call	_cpct_scanKeyboard_f
   074F D1            [10] 1207 	pop	de
                           1208 ;src/main.c:178: p.sprite  = checkKeyboard(&p.x,&p.y,&finish,p.sprite,&p.dir,&p.size);
   0750 DD 4E F6      [19] 1209 	ld	c,-10 (ix)
   0753 DD 46 F7      [19] 1210 	ld	b,-9 (ix)
   0756 DD 7E FA      [19] 1211 	ld	a,-6 (ix)
   0759 DD 77 EC      [19] 1212 	ld	-20 (ix),a
   075C DD 7E FB      [19] 1213 	ld	a,-5 (ix)
   075F DD 77 ED      [19] 1214 	ld	-19 (ix),a
   0762 DD 6E FC      [19] 1215 	ld	l,-4 (ix)
   0765 DD 66 FD      [19] 1216 	ld	h,-3 (ix)
   0768 7E            [ 7] 1217 	ld	a,(hl)
   0769 DD 77 EA      [19] 1218 	ld	-22 (ix),a
   076C 23            [ 6] 1219 	inc	hl
   076D 7E            [ 7] 1220 	ld	a,(hl)
   076E DD 77 EB      [19] 1221 	ld	-21 (ix),a
   0771 FD 21 10 00   [14] 1222 	ld	iy,#0x0010
   0775 FD 39         [15] 1223 	add	iy,sp
   0777 DD 7E F4      [19] 1224 	ld	a,-12 (ix)
   077A DD 77 E8      [19] 1225 	ld	-24 (ix),a
   077D DD 7E F5      [19] 1226 	ld	a,-11 (ix)
   0780 DD 77 E9      [19] 1227 	ld	-23 (ix),a
   0783 DD 6E F2      [19] 1228 	ld	l,-14 (ix)
   0786 DD 66 F3      [19] 1229 	ld	h,-13 (ix)
   0789 D5            [11] 1230 	push	de
   078A C5            [11] 1231 	push	bc
   078B DD 4E EC      [19] 1232 	ld	c,-20 (ix)
   078E DD 46 ED      [19] 1233 	ld	b,-19 (ix)
   0791 C5            [11] 1234 	push	bc
   0792 DD 4E EA      [19] 1235 	ld	c,-22 (ix)
   0795 DD 46 EB      [19] 1236 	ld	b,-21 (ix)
   0798 C5            [11] 1237 	push	bc
   0799 FD E5         [15] 1238 	push	iy
   079B DD 4E E8      [19] 1239 	ld	c,-24 (ix)
   079E DD 46 E9      [19] 1240 	ld	b,-23 (ix)
   07A1 C5            [11] 1241 	push	bc
   07A2 E5            [11] 1242 	push	hl
   07A3 CDr09r05      [17] 1243 	call	_checkKeyboard
   07A6 FD 21 0C 00   [14] 1244 	ld	iy,#12
   07AA FD 39         [15] 1245 	add	iy,sp
   07AC FD F9         [10] 1246 	ld	sp,iy
   07AE 45            [ 4] 1247 	ld	b,l
   07AF 4C            [ 4] 1248 	ld	c,h
   07B0 D1            [10] 1249 	pop	de
   07B1 DD 6E FC      [19] 1250 	ld	l,-4 (ix)
   07B4 DD 66 FD      [19] 1251 	ld	h,-3 (ix)
   07B7 70            [ 7] 1252 	ld	(hl),b
   07B8 23            [ 6] 1253 	inc	hl
   07B9 71            [ 7] 1254 	ld	(hl),c
                           1255 ;src/main.c:181: checkColisions(&p.x,&p.y,lx,ly);
   07BA DD 4E F0      [19] 1256 	ld	c,-16 (ix)
   07BD DD 46 F1      [19] 1257 	ld	b,-15 (ix)
   07C0 C5            [11] 1258 	push	bc
   07C1 FD E1         [14] 1259 	pop	iy
   07C3 DD 4E EE      [19] 1260 	ld	c,-18 (ix)
   07C6 DD 46 EF      [19] 1261 	ld	b,-17 (ix)
   07C9 D5            [11] 1262 	push	de
   07CA DD 66 E5      [19] 1263 	ld	h,-27 (ix)
   07CD DD 6E E4      [19] 1264 	ld	l,-28 (ix)
   07D0 E5            [11] 1265 	push	hl
   07D1 FD E5         [15] 1266 	push	iy
   07D3 C5            [11] 1267 	push	bc
   07D4 CDr20r04      [17] 1268 	call	_checkColisions
   07D7 21 06 00      [10] 1269 	ld	hl,#6
   07DA 39            [11] 1270 	add	hl,sp
   07DB F9            [ 6] 1271 	ld	sp,hl
   07DC D1            [10] 1272 	pop	de
                           1273 ;src/main.c:184: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   07DD DD 6E FE      [19] 1274 	ld	l,-2 (ix)
   07E0 DD 66 FF      [19] 1275 	ld	h,-1 (ix)
   07E3 46            [ 7] 1276 	ld	b,(hl)
   07E4 1A            [ 7] 1277 	ld	a,(de)
   07E5 D5            [11] 1278 	push	de
   07E6 C5            [11] 1279 	push	bc
   07E7 33            [ 6] 1280 	inc	sp
   07E8 F5            [11] 1281 	push	af
   07E9 33            [ 6] 1282 	inc	sp
   07EA 21 00 C0      [10] 1283 	ld	hl,#0xC000
   07ED E5            [11] 1284 	push	hl
   07EE CDr00r00      [17] 1285 	call	_cpct_getScreenPtr
   07F1 D1            [10] 1286 	pop	de
   07F2 E5            [11] 1287 	push	hl
   07F3 FD E1         [14] 1288 	pop	iy
                           1289 ;src/main.c:185: cpct_drawSpriteMasked(p.sprite,memptr,p.size,16);
   07F5 DD 6E F8      [19] 1290 	ld	l,-8 (ix)
   07F8 DD 66 F9      [19] 1291 	ld	h,-7 (ix)
   07FB 7E            [ 7] 1292 	ld	a,(hl)
   07FC DD 77 E8      [19] 1293 	ld	-24 (ix),a
   07FF DD 6E FC      [19] 1294 	ld	l,-4 (ix)
   0802 DD 66 FD      [19] 1295 	ld	h,-3 (ix)
   0805 4E            [ 7] 1296 	ld	c,(hl)
   0806 23            [ 6] 1297 	inc	hl
   0807 46            [ 7] 1298 	ld	b,(hl)
   0808 D5            [11] 1299 	push	de
   0809 3E 10         [ 7] 1300 	ld	a,#0x10
   080B F5            [11] 1301 	push	af
   080C 33            [ 6] 1302 	inc	sp
   080D DD 7E E8      [19] 1303 	ld	a,-24 (ix)
   0810 F5            [11] 1304 	push	af
   0811 33            [ 6] 1305 	inc	sp
   0812 FD E5         [15] 1306 	push	iy
   0814 C5            [11] 1307 	push	bc
   0815 CDr00r00      [17] 1308 	call	_cpct_drawSpriteMasked
   0818 D1            [10] 1309 	pop	de
                           1310 ;src/main.c:187: if(finish == 1) {return;}
   0819 DD 7E E6      [19] 1311 	ld	a,-26 (ix)
   081C 3D            [ 4] 1312 	dec	a
   081D C2r05r07      [10] 1313 	jp	NZ,00104$
   0820 DD 7E E7      [19] 1314 	ld	a,-25 (ix)
   0823 B7            [ 4] 1315 	or	a, a
   0824 C2r05r07      [10] 1316 	jp	NZ,00104$
   0827 DD F9         [10] 1317 	ld	sp, ix
   0829 DD E1         [14] 1318 	pop	ix
   082B C9            [10] 1319 	ret
                           1320 ;src/main.c:196: void loadMap(){
                           1321 ;	---------------------------------
                           1322 ; Function loadMap
                           1323 ; ---------------------------------
   082C                    1324 _loadMap::
                           1325 ;src/main.c:198: }
   082C C9            [10] 1326 	ret
                           1327 ;src/main.c:203: void main(void) {
                           1328 ;	---------------------------------
                           1329 ; Function main
                           1330 ; ---------------------------------
   082D                    1331 _main::
                           1332 ;src/main.c:205: init();
   082D CDr00r00      [17] 1333 	call	_init
                           1334 ;src/main.c:209: while(1){
   0830                    1335 00102$:
                           1336 ;src/main.c:210: menu();
   0830 CDrA9r02      [17] 1337 	call	_menu
                           1338 ;src/main.c:212: game();
   0833 CDr25r06      [17] 1339 	call	_game
   0836 18 F8         [12] 1340 	jr	00102$
                           1341 	.area _CODE
                           1342 	.area _INITIALIZER
                           1343 	.area _CABS (ABS)
