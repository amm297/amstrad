                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Sep 22 2015) (CYGWIN)
                              4 ; This file was generated Sun Oct  4 18:22:27 2015
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _game
                             14 	.globl _checkSprite
                             15 	.globl _checkCollisions
                             16 	.globl _menu
                             17 	.globl _init
                             18 	.globl _cpct_getScreenPtr
                             19 	.globl _cpct_setPalette
                             20 	.globl _cpct_fw2hw
                             21 	.globl _cpct_waitVSYNC
                             22 	.globl _cpct_setVideoMode
                             23 	.globl _cpct_drawStringM0
                             24 	.globl _cpct_drawSolidBox
                             25 	.globl _cpct_drawSpriteMasked
                             26 	.globl _cpct_isKeyPressed
                             27 	.globl _cpct_scanKeyboard_f
                             28 	.globl _cpct_memset
                             29 	.globl _cpct_disableFirmware
                             30 	.globl _g_palette
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; ram data
                             36 ;--------------------------------------------------------
                             37 	.area _DATA
                             38 ;--------------------------------------------------------
                             39 ; ram data
                             40 ;--------------------------------------------------------
                             41 	.area _INITIALIZED
                             42 ;--------------------------------------------------------
                             43 ; absolute external ram data
                             44 ;--------------------------------------------------------
                             45 	.area _DABS (ABS)
                             46 ;--------------------------------------------------------
                             47 ; global & static initialisations
                             48 ;--------------------------------------------------------
                             49 	.area _HOME
                             50 	.area _GSINIT
                             51 	.area _GSFINAL
                             52 	.area _GSINIT
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _HOME
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area _CODE
                             62 ;src/main.c:43: void init(){
                             63 ;	---------------------------------
                             64 ; Function init
                             65 ; ---------------------------------
   0000                      66 _init::
                             67 ;src/main.c:44: cpct_disableFirmware();
   0000 CDr00r00      [17]   68 	call	_cpct_disableFirmware
                             69 ;src/main.c:45: cpct_setVideoMode(0);
   0003 AF            [ 4]   70 	xor	a, a
   0004 F5            [11]   71 	push	af
   0005 33            [ 6]   72 	inc	sp
   0006 CDr00r00      [17]   73 	call	_cpct_setVideoMode
   0009 33            [ 6]   74 	inc	sp
                             75 ;src/main.c:46: cpct_fw2hw(g_palette,4);
   000A 11r25r00      [10]   76 	ld	de,#_g_palette
   000D 3E 04         [ 7]   77 	ld	a,#0x04
   000F F5            [11]   78 	push	af
   0010 33            [ 6]   79 	inc	sp
   0011 D5            [11]   80 	push	de
   0012 CDr00r00      [17]   81 	call	_cpct_fw2hw
   0015 F1            [10]   82 	pop	af
   0016 33            [ 6]   83 	inc	sp
                             84 ;src/main.c:47: cpct_setPalette(g_palette,4);
   0017 11r25r00      [10]   85 	ld	de,#_g_palette
   001A 3E 04         [ 7]   86 	ld	a,#0x04
   001C F5            [11]   87 	push	af
   001D 33            [ 6]   88 	inc	sp
   001E D5            [11]   89 	push	de
   001F CDr00r00      [17]   90 	call	_cpct_setPalette
   0022 F1            [10]   91 	pop	af
   0023 33            [ 6]   92 	inc	sp
   0024 C9            [10]   93 	ret
   0025                      94 _g_palette:
   0025 00                   95 	.db #0x00	; 0
   0026 1A                   96 	.db #0x1A	; 26
   0027 06                   97 	.db #0x06	; 6
   0028 12                   98 	.db #0x12	; 18
                             99 ;src/main.c:51: void menu(){
                            100 ;	---------------------------------
                            101 ; Function menu
                            102 ; ---------------------------------
   0029                     103 _menu::
                            104 ;src/main.c:53: cpct_clearScreen(0);
   0029 21 00 40      [10]  105 	ld	hl,#0x4000
   002C E5            [11]  106 	push	hl
   002D AF            [ 4]  107 	xor	a, a
   002E F5            [11]  108 	push	af
   002F 33            [ 6]  109 	inc	sp
   0030 26 C0         [ 7]  110 	ld	h, #0xC0
   0032 E5            [11]  111 	push	hl
   0033 CDr00r00      [17]  112 	call	_cpct_memset
                            113 ;src/main.c:55: memptr = cpct_getScreenPtr(VMEM,20,10);
   0036 21 14 0A      [10]  114 	ld	hl,#0x0A14
   0039 E5            [11]  115 	push	hl
   003A 21 00 C0      [10]  116 	ld	hl,#0xC000
   003D E5            [11]  117 	push	hl
   003E CDr00r00      [17]  118 	call	_cpct_getScreenPtr
                            119 ;src/main.c:56: cpct_drawStringM0("Super Menu",memptr,2,3);
   0041 EB            [ 4]  120 	ex	de,hl
   0042 01r7Er00      [10]  121 	ld	bc,#___str_0+0
   0045 21 02 03      [10]  122 	ld	hl,#0x0302
   0048 E5            [11]  123 	push	hl
   0049 D5            [11]  124 	push	de
   004A C5            [11]  125 	push	bc
   004B CDr00r00      [17]  126 	call	_cpct_drawStringM0
   004E 21 06 00      [10]  127 	ld	hl,#6
   0051 39            [11]  128 	add	hl,sp
   0052 F9            [ 6]  129 	ld	sp,hl
                            130 ;src/main.c:58: memptr = cpct_getScreenPtr(VMEM,18,180);
   0053 21 12 B4      [10]  131 	ld	hl,#0xB412
   0056 E5            [11]  132 	push	hl
   0057 21 00 C0      [10]  133 	ld	hl,#0xC000
   005A E5            [11]  134 	push	hl
   005B CDr00r00      [17]  135 	call	_cpct_getScreenPtr
                            136 ;src/main.c:59: cpct_drawStringM0("Pulsa Intro",memptr,4,5);
   005E EB            [ 4]  137 	ex	de,hl
   005F 01r89r00      [10]  138 	ld	bc,#___str_1+0
   0062 21 04 05      [10]  139 	ld	hl,#0x0504
   0065 E5            [11]  140 	push	hl
   0066 D5            [11]  141 	push	de
   0067 C5            [11]  142 	push	bc
   0068 CDr00r00      [17]  143 	call	_cpct_drawStringM0
   006B 21 06 00      [10]  144 	ld	hl,#6
   006E 39            [11]  145 	add	hl,sp
   006F F9            [ 6]  146 	ld	sp,hl
                            147 ;src/main.c:61: do{
   0070                     148 00101$:
                            149 ;src/main.c:62: cpct_scanKeyboard_f();
   0070 CDr00r00      [17]  150 	call	_cpct_scanKeyboard_f
                            151 ;src/main.c:63: }while(!cpct_isKeyPressed(Key_Enter));
   0073 21 00 40      [10]  152 	ld	hl,#0x4000
   0076 CDr00r00      [17]  153 	call	_cpct_isKeyPressed
   0079 7D            [ 4]  154 	ld	a,l
   007A B7            [ 4]  155 	or	a, a
   007B 28 F3         [12]  156 	jr	Z,00101$
   007D C9            [10]  157 	ret
   007E                     158 ___str_0:
   007E 53 75 70 65 72 20   159 	.ascii "Super Menu"
        4D 65 6E 75
   0088 00                  160 	.db 0x00
   0089                     161 ___str_1:
   0089 50 75 6C 73 61 20   162 	.ascii "Pulsa Intro"
        49 6E 74 72 6F
   0094 00                  163 	.db 0x00
                            164 ;src/main.c:68: u8* checkCollisions(u8 pX, u8 pY, u8 eX, u8 eY, u8* dir, u8* atk){
                            165 ;	---------------------------------
                            166 ; Function checkCollisions
                            167 ; ---------------------------------
   0095                     168 _checkCollisions::
   0095 DD E5         [15]  169 	push	ix
   0097 DD 21 00 00   [14]  170 	ld	ix,#0
   009B DD 39         [15]  171 	add	ix,sp
                            172 ;src/main.c:71: if(eX - pX > -1 && eX - pX < 11)
   009D DD 4E 06      [19]  173 	ld	c,6 (ix)
   00A0 06 00         [ 7]  174 	ld	b,#0x00
   00A2 DD 6E 04      [19]  175 	ld	l,4 (ix)
   00A5 26 00         [ 7]  176 	ld	h,#0x00
   00A7 79            [ 4]  177 	ld	a,c
   00A8 95            [ 4]  178 	sub	a, l
   00A9 5F            [ 4]  179 	ld	e,a
   00AA 78            [ 4]  180 	ld	a,b
   00AB 9C            [ 4]  181 	sbc	a, h
   00AC 57            [ 4]  182 	ld	d,a
                            183 ;src/main.c:69: if(atk >= 21)
   00AD DD 7E 0A      [19]  184 	ld	a,10 (ix)
   00B0 D6 15         [ 7]  185 	sub	a, #0x15
   00B2 DD 7E 0B      [19]  186 	ld	a,11 (ix)
   00B5 DE 00         [ 7]  187 	sbc	a, #0x00
   00B7 38 4F         [12]  188 	jr	C,00116$
                            189 ;src/main.c:70: if(dir == 0)
   00B9 DD 7E 09      [19]  190 	ld	a,9 (ix)
   00BC DD B6 08      [19]  191 	or	a,8 (ix)
   00BF 20 21         [12]  192 	jr	NZ,00110$
                            193 ;src/main.c:71: if(eX - pX > -1 && eX - pX < 11)
   00C1 3E FF         [ 7]  194 	ld	a,#0xFF
   00C3 BB            [ 4]  195 	cp	a, e
   00C4 9A            [ 4]  196 	sbc	a, d
   00C5 E2rCAr00      [10]  197 	jp	PO, 00152$
   00C8 EE 80         [ 7]  198 	xor	a, #0x80
   00CA                     199 00152$:
   00CA F2rDDr00      [10]  200 	jp	P,00102$
   00CD 7B            [ 4]  201 	ld	a,e
   00CE D6 0B         [ 7]  202 	sub	a, #0x0B
   00D0 7A            [ 4]  203 	ld	a,d
   00D1 17            [ 4]  204 	rla
   00D2 3F            [ 4]  205 	ccf
   00D3 1F            [ 4]  206 	rra
   00D4 DE 80         [ 7]  207 	sbc	a, #0x80
   00D6 30 05         [12]  208 	jr	NC,00102$
                            209 ;src/main.c:72: return 1;
   00D8 21 01 00      [10]  210 	ld	hl,#0x0001
   00DB 18 49         [12]  211 	jr	00118$
   00DD                     212 00102$:
                            213 ;src/main.c:74: return 0;
   00DD 21 00 00      [10]  214 	ld	hl,#0x0000
   00E0 18 44         [12]  215 	jr	00118$
   00E2                     216 00110$:
                            217 ;src/main.c:76: if(pX - eX > -1 && pX - eX < 11)
   00E2 BF            [ 4]  218 	cp	a, a
   00E3 ED 42         [15]  219 	sbc	hl, bc
   00E5 3E FF         [ 7]  220 	ld	a,#0xFF
   00E7 BD            [ 4]  221 	cp	a, l
   00E8 9C            [ 4]  222 	sbc	a, h
   00E9 E2rEEr00      [10]  223 	jp	PO, 00153$
   00EC EE 80         [ 7]  224 	xor	a, #0x80
   00EE                     225 00153$:
   00EE F2r03r01      [10]  226 	jp	P,00106$
   00F1 11 0B 80      [10]  227 	ld	de, #0x800B
   00F4 29            [11]  228 	add	hl, hl
   00F5 3F            [ 4]  229 	ccf
   00F6 CB 1C         [ 8]  230 	rr	h
   00F8 CB 1D         [ 8]  231 	rr	l
   00FA ED 52         [15]  232 	sbc	hl, de
   00FC 30 05         [12]  233 	jr	NC,00106$
                            234 ;src/main.c:77: return 1;
   00FE 21 01 00      [10]  235 	ld	hl,#0x0001
   0101 18 23         [12]  236 	jr	00118$
   0103                     237 00106$:
                            238 ;src/main.c:79: return 0;
   0103 21 00 00      [10]  239 	ld	hl,#0x0000
   0106 18 1E         [12]  240 	jr	00118$
   0108                     241 00116$:
                            242 ;src/main.c:81: if(eX - pX > 0 && eX - pX < 4)
   0108 AF            [ 4]  243 	xor	a, a
   0109 BB            [ 4]  244 	cp	a, e
   010A 9A            [ 4]  245 	sbc	a, d
   010B E2r10r01      [10]  246 	jp	PO, 00154$
   010E EE 80         [ 7]  247 	xor	a, #0x80
   0110                     248 00154$:
   0110 F2r23r01      [10]  249 	jp	P,00117$
   0113 7B            [ 4]  250 	ld	a,e
   0114 D6 04         [ 7]  251 	sub	a, #0x04
   0116 7A            [ 4]  252 	ld	a,d
   0117 17            [ 4]  253 	rla
   0118 3F            [ 4]  254 	ccf
   0119 1F            [ 4]  255 	rra
   011A DE 80         [ 7]  256 	sbc	a, #0x80
   011C 30 05         [12]  257 	jr	NC,00117$
                            258 ;src/main.c:82: return 2;
   011E 21 02 00      [10]  259 	ld	hl,#0x0002
   0121 18 03         [12]  260 	jr	00118$
   0123                     261 00117$:
                            262 ;src/main.c:84: return 0;
   0123 21 00 00      [10]  263 	ld	hl,#0x0000
   0126                     264 00118$:
   0126 DD E1         [14]  265 	pop	ix
   0128 C9            [10]  266 	ret
                            267 ;src/main.c:87: u8* checkSprite(u8* atk, u8* dir){
                            268 ;	---------------------------------
                            269 ; Function checkSprite
                            270 ; ---------------------------------
   0129                     271 _checkSprite::
                            272 ;src/main.c:88: if(atk <= 20)
   0129 3E 14         [ 7]  273 	ld	a,#0x14
   012B FD 21 02 00   [14]  274 	ld	iy,#2
   012F FD 39         [15]  275 	add	iy,sp
   0131 FD BE 00      [19]  276 	cp	a, 0 (iy)
   0134 3E 00         [ 7]  277 	ld	a,#0x00
   0136 FD 9E 01      [19]  278 	sbc	a, 1 (iy)
   0139 38 11         [12]  279 	jr	C,00108$
                            280 ;src/main.c:89: if(dir == 0)
   013B 21 05 00      [10]  281 	ld	hl, #4+1
   013E 39            [11]  282 	add	hl, sp
   013F 7E            [ 7]  283 	ld	a, (hl)
   0140 2B            [ 6]  284 	dec	hl
   0141 B6            [ 7]  285 	or	a,(hl)
   0142 20 04         [12]  286 	jr	NZ,00102$
                            287 ;src/main.c:90: return gladis_quieto_dcha;
   0144 21r00r00      [10]  288 	ld	hl,#_gladis_quieto_dcha
   0147 C9            [10]  289 	ret
   0148                     290 00102$:
                            291 ;src/main.c:92: return gladis_quieto_izda;
   0148 21r00r00      [10]  292 	ld	hl,#_gladis_quieto_izda
   014B C9            [10]  293 	ret
   014C                     294 00108$:
                            295 ;src/main.c:93: else if(dir == 0){
   014C 21 05 00      [10]  296 	ld	hl, #4+1
   014F 39            [11]  297 	add	hl, sp
   0150 7E            [ 7]  298 	ld	a, (hl)
   0151 2B            [ 6]  299 	dec	hl
   0152 B6            [ 7]  300 	or	a,(hl)
   0153 20 04         [12]  301 	jr	NZ,00105$
                            302 ;src/main.c:94: return gladis_atk_dcha;
   0155 21r00r00      [10]  303 	ld	hl,#_gladis_atk_dcha
   0158 C9            [10]  304 	ret
   0159                     305 00105$:
                            306 ;src/main.c:96: return gladis_atk_izda;
   0159 21r00r00      [10]  307 	ld	hl,#_gladis_atk_izda
   015C C9            [10]  308 	ret
                            309 ;src/main.c:102: void game(){
                            310 ;	---------------------------------
                            311 ; Function game
                            312 ; ---------------------------------
   015D                     313 _game::
   015D DD E5         [15]  314 	push	ix
   015F DD 21 00 00   [14]  315 	ld	ix,#0
   0163 DD 39         [15]  316 	add	ix,sp
   0165 21 DB FF      [10]  317 	ld	hl,#-37
   0168 39            [11]  318 	add	hl,sp
   0169 F9            [ 6]  319 	ld	sp,hl
                            320 ;src/main.c:103: TPlayer p = { 0,100,20,0,0,6 };
   016A 21 03 00      [10]  321 	ld	hl,#0x0003
   016D 39            [11]  322 	add	hl,sp
   016E 36 00         [10]  323 	ld	(hl),#0x00
   0170 21 03 00      [10]  324 	ld	hl,#0x0003
   0173 39            [11]  325 	add	hl,sp
   0174 DD 75 F8      [19]  326 	ld	-8 (ix),l
   0177 DD 74 F9      [19]  327 	ld	-7 (ix),h
   017A DD 7E F8      [19]  328 	ld	a,-8 (ix)
   017D C6 01         [ 7]  329 	add	a, #0x01
   017F DD 77 FC      [19]  330 	ld	-4 (ix),a
   0182 DD 7E F9      [19]  331 	ld	a,-7 (ix)
   0185 CE 00         [ 7]  332 	adc	a, #0x00
   0187 DD 77 FD      [19]  333 	ld	-3 (ix),a
   018A DD 6E FC      [19]  334 	ld	l,-4 (ix)
   018D DD 66 FD      [19]  335 	ld	h,-3 (ix)
   0190 36 64         [10]  336 	ld	(hl),#0x64
   0192 DD 7E F8      [19]  337 	ld	a,-8 (ix)
   0195 C6 02         [ 7]  338 	add	a, #0x02
   0197 DD 77 FE      [19]  339 	ld	-2 (ix),a
   019A DD 7E F9      [19]  340 	ld	a,-7 (ix)
   019D CE 00         [ 7]  341 	adc	a, #0x00
   019F DD 77 FF      [19]  342 	ld	-1 (ix),a
   01A2 DD 6E FE      [19]  343 	ld	l,-2 (ix)
   01A5 DD 66 FF      [19]  344 	ld	h,-1 (ix)
   01A8 36 14         [10]  345 	ld	(hl),#0x14
   01AA 23            [ 6]  346 	inc	hl
   01AB 36 00         [10]  347 	ld	(hl),#0x00
   01AD DD 7E F8      [19]  348 	ld	a,-8 (ix)
   01B0 C6 04         [ 7]  349 	add	a, #0x04
   01B2 DD 77 FA      [19]  350 	ld	-6 (ix),a
   01B5 DD 7E F9      [19]  351 	ld	a,-7 (ix)
   01B8 CE 00         [ 7]  352 	adc	a, #0x00
   01BA DD 77 FB      [19]  353 	ld	-5 (ix),a
   01BD DD 6E FA      [19]  354 	ld	l,-6 (ix)
   01C0 DD 66 FB      [19]  355 	ld	h,-5 (ix)
   01C3 AF            [ 4]  356 	xor	a, a
   01C4 77            [ 7]  357 	ld	(hl), a
   01C5 23            [ 6]  358 	inc	hl
   01C6 77            [ 7]  359 	ld	(hl), a
   01C7 DD 7E F8      [19]  360 	ld	a,-8 (ix)
   01CA C6 06         [ 7]  361 	add	a, #0x06
   01CC DD 77 F0      [19]  362 	ld	-16 (ix),a
   01CF DD 7E F9      [19]  363 	ld	a,-7 (ix)
   01D2 CE 00         [ 7]  364 	adc	a, #0x00
   01D4 DD 77 F1      [19]  365 	ld	-15 (ix),a
   01D7 DD 6E F0      [19]  366 	ld	l,-16 (ix)
   01DA DD 66 F1      [19]  367 	ld	h,-15 (ix)
   01DD AF            [ 4]  368 	xor	a, a
   01DE 77            [ 7]  369 	ld	(hl), a
   01DF 23            [ 6]  370 	inc	hl
   01E0 77            [ 7]  371 	ld	(hl), a
   01E1 DD 7E F8      [19]  372 	ld	a,-8 (ix)
   01E4 C6 08         [ 7]  373 	add	a, #0x08
   01E6 DD 77 EE      [19]  374 	ld	-18 (ix),a
   01E9 DD 7E F9      [19]  375 	ld	a,-7 (ix)
   01EC CE 00         [ 7]  376 	adc	a, #0x00
   01EE DD 77 EF      [19]  377 	ld	-17 (ix),a
   01F1 DD 6E EE      [19]  378 	ld	l,-18 (ix)
   01F4 DD 66 EF      [19]  379 	ld	h,-17 (ix)
   01F7 36 06         [10]  380 	ld	(hl),#0x06
   01F9 23            [ 6]  381 	inc	hl
   01FA 36 00         [10]  382 	ld	(hl),#0x00
                            383 ;src/main.c:104: TEnemy  e = { 55,100,0 };
   01FC 21 00 00      [10]  384 	ld	hl,#0x0000
   01FF 39            [11]  385 	add	hl,sp
   0200 36 37         [10]  386 	ld	(hl),#0x37
   0202 21 00 00      [10]  387 	ld	hl,#0x0000
   0205 39            [11]  388 	add	hl,sp
   0206 DD 75 EC      [19]  389 	ld	-20 (ix),l
   0209 DD 74 ED      [19]  390 	ld	-19 (ix),h
   020C DD 7E EC      [19]  391 	ld	a,-20 (ix)
   020F C6 01         [ 7]  392 	add	a, #0x01
   0211 DD 77 F2      [19]  393 	ld	-14 (ix),a
   0214 DD 7E ED      [19]  394 	ld	a,-19 (ix)
   0217 CE 00         [ 7]  395 	adc	a, #0x00
   0219 DD 77 F3      [19]  396 	ld	-13 (ix),a
   021C DD 6E F2      [19]  397 	ld	l,-14 (ix)
   021F DD 66 F3      [19]  398 	ld	h,-13 (ix)
   0222 36 64         [10]  399 	ld	(hl),#0x64
   0224 DD 7E EC      [19]  400 	ld	a,-20 (ix)
   0227 C6 02         [ 7]  401 	add	a, #0x02
   0229 DD 77 F6      [19]  402 	ld	-10 (ix),a
   022C DD 7E ED      [19]  403 	ld	a,-19 (ix)
   022F CE 00         [ 7]  404 	adc	a, #0x00
   0231 DD 77 F7      [19]  405 	ld	-9 (ix),a
   0234 DD 6E F6      [19]  406 	ld	l,-10 (ix)
   0237 DD 66 F7      [19]  407 	ld	h,-9 (ix)
   023A 36 00         [10]  408 	ld	(hl),#0x00
                            409 ;src/main.c:109: cpct_clearScreen(0);
   023C 21 00 40      [10]  410 	ld	hl,#0x4000
   023F E5            [11]  411 	push	hl
   0240 AF            [ 4]  412 	xor	a, a
   0241 F5            [11]  413 	push	af
   0242 33            [ 6]  414 	inc	sp
   0243 26 C0         [ 7]  415 	ld	h, #0xC0
   0245 E5            [11]  416 	push	hl
   0246 CDr00r00      [17]  417 	call	_cpct_memset
                            418 ;src/main.c:111: while (1){
   0249                     419 00151$:
                            420 ;src/main.c:114: cpct_waitVSYNC();
   0249 CDr00r00      [17]  421 	call	_cpct_waitVSYNC
                            422 ;src/main.c:117: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   024C DD 6E FC      [19]  423 	ld	l,-4 (ix)
   024F DD 66 FD      [19]  424 	ld	h,-3 (ix)
   0252 46            [ 7]  425 	ld	b,(hl)
   0253 DD 6E F8      [19]  426 	ld	l,-8 (ix)
   0256 DD 66 F9      [19]  427 	ld	h,-7 (ix)
   0259 4E            [ 7]  428 	ld	c, (hl)
   025A C5            [11]  429 	push	bc
   025B 21 00 C0      [10]  430 	ld	hl,#0xC000
   025E E5            [11]  431 	push	hl
   025F CDr00r00      [17]  432 	call	_cpct_getScreenPtr
   0262 EB            [ 4]  433 	ex	de,hl
                            434 ;src/main.c:118: if(p.atk <= 20)
   0263 DD 6E FE      [19]  435 	ld	l,-2 (ix)
   0266 DD 66 FF      [19]  436 	ld	h,-1 (ix)
   0269 46            [ 7]  437 	ld	b,(hl)
   026A 23            [ 6]  438 	inc	hl
   026B 66            [ 7]  439 	ld	h,(hl)
                            440 ;src/main.c:119: cpct_drawSolidBox(memptr,0,4,16);
                            441 ;src/main.c:118: if(p.atk <= 20)
   026C 3E 14         [ 7]  442 	ld	a,#0x14
   026E B8            [ 4]  443 	cp	a, b
   026F 3E 00         [ 7]  444 	ld	a,#0x00
   0271 9C            [ 4]  445 	sbc	a, h
   0272 38 10         [12]  446 	jr	C,00102$
                            447 ;src/main.c:119: cpct_drawSolidBox(memptr,0,4,16);
   0274 21 04 10      [10]  448 	ld	hl,#0x1004
   0277 E5            [11]  449 	push	hl
   0278 AF            [ 4]  450 	xor	a, a
   0279 F5            [11]  451 	push	af
   027A 33            [ 6]  452 	inc	sp
   027B D5            [11]  453 	push	de
   027C CDr00r00      [17]  454 	call	_cpct_drawSolidBox
   027F F1            [10]  455 	pop	af
   0280 F1            [10]  456 	pop	af
   0281 33            [ 6]  457 	inc	sp
   0282 18 0E         [12]  458 	jr	00103$
   0284                     459 00102$:
                            460 ;src/main.c:121: cpct_drawSolidBox(memptr,0,5,16);
   0284 21 05 10      [10]  461 	ld	hl,#0x1005
   0287 E5            [11]  462 	push	hl
   0288 AF            [ 4]  463 	xor	a, a
   0289 F5            [11]  464 	push	af
   028A 33            [ 6]  465 	inc	sp
   028B D5            [11]  466 	push	de
   028C CDr00r00      [17]  467 	call	_cpct_drawSolidBox
   028F F1            [10]  468 	pop	af
   0290 F1            [10]  469 	pop	af
   0291 33            [ 6]  470 	inc	sp
   0292                     471 00103$:
                            472 ;src/main.c:123: memptr = cpct_getScreenPtr(VMEM,e.x,e.y);
   0292 DD 6E F2      [19]  473 	ld	l,-14 (ix)
   0295 DD 66 F3      [19]  474 	ld	h,-13 (ix)
   0298 46            [ 7]  475 	ld	b,(hl)
   0299 DD 6E EC      [19]  476 	ld	l,-20 (ix)
   029C DD 66 ED      [19]  477 	ld	h,-19 (ix)
   029F 4E            [ 7]  478 	ld	c, (hl)
   02A0 C5            [11]  479 	push	bc
   02A1 21 00 C0      [10]  480 	ld	hl,#0xC000
   02A4 E5            [11]  481 	push	hl
   02A5 CDr00r00      [17]  482 	call	_cpct_getScreenPtr
   02A8 EB            [ 4]  483 	ex	de,hl
                            484 ;src/main.c:124: if(e.vivo == 0)
   02A9 DD 6E F6      [19]  485 	ld	l,-10 (ix)
   02AC DD 66 F7      [19]  486 	ld	h,-9 (ix)
   02AF 7E            [ 7]  487 	ld	a,(hl)
   02B0 B7            [ 4]  488 	or	a, a
   02B1 20 0E         [12]  489 	jr	NZ,00105$
                            490 ;src/main.c:125: cpct_drawSolidBox(memptr,0,4,16);
   02B3 21 04 10      [10]  491 	ld	hl,#0x1004
   02B6 E5            [11]  492 	push	hl
   02B7 AF            [ 4]  493 	xor	a, a
   02B8 F5            [11]  494 	push	af
   02B9 33            [ 6]  495 	inc	sp
   02BA D5            [11]  496 	push	de
   02BB CDr00r00      [17]  497 	call	_cpct_drawSolidBox
   02BE F1            [10]  498 	pop	af
   02BF F1            [10]  499 	pop	af
   02C0 33            [ 6]  500 	inc	sp
   02C1                     501 00105$:
                            502 ;src/main.c:128: if(p.col != 2){
   02C1 DD 6E F0      [19]  503 	ld	l,-16 (ix)
   02C4 DD 66 F1      [19]  504 	ld	h,-15 (ix)
   02C7 56            [ 7]  505 	ld	d,(hl)
   02C8 23            [ 6]  506 	inc	hl
   02C9 66            [ 7]  507 	ld	h,(hl)
   02CA 7A            [ 4]  508 	ld	a,d
   02CB D6 02         [ 7]  509 	sub	a,#0x02
   02CD 20 04         [12]  510 	jr	NZ,00247$
   02CF B4            [ 4]  511 	or	a,h
   02D0 CAr17r04      [10]  512 	jp	Z,00138$
   02D3                     513 00247$:
                            514 ;src/main.c:129: cpct_scanKeyboard_f();
   02D3 CDr00r00      [17]  515 	call	_cpct_scanKeyboard_f
                            516 ;src/main.c:130: if(cpct_isKeyPressed(Key_Space) && p.atk >= 20){
   02D6 21 05 80      [10]  517 	ld	hl,#0x8005
   02D9 CDr00r00      [17]  518 	call	_cpct_isKeyPressed
   02DC DD 75 EB      [19]  519 	ld	-21 (ix),l
                            520 ;src/main.c:118: if(p.atk <= 20)
   02DF DD 6E FE      [19]  521 	ld	l,-2 (ix)
   02E2 DD 66 FF      [19]  522 	ld	h,-1 (ix)
   02E5 7E            [ 7]  523 	ld	a,(hl)
   02E6 DD 77 F4      [19]  524 	ld	-12 (ix),a
   02E9 23            [ 6]  525 	inc	hl
   02EA 7E            [ 7]  526 	ld	a,(hl)
   02EB DD 77 F5      [19]  527 	ld	-11 (ix),a
                            528 ;src/main.c:130: if(cpct_isKeyPressed(Key_Space) && p.atk >= 20){
   02EE DD 7E F4      [19]  529 	ld	a,-12 (ix)
   02F1 D6 14         [ 7]  530 	sub	a, #0x14
   02F3 DD 7E F5      [19]  531 	ld	a,-11 (ix)
   02F6 DE 00         [ 7]  532 	sbc	a, #0x00
   02F8 3E 00         [ 7]  533 	ld	a,#0x00
   02FA 17            [ 4]  534 	rla
   02FB DD 77 EA      [19]  535 	ld	-22 (ix),a
                            536 ;src/main.c:134: p.atk += 1;
   02FE DD 7E F4      [19]  537 	ld	a,-12 (ix)
   0301 C6 01         [ 7]  538 	add	a, #0x01
   0303 DD 77 E8      [19]  539 	ld	-24 (ix),a
   0306 DD 7E F5      [19]  540 	ld	a,-11 (ix)
   0309 CE 00         [ 7]  541 	adc	a, #0x00
   030B DD 77 E9      [19]  542 	ld	-23 (ix),a
                            543 ;src/main.c:130: if(cpct_isKeyPressed(Key_Space) && p.atk >= 20){
   030E DD 7E EB      [19]  544 	ld	a,-21 (ix)
   0311 B7            [ 4]  545 	or	a, a
   0312 28 5D         [12]  546 	jr	Z,00132$
   0314 DD 7E EA      [19]  547 	ld	a,-22 (ix)
   0317 B7            [ 4]  548 	or	a, a
   0318 20 57         [12]  549 	jr	NZ,00132$
                            550 ;src/main.c:131: if(p.atk >= 50)
   031A DD 7E F4      [19]  551 	ld	a,-12 (ix)
   031D D6 32         [ 7]  552 	sub	a, #0x32
   031F DD 7E F5      [19]  553 	ld	a,-11 (ix)
   0322 DE 00         [ 7]  554 	sbc	a, #0x00
   0324 38 0C         [12]  555 	jr	C,00107$
                            556 ;src/main.c:132: p.atk = 0;
   0326 DD 6E FE      [19]  557 	ld	l,-2 (ix)
   0329 DD 66 FF      [19]  558 	ld	h,-1 (ix)
   032C AF            [ 4]  559 	xor	a, a
   032D 77            [ 7]  560 	ld	(hl), a
   032E 23            [ 6]  561 	inc	hl
   032F 77            [ 7]  562 	ld	(hl), a
   0330 18 0F         [12]  563 	jr	00108$
   0332                     564 00107$:
                            565 ;src/main.c:134: p.atk += 1;
   0332 DD 6E FE      [19]  566 	ld	l,-2 (ix)
   0335 DD 66 FF      [19]  567 	ld	h,-1 (ix)
   0338 DD 7E E8      [19]  568 	ld	a,-24 (ix)
   033B 77            [ 7]  569 	ld	(hl),a
   033C 23            [ 6]  570 	inc	hl
   033D DD 7E E9      [19]  571 	ld	a,-23 (ix)
   0340 77            [ 7]  572 	ld	(hl),a
   0341                     573 00108$:
                            574 ;src/main.c:135: if(cpct_isKeyPressed(Key_CursorRight))
   0341 21 00 02      [10]  575 	ld	hl,#0x0200
   0344 CDr00r00      [17]  576 	call	_cpct_isKeyPressed
   0347 7D            [ 4]  577 	ld	a,l
   0348 B7            [ 4]  578 	or	a, a
   0349 28 0D         [12]  579 	jr	Z,00112$
                            580 ;src/main.c:136: p.dir = 0;
   034B DD 6E FA      [19]  581 	ld	l,-6 (ix)
   034E DD 66 FB      [19]  582 	ld	h,-5 (ix)
   0351 AF            [ 4]  583 	xor	a, a
   0352 77            [ 7]  584 	ld	(hl), a
   0353 23            [ 6]  585 	inc	hl
   0354 77            [ 7]  586 	ld	(hl), a
   0355 C3r54r04      [10]  587 	jp	00139$
   0358                     588 00112$:
                            589 ;src/main.c:137: else if(cpct_isKeyPressed(Key_CursorLeft))
   0358 21 01 01      [10]  590 	ld	hl,#0x0101
   035B CDr00r00      [17]  591 	call	_cpct_isKeyPressed
   035E 7D            [ 4]  592 	ld	a,l
   035F B7            [ 4]  593 	or	a, a
   0360 CAr54r04      [10]  594 	jp	Z,00139$
                            595 ;src/main.c:138: p.dir = 1;
   0363 DD 6E FA      [19]  596 	ld	l,-6 (ix)
   0366 DD 66 FB      [19]  597 	ld	h,-5 (ix)
   0369 36 01         [10]  598 	ld	(hl),#0x01
   036B 23            [ 6]  599 	inc	hl
   036C 36 00         [10]  600 	ld	(hl),#0x00
   036E C3r54r04      [10]  601 	jp	00139$
   0371                     602 00132$:
                            603 ;src/main.c:140: if(p.atk < 20)
   0371 DD 7E EA      [19]  604 	ld	a,-22 (ix)
   0374 B7            [ 4]  605 	or	a, a
   0375 28 11         [12]  606 	jr	Z,00115$
                            607 ;src/main.c:141: p.atk += 1;
   0377 DD 6E FE      [19]  608 	ld	l,-2 (ix)
   037A DD 66 FF      [19]  609 	ld	h,-1 (ix)
   037D DD 7E E8      [19]  610 	ld	a,-24 (ix)
   0380 77            [ 7]  611 	ld	(hl),a
   0381 23            [ 6]  612 	inc	hl
   0382 DD 7E E9      [19]  613 	ld	a,-23 (ix)
   0385 77            [ 7]  614 	ld	(hl),a
   0386 18 0B         [12]  615 	jr	00116$
   0388                     616 00115$:
                            617 ;src/main.c:143: p.atk = 20;
   0388 DD 6E FE      [19]  618 	ld	l,-2 (ix)
   038B DD 66 FF      [19]  619 	ld	h,-1 (ix)
   038E 36 14         [10]  620 	ld	(hl),#0x14
   0390 23            [ 6]  621 	inc	hl
   0391 36 00         [10]  622 	ld	(hl),#0x00
   0393                     623 00116$:
                            624 ;src/main.c:144: if(cpct_isKeyPressed(Key_CursorRight) && p.x < 76 ){
   0393 21 00 02      [10]  625 	ld	hl,#0x0200
   0396 CDr00r00      [17]  626 	call	_cpct_isKeyPressed
   0399 7D            [ 4]  627 	ld	a,l
   039A B7            [ 4]  628 	or	a, a
   039B 28 32         [12]  629 	jr	Z,00128$
   039D DD 6E F8      [19]  630 	ld	l,-8 (ix)
   03A0 DD 66 F9      [19]  631 	ld	h,-7 (ix)
   03A3 56            [ 7]  632 	ld	d,(hl)
   03A4 7A            [ 4]  633 	ld	a,d
   03A5 D6 4C         [ 7]  634 	sub	a, #0x4C
   03A7 30 26         [12]  635 	jr	NC,00128$
                            636 ;src/main.c:145: if(p.col != 2)
   03A9 DD 6E F0      [19]  637 	ld	l,-16 (ix)
   03AC DD 66 F1      [19]  638 	ld	h,-15 (ix)
   03AF 5E            [ 7]  639 	ld	e,(hl)
   03B0 23            [ 6]  640 	inc	hl
   03B1 66            [ 7]  641 	ld	h,(hl)
   03B2 7B            [ 4]  642 	ld	a,e
   03B3 D6 02         [ 7]  643 	sub	a,#0x02
   03B5 20 03         [12]  644 	jr	NZ,00248$
   03B7 B4            [ 4]  645 	or	a,h
   03B8 28 08         [12]  646 	jr	Z,00118$
   03BA                     647 00248$:
                            648 ;src/main.c:146: p.x += 1;
   03BA 14            [ 4]  649 	inc	d
   03BB DD 6E F8      [19]  650 	ld	l,-8 (ix)
   03BE DD 66 F9      [19]  651 	ld	h,-7 (ix)
   03C1 72            [ 7]  652 	ld	(hl),d
   03C2                     653 00118$:
                            654 ;src/main.c:147: p.dir = 0;
   03C2 DD 6E FA      [19]  655 	ld	l,-6 (ix)
   03C5 DD 66 FB      [19]  656 	ld	h,-5 (ix)
   03C8 AF            [ 4]  657 	xor	a, a
   03C9 77            [ 7]  658 	ld	(hl), a
   03CA 23            [ 6]  659 	inc	hl
   03CB 77            [ 7]  660 	ld	(hl), a
   03CC C3r54r04      [10]  661 	jp	00139$
   03CF                     662 00128$:
                            663 ;src/main.c:148: }else if(cpct_isKeyPressed(Key_CursorLeft) && p.x > 0 ){
   03CF 21 01 01      [10]  664 	ld	hl,#0x0101
   03D2 CDr00r00      [17]  665 	call	_cpct_isKeyPressed
   03D5 7D            [ 4]  666 	ld	a,l
   03D6 B7            [ 4]  667 	or	a, a
   03D7 28 31         [12]  668 	jr	Z,00124$
   03D9 DD 6E F8      [19]  669 	ld	l,-8 (ix)
   03DC DD 66 F9      [19]  670 	ld	h,-7 (ix)
   03DF 56            [ 7]  671 	ld	d,(hl)
   03E0 7A            [ 4]  672 	ld	a,d
   03E1 B7            [ 4]  673 	or	a, a
   03E2 28 26         [12]  674 	jr	Z,00124$
                            675 ;src/main.c:149: if(p.col != 2)
   03E4 DD 6E F0      [19]  676 	ld	l,-16 (ix)
   03E7 DD 66 F1      [19]  677 	ld	h,-15 (ix)
   03EA 5E            [ 7]  678 	ld	e,(hl)
   03EB 23            [ 6]  679 	inc	hl
   03EC 66            [ 7]  680 	ld	h,(hl)
   03ED 7B            [ 4]  681 	ld	a,e
   03EE D6 02         [ 7]  682 	sub	a,#0x02
   03F0 20 03         [12]  683 	jr	NZ,00249$
   03F2 B4            [ 4]  684 	or	a,h
   03F3 28 08         [12]  685 	jr	Z,00120$
   03F5                     686 00249$:
                            687 ;src/main.c:150: p.x -= 1;
   03F5 15            [ 4]  688 	dec	d
   03F6 DD 6E F8      [19]  689 	ld	l,-8 (ix)
   03F9 DD 66 F9      [19]  690 	ld	h,-7 (ix)
   03FC 72            [ 7]  691 	ld	(hl),d
   03FD                     692 00120$:
                            693 ;src/main.c:151: p.dir = 1;
   03FD DD 6E FA      [19]  694 	ld	l,-6 (ix)
   0400 DD 66 FB      [19]  695 	ld	h,-5 (ix)
   0403 36 01         [10]  696 	ld	(hl),#0x01
   0405 23            [ 6]  697 	inc	hl
   0406 36 00         [10]  698 	ld	(hl),#0x00
   0408 18 4A         [12]  699 	jr	00139$
   040A                     700 00124$:
                            701 ;src/main.c:152: }else  if(cpct_isKeyPressed(Key_Esc)){
   040A 21 08 04      [10]  702 	ld	hl,#0x0408
   040D CDr00r00      [17]  703 	call	_cpct_isKeyPressed
   0410 7D            [ 4]  704 	ld	a,l
   0411 B7            [ 4]  705 	or	a, a
   0412 28 40         [12]  706 	jr	Z,00139$
                            707 ;src/main.c:153: return;
   0414 C3r8Ar05      [10]  708 	jp	00153$
   0417                     709 00138$:
                            710 ;src/main.c:157: p.x -= 2;
   0417 DD 6E F8      [19]  711 	ld	l,-8 (ix)
   041A DD 66 F9      [19]  712 	ld	h,-7 (ix)
   041D 7E            [ 7]  713 	ld	a,(hl)
   041E C6 FE         [ 7]  714 	add	a,#0xFE
   0420 DD 6E F8      [19]  715 	ld	l,-8 (ix)
   0423 DD 66 F9      [19]  716 	ld	h,-7 (ix)
   0426 77            [ 7]  717 	ld	(hl),a
                            718 ;src/main.c:158: p.rebote -= 2;
   0427 DD 6E EE      [19]  719 	ld	l,-18 (ix)
   042A DD 66 EF      [19]  720 	ld	h,-17 (ix)
   042D 5E            [ 7]  721 	ld	e,(hl)
   042E 23            [ 6]  722 	inc	hl
   042F 56            [ 7]  723 	ld	d,(hl)
   0430 1B            [ 6]  724 	dec	de
   0431 1B            [ 6]  725 	dec	de
   0432 DD 6E EE      [19]  726 	ld	l,-18 (ix)
   0435 DD 66 EF      [19]  727 	ld	h,-17 (ix)
   0438 73            [ 7]  728 	ld	(hl),e
   0439 23            [ 6]  729 	inc	hl
   043A 72            [ 7]  730 	ld	(hl),d
                            731 ;src/main.c:159: if(p.rebote == 0){
   043B 7A            [ 4]  732 	ld	a,d
   043C B3            [ 4]  733 	or	a,e
   043D 20 15         [12]  734 	jr	NZ,00139$
                            735 ;src/main.c:160: p.rebote = 6;
   043F DD 6E EE      [19]  736 	ld	l,-18 (ix)
   0442 DD 66 EF      [19]  737 	ld	h,-17 (ix)
   0445 36 06         [10]  738 	ld	(hl),#0x06
   0447 23            [ 6]  739 	inc	hl
   0448 36 00         [10]  740 	ld	(hl),#0x00
                            741 ;src/main.c:161: p.col = 0;
   044A DD 6E F0      [19]  742 	ld	l,-16 (ix)
   044D DD 66 F1      [19]  743 	ld	h,-15 (ix)
   0450 AF            [ 4]  744 	xor	a, a
   0451 77            [ 7]  745 	ld	(hl), a
   0452 23            [ 6]  746 	inc	hl
   0453 77            [ 7]  747 	ld	(hl), a
   0454                     748 00139$:
                            749 ;src/main.c:166: sprite = checkSprite(p.atk,p.dir);
   0454 DD 6E FA      [19]  750 	ld	l,-6 (ix)
   0457 DD 66 FB      [19]  751 	ld	h,-5 (ix)
   045A 4E            [ 7]  752 	ld	c,(hl)
   045B 23            [ 6]  753 	inc	hl
   045C 46            [ 7]  754 	ld	b,(hl)
   045D DD 6E FE      [19]  755 	ld	l,-2 (ix)
   0460 DD 66 FF      [19]  756 	ld	h,-1 (ix)
   0463 5E            [ 7]  757 	ld	e,(hl)
   0464 23            [ 6]  758 	inc	hl
   0465 56            [ 7]  759 	ld	d,(hl)
   0466 C5            [11]  760 	push	bc
   0467 D5            [11]  761 	push	de
   0468 CDr29r01      [17]  762 	call	_checkSprite
   046B F1            [10]  763 	pop	af
   046C F1            [10]  764 	pop	af
   046D 4D            [ 4]  765 	ld	c, l
   046E 44            [ 4]  766 	ld	b, h
                            767 ;src/main.c:168: if(p.col != 2 && e.vivo == 0)
   046F DD 6E F0      [19]  768 	ld	l,-16 (ix)
   0472 DD 66 F1      [19]  769 	ld	h,-15 (ix)
   0475 56            [ 7]  770 	ld	d,(hl)
   0476 23            [ 6]  771 	inc	hl
   0477 66            [ 7]  772 	ld	h,(hl)
   0478 7A            [ 4]  773 	ld	a,d
   0479 D6 02         [ 7]  774 	sub	a,#0x02
   047B 20 03         [12]  775 	jr	NZ,00250$
   047D B4            [ 4]  776 	or	a,h
   047E 28 7B         [12]  777 	jr	Z,00141$
   0480                     778 00250$:
   0480 DD 6E F6      [19]  779 	ld	l,-10 (ix)
   0483 DD 66 F7      [19]  780 	ld	h,-9 (ix)
   0486 7E            [ 7]  781 	ld	a,(hl)
   0487 B7            [ 4]  782 	or	a, a
   0488 20 71         [12]  783 	jr	NZ,00141$
                            784 ;src/main.c:169: p.col = checkCollisions(p.x,p.y,e.x,e.y,p.dir,p.atk);
   048A DD 6E FE      [19]  785 	ld	l,-2 (ix)
   048D DD 66 FF      [19]  786 	ld	h,-1 (ix)
   0490 7E            [ 7]  787 	ld	a,(hl)
   0491 DD 77 E8      [19]  788 	ld	-24 (ix),a
   0494 23            [ 6]  789 	inc	hl
   0495 7E            [ 7]  790 	ld	a,(hl)
   0496 DD 77 E9      [19]  791 	ld	-23 (ix),a
   0499 DD 6E FA      [19]  792 	ld	l,-6 (ix)
   049C DD 66 FB      [19]  793 	ld	h,-5 (ix)
   049F 7E            [ 7]  794 	ld	a,(hl)
   04A0 DD 77 F4      [19]  795 	ld	-12 (ix),a
   04A3 23            [ 6]  796 	inc	hl
   04A4 7E            [ 7]  797 	ld	a,(hl)
   04A5 DD 77 F5      [19]  798 	ld	-11 (ix),a
   04A8 DD 6E F2      [19]  799 	ld	l,-14 (ix)
   04AB DD 66 F3      [19]  800 	ld	h,-13 (ix)
   04AE 5E            [ 7]  801 	ld	e,(hl)
   04AF DD 6E EC      [19]  802 	ld	l,-20 (ix)
   04B2 DD 66 ED      [19]  803 	ld	h,-19 (ix)
   04B5 7E            [ 7]  804 	ld	a,(hl)
   04B6 DD 77 EA      [19]  805 	ld	-22 (ix),a
   04B9 DD 6E FC      [19]  806 	ld	l,-4 (ix)
   04BC DD 66 FD      [19]  807 	ld	h,-3 (ix)
   04BF 7E            [ 7]  808 	ld	a,(hl)
   04C0 DD 77 EB      [19]  809 	ld	-21 (ix),a
   04C3 DD 6E F8      [19]  810 	ld	l,-8 (ix)
   04C6 DD 66 F9      [19]  811 	ld	h,-7 (ix)
   04C9 56            [ 7]  812 	ld	d,(hl)
   04CA C5            [11]  813 	push	bc
   04CB DD 6E E8      [19]  814 	ld	l,-24 (ix)
   04CE DD 66 E9      [19]  815 	ld	h,-23 (ix)
   04D1 E5            [11]  816 	push	hl
   04D2 DD 6E F4      [19]  817 	ld	l,-12 (ix)
   04D5 DD 66 F5      [19]  818 	ld	h,-11 (ix)
   04D8 E5            [11]  819 	push	hl
   04D9 7B            [ 4]  820 	ld	a,e
   04DA F5            [11]  821 	push	af
   04DB 33            [ 6]  822 	inc	sp
   04DC DD 7E EA      [19]  823 	ld	a,-22 (ix)
   04DF F5            [11]  824 	push	af
   04E0 33            [ 6]  825 	inc	sp
   04E1 DD 7E EB      [19]  826 	ld	a,-21 (ix)
   04E4 F5            [11]  827 	push	af
   04E5 33            [ 6]  828 	inc	sp
   04E6 D5            [11]  829 	push	de
   04E7 33            [ 6]  830 	inc	sp
   04E8 CDr95r00      [17]  831 	call	_checkCollisions
   04EB F1            [10]  832 	pop	af
   04EC F1            [10]  833 	pop	af
   04ED F1            [10]  834 	pop	af
   04EE F1            [10]  835 	pop	af
   04EF 55            [ 4]  836 	ld	d,l
   04F0 5C            [ 4]  837 	ld	e,h
   04F1 C1            [10]  838 	pop	bc
   04F2 DD 6E F0      [19]  839 	ld	l,-16 (ix)
   04F5 DD 66 F1      [19]  840 	ld	h,-15 (ix)
   04F8 72            [ 7]  841 	ld	(hl),d
   04F9 23            [ 6]  842 	inc	hl
   04FA 73            [ 7]  843 	ld	(hl),e
   04FB                     844 00141$:
                            845 ;src/main.c:170: if(p.col == 1)
   04FB DD 6E F0      [19]  846 	ld	l,-16 (ix)
   04FE DD 66 F1      [19]  847 	ld	h,-15 (ix)
   0501 56            [ 7]  848 	ld	d,(hl)
   0502 23            [ 6]  849 	inc	hl
   0503 66            [ 7]  850 	ld	h,(hl)
   0504 15            [ 4]  851 	dec	d
   0505 20 0C         [12]  852 	jr	NZ,00144$
   0507 7C            [ 4]  853 	ld	a,h
   0508 B7            [ 4]  854 	or	a, a
   0509 20 08         [12]  855 	jr	NZ,00144$
                            856 ;src/main.c:171: e.vivo = 1;
   050B DD 6E F6      [19]  857 	ld	l,-10 (ix)
   050E DD 66 F7      [19]  858 	ld	h,-9 (ix)
   0511 36 01         [10]  859 	ld	(hl),#0x01
   0513                     860 00144$:
                            861 ;src/main.c:174: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   0513 DD 6E FC      [19]  862 	ld	l,-4 (ix)
   0516 DD 66 FD      [19]  863 	ld	h,-3 (ix)
   0519 56            [ 7]  864 	ld	d,(hl)
   051A DD 6E F8      [19]  865 	ld	l,-8 (ix)
   051D DD 66 F9      [19]  866 	ld	h,-7 (ix)
   0520 7E            [ 7]  867 	ld	a,(hl)
   0521 C5            [11]  868 	push	bc
   0522 D5            [11]  869 	push	de
   0523 33            [ 6]  870 	inc	sp
   0524 F5            [11]  871 	push	af
   0525 33            [ 6]  872 	inc	sp
   0526 21 00 C0      [10]  873 	ld	hl,#0xC000
   0529 E5            [11]  874 	push	hl
   052A CDr00r00      [17]  875 	call	_cpct_getScreenPtr
   052D C1            [10]  876 	pop	bc
   052E EB            [ 4]  877 	ex	de,hl
                            878 ;src/main.c:177: if(p.atk >= 21)
   052F DD 6E FE      [19]  879 	ld	l,-2 (ix)
   0532 DD 66 FF      [19]  880 	ld	h,-1 (ix)
   0535 7E            [ 7]  881 	ld	a, (hl)
   0536 23            [ 6]  882 	inc	hl
   0537 6E            [ 7]  883 	ld	l,(hl)
                            884 ;src/main.c:119: cpct_drawSolidBox(memptr,0,4,16);
                            885 ;src/main.c:178: cpct_drawSpriteMasked(sprite, memptr, 5, 16);
                            886 ;src/main.c:177: if(p.atk >= 21)
   0538 D6 15         [ 7]  887 	sub	a, #0x15
   053A 7D            [ 4]  888 	ld	a,l
   053B DE 00         [ 7]  889 	sbc	a, #0x00
   053D 38 0B         [12]  890 	jr	C,00146$
                            891 ;src/main.c:178: cpct_drawSpriteMasked(sprite, memptr, 5, 16);
   053F 21 05 10      [10]  892 	ld	hl,#0x1005
   0542 E5            [11]  893 	push	hl
   0543 D5            [11]  894 	push	de
   0544 C5            [11]  895 	push	bc
   0545 CDr00r00      [17]  896 	call	_cpct_drawSpriteMasked
   0548 18 09         [12]  897 	jr	00147$
   054A                     898 00146$:
                            899 ;src/main.c:180: cpct_drawSpriteMasked(sprite, memptr, 4, 16);
   054A 21 04 10      [10]  900 	ld	hl,#0x1004
   054D E5            [11]  901 	push	hl
   054E D5            [11]  902 	push	de
   054F C5            [11]  903 	push	bc
   0550 CDr00r00      [17]  904 	call	_cpct_drawSpriteMasked
   0553                     905 00147$:
                            906 ;src/main.c:183: if(e.vivo == 0){
   0553 DD 6E F6      [19]  907 	ld	l,-10 (ix)
   0556 DD 66 F7      [19]  908 	ld	h,-9 (ix)
   0559 7E            [ 7]  909 	ld	a,(hl)
   055A B7            [ 4]  910 	or	a, a
   055B C2r49r02      [10]  911 	jp	NZ,00151$
                            912 ;src/main.c:184: memptr = cpct_getScreenPtr(VMEM,e.x,e.y);
   055E DD 6E F2      [19]  913 	ld	l,-14 (ix)
   0561 DD 66 F3      [19]  914 	ld	h,-13 (ix)
   0564 56            [ 7]  915 	ld	d,(hl)
   0565 DD 6E EC      [19]  916 	ld	l,-20 (ix)
   0568 DD 66 ED      [19]  917 	ld	h,-19 (ix)
   056B 46            [ 7]  918 	ld	b,(hl)
   056C D5            [11]  919 	push	de
   056D 33            [ 6]  920 	inc	sp
   056E C5            [11]  921 	push	bc
   056F 33            [ 6]  922 	inc	sp
   0570 21 00 C0      [10]  923 	ld	hl,#0xC000
   0573 E5            [11]  924 	push	hl
   0574 CDr00r00      [17]  925 	call	_cpct_getScreenPtr
                            926 ;src/main.c:185: cpct_drawSolidBox(memptr, 18, 4, 16);
   0577 EB            [ 4]  927 	ex	de,hl
   0578 21 04 10      [10]  928 	ld	hl,#0x1004
   057B E5            [11]  929 	push	hl
   057C 3E 12         [ 7]  930 	ld	a,#0x12
   057E F5            [11]  931 	push	af
   057F 33            [ 6]  932 	inc	sp
   0580 D5            [11]  933 	push	de
   0581 CDr00r00      [17]  934 	call	_cpct_drawSolidBox
   0584 F1            [10]  935 	pop	af
   0585 F1            [10]  936 	pop	af
   0586 33            [ 6]  937 	inc	sp
   0587 C3r49r02      [10]  938 	jp	00151$
   058A                     939 00153$:
   058A DD F9         [10]  940 	ld	sp, ix
   058C DD E1         [14]  941 	pop	ix
   058E C9            [10]  942 	ret
                            943 ;src/main.c:192: void main(void) {
                            944 ;	---------------------------------
                            945 ; Function main
                            946 ; ---------------------------------
   058F                     947 _main::
                            948 ;src/main.c:194: init();
   058F CDr00r00      [17]  949 	call	_init
                            950 ;src/main.c:197: while(1){
   0592                     951 00102$:
                            952 ;src/main.c:198: menu();
   0592 CDr29r00      [17]  953 	call	_menu
                            954 ;src/main.c:199: game();
   0595 CDr5Dr01      [17]  955 	call	_game
   0598 18 F8         [12]  956 	jr	00102$
                            957 	.area _CODE
                            958 	.area _INITIALIZER
                            959 	.area _CABS (ABS)
