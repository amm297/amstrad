                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Sep 22 2015) (CYGWIN)
                              4 ; This file was generated Tue Oct  6 10:25:41 2015
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _game
                             14 	.globl _drawVida
                             15 	.globl _drawFatiga
                             16 	.globl _checkSprite
                             17 	.globl _checkCollisions
                             18 	.globl _menu
                             19 	.globl _init
                             20 	.globl _cpct_getScreenPtr
                             21 	.globl _cpct_setPalette
                             22 	.globl _cpct_fw2hw
                             23 	.globl _cpct_waitVSYNC
                             24 	.globl _cpct_setVideoMode
                             25 	.globl _cpct_drawStringM0
                             26 	.globl _cpct_drawSolidBox
                             27 	.globl _cpct_drawSpriteMasked
                             28 	.globl _cpct_isKeyPressed
                             29 	.globl _cpct_scanKeyboard_f
                             30 	.globl _cpct_memset
                             31 	.globl _cpct_disableFirmware
                             32 	.globl _g_palette
                             33 ;--------------------------------------------------------
                             34 ; special function registers
                             35 ;--------------------------------------------------------
                             36 ;--------------------------------------------------------
                             37 ; ram data
                             38 ;--------------------------------------------------------
                             39 	.area _DATA
                             40 ;--------------------------------------------------------
                             41 ; ram data
                             42 ;--------------------------------------------------------
                             43 	.area _INITIALIZED
                             44 ;--------------------------------------------------------
                             45 ; absolute external ram data
                             46 ;--------------------------------------------------------
                             47 	.area _DABS (ABS)
                             48 ;--------------------------------------------------------
                             49 ; global & static initialisations
                             50 ;--------------------------------------------------------
                             51 	.area _HOME
                             52 	.area _GSINIT
                             53 	.area _GSFINAL
                             54 	.area _GSINIT
                             55 ;--------------------------------------------------------
                             56 ; Home
                             57 ;--------------------------------------------------------
                             58 	.area _HOME
                             59 	.area _HOME
                             60 ;--------------------------------------------------------
                             61 ; code
                             62 ;--------------------------------------------------------
                             63 	.area _CODE
                             64 ;src/main.c:48: void init(){
                             65 ;	---------------------------------
                             66 ; Function init
                             67 ; ---------------------------------
   0000                      68 _init::
                             69 ;src/main.c:49: cpct_disableFirmware();
   0000 CDr00r00      [17]   70 	call	_cpct_disableFirmware
                             71 ;src/main.c:50: cpct_setVideoMode(0);
   0003 AF            [ 4]   72 	xor	a, a
   0004 F5            [11]   73 	push	af
   0005 33            [ 6]   74 	inc	sp
   0006 CDr00r00      [17]   75 	call	_cpct_setVideoMode
   0009 33            [ 6]   76 	inc	sp
                             77 ;src/main.c:51: cpct_fw2hw(g_palette,4);
   000A 11r25r00      [10]   78 	ld	de,#_g_palette
   000D 3E 04         [ 7]   79 	ld	a,#0x04
   000F F5            [11]   80 	push	af
   0010 33            [ 6]   81 	inc	sp
   0011 D5            [11]   82 	push	de
   0012 CDr00r00      [17]   83 	call	_cpct_fw2hw
   0015 F1            [10]   84 	pop	af
   0016 33            [ 6]   85 	inc	sp
                             86 ;src/main.c:52: cpct_setPalette(g_palette,4);
   0017 11r25r00      [10]   87 	ld	de,#_g_palette
   001A 3E 04         [ 7]   88 	ld	a,#0x04
   001C F5            [11]   89 	push	af
   001D 33            [ 6]   90 	inc	sp
   001E D5            [11]   91 	push	de
   001F CDr00r00      [17]   92 	call	_cpct_setPalette
   0022 F1            [10]   93 	pop	af
   0023 33            [ 6]   94 	inc	sp
   0024 C9            [10]   95 	ret
   0025                      96 _g_palette:
   0025 00                   97 	.db #0x00	; 0
   0026 1A                   98 	.db #0x1A	; 26
   0027 06                   99 	.db #0x06	; 6
   0028 12                  100 	.db #0x12	; 18
                            101 ;src/main.c:56: void menu(){
                            102 ;	---------------------------------
                            103 ; Function menu
                            104 ; ---------------------------------
   0029                     105 _menu::
                            106 ;src/main.c:58: cpct_clearScreen(0);
   0029 21 00 40      [10]  107 	ld	hl,#0x4000
   002C E5            [11]  108 	push	hl
   002D AF            [ 4]  109 	xor	a, a
   002E F5            [11]  110 	push	af
   002F 33            [ 6]  111 	inc	sp
   0030 26 C0         [ 7]  112 	ld	h, #0xC0
   0032 E5            [11]  113 	push	hl
   0033 CDr00r00      [17]  114 	call	_cpct_memset
                            115 ;src/main.c:60: memptr = cpct_getScreenPtr(VMEM,20,10);
   0036 21 14 0A      [10]  116 	ld	hl,#0x0A14
   0039 E5            [11]  117 	push	hl
   003A 21 00 C0      [10]  118 	ld	hl,#0xC000
   003D E5            [11]  119 	push	hl
   003E CDr00r00      [17]  120 	call	_cpct_getScreenPtr
                            121 ;src/main.c:61: cpct_drawStringM0("Super Menu",memptr,2,3);
   0041 EB            [ 4]  122 	ex	de,hl
   0042 01r7Er00      [10]  123 	ld	bc,#___str_0+0
   0045 21 02 03      [10]  124 	ld	hl,#0x0302
   0048 E5            [11]  125 	push	hl
   0049 D5            [11]  126 	push	de
   004A C5            [11]  127 	push	bc
   004B CDr00r00      [17]  128 	call	_cpct_drawStringM0
   004E 21 06 00      [10]  129 	ld	hl,#6
   0051 39            [11]  130 	add	hl,sp
   0052 F9            [ 6]  131 	ld	sp,hl
                            132 ;src/main.c:63: memptr = cpct_getScreenPtr(VMEM,18,180);
   0053 21 12 B4      [10]  133 	ld	hl,#0xB412
   0056 E5            [11]  134 	push	hl
   0057 21 00 C0      [10]  135 	ld	hl,#0xC000
   005A E5            [11]  136 	push	hl
   005B CDr00r00      [17]  137 	call	_cpct_getScreenPtr
                            138 ;src/main.c:64: cpct_drawStringM0("Pulsa Intro",memptr,4,5);
   005E EB            [ 4]  139 	ex	de,hl
   005F 01r89r00      [10]  140 	ld	bc,#___str_1+0
   0062 21 04 05      [10]  141 	ld	hl,#0x0504
   0065 E5            [11]  142 	push	hl
   0066 D5            [11]  143 	push	de
   0067 C5            [11]  144 	push	bc
   0068 CDr00r00      [17]  145 	call	_cpct_drawStringM0
   006B 21 06 00      [10]  146 	ld	hl,#6
   006E 39            [11]  147 	add	hl,sp
   006F F9            [ 6]  148 	ld	sp,hl
                            149 ;src/main.c:66: do{
   0070                     150 00101$:
                            151 ;src/main.c:67: cpct_scanKeyboard_f();
   0070 CDr00r00      [17]  152 	call	_cpct_scanKeyboard_f
                            153 ;src/main.c:68: }while(!cpct_isKeyPressed(Key_Enter));
   0073 21 00 40      [10]  154 	ld	hl,#0x4000
   0076 CDr00r00      [17]  155 	call	_cpct_isKeyPressed
   0079 7D            [ 4]  156 	ld	a,l
   007A B7            [ 4]  157 	or	a, a
   007B 28 F3         [12]  158 	jr	Z,00101$
   007D C9            [10]  159 	ret
   007E                     160 ___str_0:
   007E 53 75 70 65 72 20   161 	.ascii "Super Menu"
        4D 65 6E 75
   0088 00                  162 	.db 0x00
   0089                     163 ___str_1:
   0089 50 75 6C 73 61 20   164 	.ascii "Pulsa Intro"
        49 6E 74 72 6F
   0094 00                  165 	.db 0x00
                            166 ;src/main.c:73: u8* checkCollisions(u8 pX, u8 pY, u8 eX, u8 eY, u8* dir, u8* atk){
                            167 ;	---------------------------------
                            168 ; Function checkCollisions
                            169 ; ---------------------------------
   0095                     170 _checkCollisions::
   0095 DD E5         [15]  171 	push	ix
   0097 DD 21 00 00   [14]  172 	ld	ix,#0
   009B DD 39         [15]  173 	add	ix,sp
   009D 3B            [ 6]  174 	dec	sp
                            175 ;src/main.c:74: if((u8)atk >= 21)
   009E DD 7E 0A      [19]  176 	ld	a,10 (ix)
   00A1 DD 77 FF      [19]  177 	ld	-1 (ix),a
                            178 ;src/main.c:76: if(eX - pX > -1 && eX - pX < 11)
   00A4 DD 4E 06      [19]  179 	ld	c,6 (ix)
   00A7 06 00         [ 7]  180 	ld	b,#0x00
   00A9 DD 6E 04      [19]  181 	ld	l,4 (ix)
   00AC 26 00         [ 7]  182 	ld	h,#0x00
   00AE 79            [ 4]  183 	ld	a,c
   00AF 95            [ 4]  184 	sub	a, l
   00B0 5F            [ 4]  185 	ld	e,a
   00B1 78            [ 4]  186 	ld	a,b
   00B2 9C            [ 4]  187 	sbc	a, h
   00B3 57            [ 4]  188 	ld	d,a
                            189 ;src/main.c:74: if((u8)atk >= 21)
   00B4 DD 7E FF      [19]  190 	ld	a,-1 (ix)
   00B7 D6 15         [ 7]  191 	sub	a, #0x15
   00B9 38 4F         [12]  192 	jr	C,00118$
                            193 ;src/main.c:75: if(dir == 0)
   00BB DD 7E 09      [19]  194 	ld	a,9 (ix)
   00BE DD B6 08      [19]  195 	or	a,8 (ix)
   00C1 20 21         [12]  196 	jr	NZ,00110$
                            197 ;src/main.c:76: if(eX - pX > -1 && eX - pX < 11)
   00C3 3E FF         [ 7]  198 	ld	a,#0xFF
   00C5 BB            [ 4]  199 	cp	a, e
   00C6 9A            [ 4]  200 	sbc	a, d
   00C7 E2rCCr00      [10]  201 	jp	PO, 00162$
   00CA EE 80         [ 7]  202 	xor	a, #0x80
   00CC                     203 00162$:
   00CC F2rDFr00      [10]  204 	jp	P,00102$
   00CF 7B            [ 4]  205 	ld	a,e
   00D0 D6 0B         [ 7]  206 	sub	a, #0x0B
   00D2 7A            [ 4]  207 	ld	a,d
   00D3 17            [ 4]  208 	rla
   00D4 3F            [ 4]  209 	ccf
   00D5 1F            [ 4]  210 	rra
   00D6 DE 80         [ 7]  211 	sbc	a, #0x80
   00D8 30 05         [12]  212 	jr	NC,00102$
                            213 ;src/main.c:77: return 1;
   00DA 21 01 00      [10]  214 	ld	hl,#0x0001
   00DD 18 6E         [12]  215 	jr	00120$
   00DF                     216 00102$:
                            217 ;src/main.c:79: return 0;
   00DF 21 00 00      [10]  218 	ld	hl,#0x0000
   00E2 18 69         [12]  219 	jr	00120$
   00E4                     220 00110$:
                            221 ;src/main.c:81: if(pX - eX > -1 && pX - eX < 11)
   00E4 BF            [ 4]  222 	cp	a, a
   00E5 ED 42         [15]  223 	sbc	hl, bc
   00E7 3E FF         [ 7]  224 	ld	a,#0xFF
   00E9 BD            [ 4]  225 	cp	a, l
   00EA 9C            [ 4]  226 	sbc	a, h
   00EB E2rF0r00      [10]  227 	jp	PO, 00163$
   00EE EE 80         [ 7]  228 	xor	a, #0x80
   00F0                     229 00163$:
   00F0 F2r05r01      [10]  230 	jp	P,00106$
   00F3 11 0B 80      [10]  231 	ld	de, #0x800B
   00F6 29            [11]  232 	add	hl, hl
   00F7 3F            [ 4]  233 	ccf
   00F8 CB 1C         [ 8]  234 	rr	h
   00FA CB 1D         [ 8]  235 	rr	l
   00FC ED 52         [15]  236 	sbc	hl, de
   00FE 30 05         [12]  237 	jr	NC,00106$
                            238 ;src/main.c:82: return 1;
   0100 21 01 00      [10]  239 	ld	hl,#0x0001
   0103 18 48         [12]  240 	jr	00120$
   0105                     241 00106$:
                            242 ;src/main.c:84: return 0;
   0105 21 00 00      [10]  243 	ld	hl,#0x0000
   0108 18 43         [12]  244 	jr	00120$
   010A                     245 00118$:
                            246 ;src/main.c:86: if(eX - pX > 0 && eX - pX < 4 && eY - pY > 0 && eY - pY < 16)
   010A AF            [ 4]  247 	xor	a, a
   010B BB            [ 4]  248 	cp	a, e
   010C 9A            [ 4]  249 	sbc	a, d
   010D E2r12r01      [10]  250 	jp	PO, 00164$
   0110 EE 80         [ 7]  251 	xor	a, #0x80
   0112                     252 00164$:
   0112 F2r4Ar01      [10]  253 	jp	P,00119$
   0115 7B            [ 4]  254 	ld	a,e
   0116 D6 04         [ 7]  255 	sub	a, #0x04
   0118 7A            [ 4]  256 	ld	a,d
   0119 17            [ 4]  257 	rla
   011A 3F            [ 4]  258 	ccf
   011B 1F            [ 4]  259 	rra
   011C DE 80         [ 7]  260 	sbc	a, #0x80
   011E 30 2A         [12]  261 	jr	NC,00119$
   0120 DD 6E 07      [19]  262 	ld	l,7 (ix)
   0123 26 00         [ 7]  263 	ld	h,#0x00
   0125 DD 5E 05      [19]  264 	ld	e,5 (ix)
   0128 16 00         [ 7]  265 	ld	d,#0x00
   012A BF            [ 4]  266 	cp	a, a
   012B ED 52         [15]  267 	sbc	hl, de
   012D AF            [ 4]  268 	xor	a, a
   012E BD            [ 4]  269 	cp	a, l
   012F 9C            [ 4]  270 	sbc	a, h
   0130 E2r35r01      [10]  271 	jp	PO, 00165$
   0133 EE 80         [ 7]  272 	xor	a, #0x80
   0135                     273 00165$:
   0135 F2r4Ar01      [10]  274 	jp	P,00119$
   0138 11 10 80      [10]  275 	ld	de, #0x8010
   013B 29            [11]  276 	add	hl, hl
   013C 3F            [ 4]  277 	ccf
   013D CB 1C         [ 8]  278 	rr	h
   013F CB 1D         [ 8]  279 	rr	l
   0141 ED 52         [15]  280 	sbc	hl, de
   0143 30 05         [12]  281 	jr	NC,00119$
                            282 ;src/main.c:87: return 2;
   0145 21 02 00      [10]  283 	ld	hl,#0x0002
   0148 18 03         [12]  284 	jr	00120$
   014A                     285 00119$:
                            286 ;src/main.c:89: return 0;
   014A 21 00 00      [10]  287 	ld	hl,#0x0000
   014D                     288 00120$:
   014D 33            [ 6]  289 	inc	sp
   014E DD E1         [14]  290 	pop	ix
   0150 C9            [10]  291 	ret
                            292 ;src/main.c:92: u8* checkSprite(u8* atk, u8* dir){
                            293 ;	---------------------------------
                            294 ; Function checkSprite
                            295 ; ---------------------------------
   0151                     296 _checkSprite::
                            297 ;src/main.c:93: if(atk <= 20)
   0151 3E 14         [ 7]  298 	ld	a,#0x14
   0153 FD 21 02 00   [14]  299 	ld	iy,#2
   0157 FD 39         [15]  300 	add	iy,sp
   0159 FD BE 00      [19]  301 	cp	a, 0 (iy)
   015C 3E 00         [ 7]  302 	ld	a,#0x00
   015E FD 9E 01      [19]  303 	sbc	a, 1 (iy)
   0161 38 3B         [12]  304 	jr	C,00110$
                            305 ;src/main.c:94: switch((int)dir){
   0163 FD 21 04 00   [14]  306 	ld	iy,#4
   0167 FD 39         [15]  307 	add	iy,sp
   0169 FD 5E 00      [19]  308 	ld	e,0 (iy)
   016C FD 56 01      [19]  309 	ld	d,1 (iy)
   016F CB 7A         [ 8]  310 	bit	7, d
   0171 C0            [11]  311 	ret	NZ
   0172 3E 03         [ 7]  312 	ld	a,#0x03
   0174 BB            [ 4]  313 	cp	a, e
   0175 3E 00         [ 7]  314 	ld	a,#0x00
   0177 9A            [ 4]  315 	sbc	a, d
   0178 E2r7Dr01      [10]  316 	jp	PO, 00130$
   017B EE 80         [ 7]  317 	xor	a, #0x80
   017D                     318 00130$:
   017D F8            [11]  319 	ret	M
   017E 16 00         [ 7]  320 	ld	d,#0x00
   0180 21r86r01      [10]  321 	ld	hl,#00131$
   0183 19            [11]  322 	add	hl,de
   0184 19            [11]  323 	add	hl,de
                            324 ;src/main.c:95: case 0:
   0185 E9            [ 4]  325 	jp	(hl)
   0186                     326 00131$:
   0186 18 06         [12]  327 	jr	00101$
   0188 18 08         [12]  328 	jr	00102$
   018A 18 0A         [12]  329 	jr	00103$
   018C 18 0C         [12]  330 	jr	00104$
   018E                     331 00101$:
                            332 ;src/main.c:96: return gladis_quieto_dcha;
   018E 21r00r00      [10]  333 	ld	hl,#_gladis_quieto_dcha
   0191 C9            [10]  334 	ret
                            335 ;src/main.c:98: case 1:
   0192                     336 00102$:
                            337 ;src/main.c:99: return gladis_quieto_izda;
   0192 21r00r00      [10]  338 	ld	hl,#_gladis_quieto_izda
   0195 C9            [10]  339 	ret
                            340 ;src/main.c:101: case 2:
   0196                     341 00103$:
                            342 ;src/main.c:102: return gladis_quieto_dcha;
   0196 21r00r00      [10]  343 	ld	hl,#_gladis_quieto_dcha
   0199 C9            [10]  344 	ret
                            345 ;src/main.c:104: case 3:
   019A                     346 00104$:
                            347 ;src/main.c:105: return gladis_arriba_dcha;
   019A 21r00r00      [10]  348 	ld	hl,#_gladis_arriba_dcha
   019D C9            [10]  349 	ret
                            350 ;src/main.c:106: }
   019E                     351 00110$:
                            352 ;src/main.c:107: else if(dir == 0){
   019E 21 05 00      [10]  353 	ld	hl, #4+1
   01A1 39            [11]  354 	add	hl, sp
   01A2 7E            [ 7]  355 	ld	a, (hl)
   01A3 2B            [ 6]  356 	dec	hl
   01A4 B6            [ 7]  357 	or	a,(hl)
   01A5 20 04         [12]  358 	jr	NZ,00107$
                            359 ;src/main.c:108: return gladis_atk_dcha;
   01A7 21r00r00      [10]  360 	ld	hl,#_gladis_atk_dcha
   01AA C9            [10]  361 	ret
   01AB                     362 00107$:
                            363 ;src/main.c:110: return gladis_atk_izda;
   01AB 21r00r00      [10]  364 	ld	hl,#_gladis_atk_izda
   01AE C9            [10]  365 	ret
                            366 ;src/main.c:115: void drawFatiga(u8* atk, u8* memptr, u8 col){
                            367 ;	---------------------------------
                            368 ; Function drawFatiga
                            369 ; ---------------------------------
   01AF                     370 _drawFatiga::
   01AF DD E5         [15]  371 	push	ix
   01B1 DD 21 00 00   [14]  372 	ld	ix,#0
   01B5 DD 39         [15]  373 	add	ix,sp
                            374 ;src/main.c:116: if(atk < 20)
   01B7 DD 7E 04      [19]  375 	ld	a,4 (ix)
   01BA D6 14         [ 7]  376 	sub	a, #0x14
   01BC DD 7E 05      [19]  377 	ld	a,5 (ix)
   01BF DE 00         [ 7]  378 	sbc	a, #0x00
   01C1 30 04         [12]  379 	jr	NC,00102$
                            380 ;src/main.c:117: col = 2;
   01C3 DD 36 08 02   [19]  381 	ld	8 (ix),#0x02
   01C7                     382 00102$:
                            383 ;src/main.c:118: if(atk > 30 || atk <= 20){
   01C7 3E 14         [ 7]  384 	ld	a,#0x14
   01C9 DD BE 04      [19]  385 	cp	a, 4 (ix)
   01CC 3E 00         [ 7]  386 	ld	a,#0x00
   01CE DD 9E 05      [19]  387 	sbc	a, 5 (ix)
   01D1 3E 00         [ 7]  388 	ld	a,#0x00
   01D3 17            [ 4]  389 	rla
   01D4 57            [ 4]  390 	ld	d,a
   01D5 3E 1E         [ 7]  391 	ld	a,#0x1E
   01D7 DD BE 04      [19]  392 	cp	a, 4 (ix)
   01DA 3E 00         [ 7]  393 	ld	a,#0x00
   01DC DD 9E 05      [19]  394 	sbc	a, 5 (ix)
   01DF 38 04         [12]  395 	jr	C,00103$
   01E1 7A            [ 4]  396 	ld	a,d
   01E2 B7            [ 4]  397 	or	a, a
   01E3 20 27         [12]  398 	jr	NZ,00104$
   01E5                     399 00103$:
                            400 ;src/main.c:119: memptr = cpct_getScreenPtr(VMEM,4,160);
   01E5 D5            [11]  401 	push	de
   01E6 21 04 A0      [10]  402 	ld	hl,#0xA004
   01E9 E5            [11]  403 	push	hl
   01EA 21 00 C0      [10]  404 	ld	hl,#0xC000
   01ED E5            [11]  405 	push	hl
   01EE CDr00r00      [17]  406 	call	_cpct_getScreenPtr
   01F1 D1            [10]  407 	pop	de
                            408 ;src/main.c:120: cpct_drawSolidBox(memptr, col, 2, 8);
   01F2 DD 75 06      [19]  409 	ld	6 (ix),l
   01F5 DD 74 07      [19]  410 	ld	7 (ix),h
   01F8 4D            [ 4]  411 	ld	c,l
   01F9 44            [ 4]  412 	ld	b,h
   01FA D5            [11]  413 	push	de
   01FB 21 02 08      [10]  414 	ld	hl,#0x0802
   01FE E5            [11]  415 	push	hl
   01FF DD 7E 08      [19]  416 	ld	a,8 (ix)
   0202 F5            [11]  417 	push	af
   0203 33            [ 6]  418 	inc	sp
   0204 C5            [11]  419 	push	bc
   0205 CDr00r00      [17]  420 	call	_cpct_drawSolidBox
   0208 F1            [10]  421 	pop	af
   0209 F1            [10]  422 	pop	af
   020A 33            [ 6]  423 	inc	sp
   020B D1            [10]  424 	pop	de
   020C                     425 00104$:
                            426 ;src/main.c:122: if(atk > 40 || atk <= 20){
   020C 3E 28         [ 7]  427 	ld	a,#0x28
   020E DD BE 04      [19]  428 	cp	a, 4 (ix)
   0211 3E 00         [ 7]  429 	ld	a,#0x00
   0213 DD 9E 05      [19]  430 	sbc	a, 5 (ix)
   0216 38 04         [12]  431 	jr	C,00106$
   0218 7A            [ 4]  432 	ld	a,d
   0219 B7            [ 4]  433 	or	a, a
   021A 20 27         [12]  434 	jr	NZ,00107$
   021C                     435 00106$:
                            436 ;src/main.c:123: memptr = cpct_getScreenPtr(VMEM,7,160);
   021C D5            [11]  437 	push	de
   021D 21 07 A0      [10]  438 	ld	hl,#0xA007
   0220 E5            [11]  439 	push	hl
   0221 21 00 C0      [10]  440 	ld	hl,#0xC000
   0224 E5            [11]  441 	push	hl
   0225 CDr00r00      [17]  442 	call	_cpct_getScreenPtr
   0228 D1            [10]  443 	pop	de
                            444 ;src/main.c:124: cpct_drawSolidBox(memptr, col, 2, 8);
   0229 DD 75 06      [19]  445 	ld	6 (ix),l
   022C DD 74 07      [19]  446 	ld	7 (ix),h
   022F 4D            [ 4]  447 	ld	c,l
   0230 44            [ 4]  448 	ld	b,h
   0231 D5            [11]  449 	push	de
   0232 21 02 08      [10]  450 	ld	hl,#0x0802
   0235 E5            [11]  451 	push	hl
   0236 DD 7E 08      [19]  452 	ld	a,8 (ix)
   0239 F5            [11]  453 	push	af
   023A 33            [ 6]  454 	inc	sp
   023B C5            [11]  455 	push	bc
   023C CDr00r00      [17]  456 	call	_cpct_drawSolidBox
   023F F1            [10]  457 	pop	af
   0240 F1            [10]  458 	pop	af
   0241 33            [ 6]  459 	inc	sp
   0242 D1            [10]  460 	pop	de
   0243                     461 00107$:
                            462 ;src/main.c:126: if(atk <= 20){
   0243 7A            [ 4]  463 	ld	a,d
   0244 B7            [ 4]  464 	or	a, a
   0245 20 22         [12]  465 	jr	NZ,00111$
                            466 ;src/main.c:127: memptr = cpct_getScreenPtr(VMEM,10,160);
   0247 21 0A A0      [10]  467 	ld	hl,#0xA00A
   024A E5            [11]  468 	push	hl
   024B 21 00 C0      [10]  469 	ld	hl,#0xC000
   024E E5            [11]  470 	push	hl
   024F CDr00r00      [17]  471 	call	_cpct_getScreenPtr
                            472 ;src/main.c:128: cpct_drawSolidBox(memptr, col, 2, 8);
   0252 DD 75 06      [19]  473 	ld	6 (ix),l
   0255 DD 74 07      [19]  474 	ld	7 (ix),h
   0258 EB            [ 4]  475 	ex	de,hl
   0259 21 02 08      [10]  476 	ld	hl,#0x0802
   025C E5            [11]  477 	push	hl
   025D DD 7E 08      [19]  478 	ld	a,8 (ix)
   0260 F5            [11]  479 	push	af
   0261 33            [ 6]  480 	inc	sp
   0262 D5            [11]  481 	push	de
   0263 CDr00r00      [17]  482 	call	_cpct_drawSolidBox
   0266 F1            [10]  483 	pop	af
   0267 F1            [10]  484 	pop	af
   0268 33            [ 6]  485 	inc	sp
   0269                     486 00111$:
   0269 DD E1         [14]  487 	pop	ix
   026B C9            [10]  488 	ret
                            489 ;src/main.c:133: void drawVida(u8* life, u8* memptr){
                            490 ;	---------------------------------
                            491 ; Function drawVida
                            492 ; ---------------------------------
   026C                     493 _drawVida::
   026C DD E5         [15]  494 	push	ix
   026E DD 21 00 00   [14]  495 	ld	ix,#0
   0272 DD 39         [15]  496 	add	ix,sp
                            497 ;src/main.c:134: if(life >= 1){
   0274 DD 7E 04      [19]  498 	ld	a,4 (ix)
   0277 D6 01         [ 7]  499 	sub	a, #0x01
   0279 DD 7E 05      [19]  500 	ld	a,5 (ix)
   027C DE 00         [ 7]  501 	sbc	a, #0x00
   027E 38 1F         [12]  502 	jr	C,00102$
                            503 ;src/main.c:135: memptr = cpct_getScreenPtr(VMEM,55,160);
   0280 21 37 A0      [10]  504 	ld	hl,#0xA037
   0283 E5            [11]  505 	push	hl
   0284 21 00 C0      [10]  506 	ld	hl,#0xC000
   0287 E5            [11]  507 	push	hl
   0288 CDr00r00      [17]  508 	call	_cpct_getScreenPtr
                            509 ;src/main.c:136: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   028B DD 75 06      [19]  510 	ld	6 (ix),l
   028E DD 74 07      [19]  511 	ld	7 (ix),h
   0291 4D            [ 4]  512 	ld	c,l
   0292 44            [ 4]  513 	ld	b,h
   0293 11r00r00      [10]  514 	ld	de,#_corazon_lleno
   0296 21 04 08      [10]  515 	ld	hl,#0x0804
   0299 E5            [11]  516 	push	hl
   029A C5            [11]  517 	push	bc
   029B D5            [11]  518 	push	de
   029C CDr00r00      [17]  519 	call	_cpct_drawSpriteMasked
   029F                     520 00102$:
                            521 ;src/main.c:138: memptr = cpct_getScreenPtr(VMEM,60,160);
   029F 21 3C A0      [10]  522 	ld	hl,#0xA03C
   02A2 E5            [11]  523 	push	hl
   02A3 21 00 C0      [10]  524 	ld	hl,#0xC000
   02A6 E5            [11]  525 	push	hl
   02A7 CDr00r00      [17]  526 	call	_cpct_getScreenPtr
                            527 ;src/main.c:136: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   02AA DD 75 06      [19]  528 	ld	6 (ix),l
   02AD DD 74 07      [19]  529 	ld	7 (ix),h
   02B0 4D            [ 4]  530 	ld	c,l
   02B1 44            [ 4]  531 	ld	b,h
                            532 ;src/main.c:139: if(life >= 2)
   02B2 DD 7E 04      [19]  533 	ld	a,4 (ix)
   02B5 D6 02         [ 7]  534 	sub	a, #0x02
   02B7 DD 7E 05      [19]  535 	ld	a,5 (ix)
   02BA DE 00         [ 7]  536 	sbc	a, #0x00
   02BC 38 0E         [12]  537 	jr	C,00104$
                            538 ;src/main.c:140: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   02BE 11r00r00      [10]  539 	ld	de,#_corazon_lleno
   02C1 21 04 08      [10]  540 	ld	hl,#0x0804
   02C4 E5            [11]  541 	push	hl
   02C5 C5            [11]  542 	push	bc
   02C6 D5            [11]  543 	push	de
   02C7 CDr00r00      [17]  544 	call	_cpct_drawSpriteMasked
   02CA 18 0C         [12]  545 	jr	00105$
   02CC                     546 00104$:
                            547 ;src/main.c:142: cpct_drawSpriteMasked(corazon_roto, memptr, 4, 8);
   02CC 11r00r00      [10]  548 	ld	de,#_corazon_roto
   02CF 21 04 08      [10]  549 	ld	hl,#0x0804
   02D2 E5            [11]  550 	push	hl
   02D3 C5            [11]  551 	push	bc
   02D4 D5            [11]  552 	push	de
   02D5 CDr00r00      [17]  553 	call	_cpct_drawSpriteMasked
   02D8                     554 00105$:
                            555 ;src/main.c:143: memptr = cpct_getScreenPtr(VMEM,65,160);
   02D8 21 41 A0      [10]  556 	ld	hl,#0xA041
   02DB E5            [11]  557 	push	hl
   02DC 21 00 C0      [10]  558 	ld	hl,#0xC000
   02DF E5            [11]  559 	push	hl
   02E0 CDr00r00      [17]  560 	call	_cpct_getScreenPtr
                            561 ;src/main.c:136: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   02E3 DD 75 06      [19]  562 	ld	6 (ix),l
   02E6 DD 74 07      [19]  563 	ld	7 (ix),h
   02E9 EB            [ 4]  564 	ex	de,hl
                            565 ;src/main.c:144: if(life >= 3)
   02EA DD 7E 04      [19]  566 	ld	a,4 (ix)
   02ED D6 03         [ 7]  567 	sub	a, #0x03
   02EF DD 7E 05      [19]  568 	ld	a,5 (ix)
   02F2 DE 00         [ 7]  569 	sbc	a, #0x00
   02F4 38 0E         [12]  570 	jr	C,00107$
                            571 ;src/main.c:145: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   02F6 01r00r00      [10]  572 	ld	bc,#_corazon_lleno
   02F9 21 04 08      [10]  573 	ld	hl,#0x0804
   02FC E5            [11]  574 	push	hl
   02FD D5            [11]  575 	push	de
   02FE C5            [11]  576 	push	bc
   02FF CDr00r00      [17]  577 	call	_cpct_drawSpriteMasked
   0302 18 0C         [12]  578 	jr	00109$
   0304                     579 00107$:
                            580 ;src/main.c:147: cpct_drawSpriteMasked(corazon_roto, memptr, 4, 8);
   0304 01r00r00      [10]  581 	ld	bc,#_corazon_roto+0
   0307 21 04 08      [10]  582 	ld	hl,#0x0804
   030A E5            [11]  583 	push	hl
   030B D5            [11]  584 	push	de
   030C C5            [11]  585 	push	bc
   030D CDr00r00      [17]  586 	call	_cpct_drawSpriteMasked
   0310                     587 00109$:
   0310 DD E1         [14]  588 	pop	ix
   0312 C9            [10]  589 	ret
                            590 ;src/main.c:153: void game(){
                            591 ;	---------------------------------
                            592 ; Function game
                            593 ; ---------------------------------
   0313                     594 _game::
   0313 DD E5         [15]  595 	push	ix
   0315 DD 21 00 00   [14]  596 	ld	ix,#0
   0319 DD 39         [15]  597 	add	ix,sp
   031B 21 C2 FF      [10]  598 	ld	hl,#-62
   031E 39            [11]  599 	add	hl,sp
   031F F9            [ 6]  600 	ld	sp,hl
                            601 ;src/main.c:154: TPlayer p = { 0,100,0,100,20,20,0,0,6,3 };
   0320 21 00 00      [10]  602 	ld	hl,#0x0000
   0323 39            [11]  603 	add	hl,sp
   0324 36 00         [10]  604 	ld	(hl),#0x00
   0326 21 00 00      [10]  605 	ld	hl,#0x0000
   0329 39            [11]  606 	add	hl,sp
   032A DD 75 FC      [19]  607 	ld	-4 (ix),l
   032D DD 74 FD      [19]  608 	ld	-3 (ix),h
   0330 DD 7E FC      [19]  609 	ld	a,-4 (ix)
   0333 C6 01         [ 7]  610 	add	a, #0x01
   0335 DD 77 FE      [19]  611 	ld	-2 (ix),a
   0338 DD 7E FD      [19]  612 	ld	a,-3 (ix)
   033B CE 00         [ 7]  613 	adc	a, #0x00
   033D DD 77 FF      [19]  614 	ld	-1 (ix),a
   0340 DD 6E FE      [19]  615 	ld	l,-2 (ix)
   0343 DD 66 FF      [19]  616 	ld	h,-1 (ix)
   0346 36 64         [10]  617 	ld	(hl),#0x64
   0348 DD 7E FC      [19]  618 	ld	a,-4 (ix)
   034B C6 02         [ 7]  619 	add	a, #0x02
   034D DD 77 F8      [19]  620 	ld	-8 (ix),a
   0350 DD 7E FD      [19]  621 	ld	a,-3 (ix)
   0353 CE 00         [ 7]  622 	adc	a, #0x00
   0355 DD 77 F9      [19]  623 	ld	-7 (ix),a
   0358 DD 6E F8      [19]  624 	ld	l,-8 (ix)
   035B DD 66 F9      [19]  625 	ld	h,-7 (ix)
   035E 36 00         [10]  626 	ld	(hl),#0x00
   0360 DD 7E FC      [19]  627 	ld	a,-4 (ix)
   0363 C6 03         [ 7]  628 	add	a, #0x03
   0365 DD 77 E4      [19]  629 	ld	-28 (ix),a
   0368 DD 7E FD      [19]  630 	ld	a,-3 (ix)
   036B CE 00         [ 7]  631 	adc	a, #0x00
   036D DD 77 E5      [19]  632 	ld	-27 (ix),a
   0370 DD 6E E4      [19]  633 	ld	l,-28 (ix)
   0373 DD 66 E5      [19]  634 	ld	h,-27 (ix)
   0376 36 64         [10]  635 	ld	(hl),#0x64
   0378 DD 7E FC      [19]  636 	ld	a,-4 (ix)
   037B C6 04         [ 7]  637 	add	a, #0x04
   037D DD 77 EE      [19]  638 	ld	-18 (ix),a
   0380 DD 7E FD      [19]  639 	ld	a,-3 (ix)
   0383 CE 00         [ 7]  640 	adc	a, #0x00
   0385 DD 77 EF      [19]  641 	ld	-17 (ix),a
   0388 DD 6E EE      [19]  642 	ld	l,-18 (ix)
   038B DD 66 EF      [19]  643 	ld	h,-17 (ix)
   038E 36 14         [10]  644 	ld	(hl),#0x14
   0390 23            [ 6]  645 	inc	hl
   0391 36 00         [10]  646 	ld	(hl),#0x00
   0393 DD 7E FC      [19]  647 	ld	a,-4 (ix)
   0396 C6 06         [ 7]  648 	add	a, #0x06
   0398 DD 77 E8      [19]  649 	ld	-24 (ix),a
   039B DD 7E FD      [19]  650 	ld	a,-3 (ix)
   039E CE 00         [ 7]  651 	adc	a, #0x00
   03A0 DD 77 E9      [19]  652 	ld	-23 (ix),a
   03A3 DD 6E E8      [19]  653 	ld	l,-24 (ix)
   03A6 DD 66 E9      [19]  654 	ld	h,-23 (ix)
   03A9 36 14         [10]  655 	ld	(hl),#0x14
   03AB 23            [ 6]  656 	inc	hl
   03AC 36 00         [10]  657 	ld	(hl),#0x00
   03AE DD 7E FC      [19]  658 	ld	a,-4 (ix)
   03B1 C6 08         [ 7]  659 	add	a, #0x08
   03B3 DD 77 E6      [19]  660 	ld	-26 (ix),a
   03B6 DD 7E FD      [19]  661 	ld	a,-3 (ix)
   03B9 CE 00         [ 7]  662 	adc	a, #0x00
   03BB DD 77 E7      [19]  663 	ld	-25 (ix),a
   03BE DD 6E E6      [19]  664 	ld	l,-26 (ix)
   03C1 DD 66 E7      [19]  665 	ld	h,-25 (ix)
   03C4 AF            [ 4]  666 	xor	a, a
   03C5 77            [ 7]  667 	ld	(hl), a
   03C6 23            [ 6]  668 	inc	hl
   03C7 77            [ 7]  669 	ld	(hl), a
   03C8 DD 7E FC      [19]  670 	ld	a,-4 (ix)
   03CB C6 0A         [ 7]  671 	add	a, #0x0A
   03CD DD 77 E0      [19]  672 	ld	-32 (ix),a
   03D0 DD 7E FD      [19]  673 	ld	a,-3 (ix)
   03D3 CE 00         [ 7]  674 	adc	a, #0x00
   03D5 DD 77 E1      [19]  675 	ld	-31 (ix),a
   03D8 DD 6E E0      [19]  676 	ld	l,-32 (ix)
   03DB DD 66 E1      [19]  677 	ld	h,-31 (ix)
   03DE AF            [ 4]  678 	xor	a, a
   03DF 77            [ 7]  679 	ld	(hl), a
   03E0 23            [ 6]  680 	inc	hl
   03E1 77            [ 7]  681 	ld	(hl), a
   03E2 DD 7E FC      [19]  682 	ld	a,-4 (ix)
   03E5 C6 0C         [ 7]  683 	add	a, #0x0C
   03E7 DD 77 E2      [19]  684 	ld	-30 (ix),a
   03EA DD 7E FD      [19]  685 	ld	a,-3 (ix)
   03ED CE 00         [ 7]  686 	adc	a, #0x00
   03EF DD 77 E3      [19]  687 	ld	-29 (ix),a
   03F2 DD 6E E2      [19]  688 	ld	l,-30 (ix)
   03F5 DD 66 E3      [19]  689 	ld	h,-29 (ix)
   03F8 36 06         [10]  690 	ld	(hl),#0x06
   03FA 23            [ 6]  691 	inc	hl
   03FB 36 00         [10]  692 	ld	(hl),#0x00
   03FD DD 7E FC      [19]  693 	ld	a,-4 (ix)
   0400 C6 0E         [ 7]  694 	add	a, #0x0E
   0402 DD 77 F0      [19]  695 	ld	-16 (ix),a
   0405 DD 7E FD      [19]  696 	ld	a,-3 (ix)
   0408 CE 00         [ 7]  697 	adc	a, #0x00
   040A DD 77 F1      [19]  698 	ld	-15 (ix),a
   040D DD 6E F0      [19]  699 	ld	l,-16 (ix)
   0410 DD 66 F1      [19]  700 	ld	h,-15 (ix)
   0413 36 03         [10]  701 	ld	(hl),#0x03
   0415 23            [ 6]  702 	inc	hl
   0416 36 00         [10]  703 	ld	(hl),#0x00
                            704 ;src/main.c:155: TEnemy  e = { 55,100,0,0 };
   0418 21 16 00      [10]  705 	ld	hl,#0x0016
   041B 39            [11]  706 	add	hl,sp
   041C 36 37         [10]  707 	ld	(hl),#0x37
   041E 21 16 00      [10]  708 	ld	hl,#0x0016
   0421 39            [11]  709 	add	hl,sp
   0422 DD 75 EA      [19]  710 	ld	-22 (ix),l
   0425 DD 74 EB      [19]  711 	ld	-21 (ix),h
   0428 DD 7E EA      [19]  712 	ld	a,-22 (ix)
   042B C6 01         [ 7]  713 	add	a, #0x01
   042D DD 77 F2      [19]  714 	ld	-14 (ix),a
   0430 DD 7E EB      [19]  715 	ld	a,-21 (ix)
   0433 CE 00         [ 7]  716 	adc	a, #0x00
   0435 DD 77 F3      [19]  717 	ld	-13 (ix),a
   0438 DD 6E F2      [19]  718 	ld	l,-14 (ix)
   043B DD 66 F3      [19]  719 	ld	h,-13 (ix)
   043E 36 64         [10]  720 	ld	(hl),#0x64
   0440 DD 7E EA      [19]  721 	ld	a,-22 (ix)
   0443 C6 02         [ 7]  722 	add	a, #0x02
   0445 DD 77 FA      [19]  723 	ld	-6 (ix),a
   0448 DD 7E EB      [19]  724 	ld	a,-21 (ix)
   044B CE 00         [ 7]  725 	adc	a, #0x00
   044D DD 77 FB      [19]  726 	ld	-5 (ix),a
   0450 DD 6E FA      [19]  727 	ld	l,-6 (ix)
   0453 DD 66 FB      [19]  728 	ld	h,-5 (ix)
   0456 AF            [ 4]  729 	xor	a, a
   0457 77            [ 7]  730 	ld	(hl), a
   0458 23            [ 6]  731 	inc	hl
   0459 77            [ 7]  732 	ld	(hl), a
   045A DD 7E EA      [19]  733 	ld	a,-22 (ix)
   045D C6 04         [ 7]  734 	add	a, #0x04
   045F 6F            [ 4]  735 	ld	l,a
   0460 DD 7E EB      [19]  736 	ld	a,-21 (ix)
   0463 CE 00         [ 7]  737 	adc	a, #0x00
   0465 67            [ 4]  738 	ld	h,a
   0466 36 00         [10]  739 	ld	(hl),#0x00
   0468 23            [ 6]  740 	inc	hl
   0469 36 00         [10]  741 	ld	(hl),#0x00
                            742 ;src/main.c:156: TEnemy pr = { 0,0,1,0 };
   046B 21 10 00      [10]  743 	ld	hl,#0x0010
   046E 39            [11]  744 	add	hl,sp
   046F 36 00         [10]  745 	ld	(hl),#0x00
   0471 21 10 00      [10]  746 	ld	hl,#0x0010
   0474 39            [11]  747 	add	hl,sp
   0475 5D            [ 4]  748 	ld	e,l
   0476 54            [ 4]  749 	ld	d,h
   0477 23            [ 6]  750 	inc	hl
   0478 36 00         [10]  751 	ld	(hl),#0x00
   047A 6B            [ 4]  752 	ld	l, e
   047B 62            [ 4]  753 	ld	h, d
   047C 23            [ 6]  754 	inc	hl
   047D 23            [ 6]  755 	inc	hl
   047E 36 01         [10]  756 	ld	(hl),#0x01
   0480 23            [ 6]  757 	inc	hl
   0481 36 00         [10]  758 	ld	(hl),#0x00
   0483 21 04 00      [10]  759 	ld	hl,#0x0004
   0486 19            [11]  760 	add	hl,de
   0487 36 00         [10]  761 	ld	(hl),#0x00
   0489 23            [ 6]  762 	inc	hl
   048A 36 00         [10]  763 	ld	(hl),#0x00
                            764 ;src/main.c:158: u8* sprite = gladis_quieto_dcha;
   048C DD 36 DEr00   [19]  765 	ld	-34 (ix),#<(_gladis_quieto_dcha)
   0490 DD 36 DFs00   [19]  766 	ld	-33 (ix),#>(_gladis_quieto_dcha)
                            767 ;src/main.c:161: cpct_clearScreen(0);
   0494 21 00 40      [10]  768 	ld	hl,#0x4000
   0497 E5            [11]  769 	push	hl
   0498 AF            [ 4]  770 	xor	a, a
   0499 F5            [11]  771 	push	af
   049A 33            [ 6]  772 	inc	sp
   049B 26 C0         [ 7]  773 	ld	h, #0xC0
   049D E5            [11]  774 	push	hl
   049E CDr00r00      [17]  775 	call	_cpct_memset
                            776 ;src/main.c:163: while (1){
   04A1                     777 00169$:
                            778 ;src/main.c:166: cpct_waitVSYNC();
   04A1 CDr00r00      [17]  779 	call	_cpct_waitVSYNC
                            780 ;src/main.c:169: memptr = cpct_getScreenPtr(VMEM,p.prevX,p.prevY);
   04A4 DD 6E E4      [19]  781 	ld	l,-28 (ix)
   04A7 DD 66 E5      [19]  782 	ld	h,-27 (ix)
   04AA 46            [ 7]  783 	ld	b,(hl)
   04AB DD 6E F8      [19]  784 	ld	l,-8 (ix)
   04AE DD 66 F9      [19]  785 	ld	h,-7 (ix)
   04B1 4E            [ 7]  786 	ld	c, (hl)
   04B2 C5            [11]  787 	push	bc
   04B3 21 00 C0      [10]  788 	ld	hl,#0xC000
   04B6 E5            [11]  789 	push	hl
   04B7 CDr00r00      [17]  790 	call	_cpct_getScreenPtr
   04BA EB            [ 4]  791 	ex	de,hl
                            792 ;src/main.c:170: if(p.prevAtk <= 20)
   04BB DD 6E E8      [19]  793 	ld	l,-24 (ix)
   04BE DD 66 E9      [19]  794 	ld	h,-23 (ix)
   04C1 46            [ 7]  795 	ld	b,(hl)
   04C2 23            [ 6]  796 	inc	hl
   04C3 66            [ 7]  797 	ld	h,(hl)
                            798 ;src/main.c:171: cpct_drawSolidBox(memptr,0,4,16);
                            799 ;src/main.c:170: if(p.prevAtk <= 20)
   04C4 3E 14         [ 7]  800 	ld	a,#0x14
   04C6 B8            [ 4]  801 	cp	a, b
   04C7 3E 00         [ 7]  802 	ld	a,#0x00
   04C9 9C            [ 4]  803 	sbc	a, h
   04CA 38 10         [12]  804 	jr	C,00102$
                            805 ;src/main.c:171: cpct_drawSolidBox(memptr,0,4,16);
   04CC 21 04 10      [10]  806 	ld	hl,#0x1004
   04CF E5            [11]  807 	push	hl
   04D0 AF            [ 4]  808 	xor	a, a
   04D1 F5            [11]  809 	push	af
   04D2 33            [ 6]  810 	inc	sp
   04D3 D5            [11]  811 	push	de
   04D4 CDr00r00      [17]  812 	call	_cpct_drawSolidBox
   04D7 F1            [10]  813 	pop	af
   04D8 F1            [10]  814 	pop	af
   04D9 33            [ 6]  815 	inc	sp
   04DA 18 0E         [12]  816 	jr	00103$
   04DC                     817 00102$:
                            818 ;src/main.c:173: cpct_drawSolidBox(memptr,0,5,16);
   04DC 21 05 10      [10]  819 	ld	hl,#0x1005
   04DF E5            [11]  820 	push	hl
   04E0 AF            [ 4]  821 	xor	a, a
   04E1 F5            [11]  822 	push	af
   04E2 33            [ 6]  823 	inc	sp
   04E3 D5            [11]  824 	push	de
   04E4 CDr00r00      [17]  825 	call	_cpct_drawSolidBox
   04E7 F1            [10]  826 	pop	af
   04E8 F1            [10]  827 	pop	af
   04E9 33            [ 6]  828 	inc	sp
   04EA                     829 00103$:
                            830 ;src/main.c:175: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   04EA DD 6E FE      [19]  831 	ld	l,-2 (ix)
   04ED DD 66 FF      [19]  832 	ld	h,-1 (ix)
   04F0 46            [ 7]  833 	ld	b,(hl)
   04F1 DD 6E FC      [19]  834 	ld	l,-4 (ix)
   04F4 DD 66 FD      [19]  835 	ld	h,-3 (ix)
   04F7 4E            [ 7]  836 	ld	c, (hl)
   04F8 C5            [11]  837 	push	bc
   04F9 21 00 C0      [10]  838 	ld	hl,#0xC000
   04FC E5            [11]  839 	push	hl
   04FD CDr00r00      [17]  840 	call	_cpct_getScreenPtr
   0500 4D            [ 4]  841 	ld	c, l
   0501 44            [ 4]  842 	ld	b, h
                            843 ;src/main.c:177: if(p.atk >= 21)
   0502 DD 6E EE      [19]  844 	ld	l,-18 (ix)
   0505 DD 66 EF      [19]  845 	ld	h,-17 (ix)
   0508 7E            [ 7]  846 	ld	a, (hl)
   0509 23            [ 6]  847 	inc	hl
   050A 6E            [ 7]  848 	ld	l,(hl)
   050B 67            [ 4]  849 	ld	h,a
                            850 ;src/main.c:171: cpct_drawSolidBox(memptr,0,4,16);
                            851 ;src/main.c:178: cpct_drawSpriteMasked(sprite, memptr, 5, 16);
   050C DD 5E DE      [19]  852 	ld	e,-34 (ix)
   050F DD 56 DF      [19]  853 	ld	d,-33 (ix)
                            854 ;src/main.c:177: if(p.atk >= 21)
   0512 7C            [ 4]  855 	ld	a,h
   0513 D6 15         [ 7]  856 	sub	a, #0x15
   0515 7D            [ 4]  857 	ld	a,l
   0516 DE 00         [ 7]  858 	sbc	a, #0x00
   0518 38 0B         [12]  859 	jr	C,00105$
                            860 ;src/main.c:178: cpct_drawSpriteMasked(sprite, memptr, 5, 16);
   051A 21 05 10      [10]  861 	ld	hl,#0x1005
   051D E5            [11]  862 	push	hl
   051E C5            [11]  863 	push	bc
   051F D5            [11]  864 	push	de
   0520 CDr00r00      [17]  865 	call	_cpct_drawSpriteMasked
   0523 18 09         [12]  866 	jr	00106$
   0525                     867 00105$:
                            868 ;src/main.c:180: cpct_drawSpriteMasked(sprite, memptr, 4, 16);
   0525 21 04 10      [10]  869 	ld	hl,#0x1004
   0528 E5            [11]  870 	push	hl
   0529 C5            [11]  871 	push	bc
   052A D5            [11]  872 	push	de
   052B CDr00r00      [17]  873 	call	_cpct_drawSpriteMasked
   052E                     874 00106$:
                            875 ;src/main.c:182: memptr = cpct_getScreenPtr(VMEM,60,160);
   052E 21 3C A0      [10]  876 	ld	hl,#0xA03C
   0531 E5            [11]  877 	push	hl
   0532 21 00 C0      [10]  878 	ld	hl,#0xC000
   0535 E5            [11]  879 	push	hl
   0536 CDr00r00      [17]  880 	call	_cpct_getScreenPtr
                            881 ;src/main.c:183: cpct_drawSolidBox(memptr,0,10,16);
   0539 EB            [ 4]  882 	ex	de,hl
   053A 21 0A 10      [10]  883 	ld	hl,#0x100A
   053D E5            [11]  884 	push	hl
   053E AF            [ 4]  885 	xor	a, a
   053F F5            [11]  886 	push	af
   0540 33            [ 6]  887 	inc	sp
   0541 D5            [11]  888 	push	de
   0542 CDr00r00      [17]  889 	call	_cpct_drawSolidBox
   0545 F1            [10]  890 	pop	af
   0546 F1            [10]  891 	pop	af
   0547 33            [ 6]  892 	inc	sp
                            893 ;src/main.c:185: memptr = cpct_getScreenPtr(VMEM,e.x,e.y);
   0548 DD 6E F2      [19]  894 	ld	l,-14 (ix)
   054B DD 66 F3      [19]  895 	ld	h,-13 (ix)
   054E 46            [ 7]  896 	ld	b,(hl)
   054F DD 6E EA      [19]  897 	ld	l,-22 (ix)
   0552 DD 66 EB      [19]  898 	ld	h,-21 (ix)
   0555 4E            [ 7]  899 	ld	c, (hl)
   0556 C5            [11]  900 	push	bc
   0557 21 00 C0      [10]  901 	ld	hl,#0xC000
   055A E5            [11]  902 	push	hl
   055B CDr00r00      [17]  903 	call	_cpct_getScreenPtr
   055E 4D            [ 4]  904 	ld	c, l
   055F 44            [ 4]  905 	ld	b, h
                            906 ;src/main.c:186: if(e.vivo == 0)
   0560 DD 6E FA      [19]  907 	ld	l,-6 (ix)
   0563 DD 66 FB      [19]  908 	ld	h,-5 (ix)
   0566 56            [ 7]  909 	ld	d,(hl)
   0567 23            [ 6]  910 	inc	hl
   0568 7E            [ 7]  911 	ld	a, (hl)
   0569 B2            [ 4]  912 	or	a,d
   056A 20 12         [12]  913 	jr	NZ,00108$
                            914 ;src/main.c:187: cpct_drawSolidBox(memptr,0,4,16);
   056C 59            [ 4]  915 	ld	e, c
   056D 50            [ 4]  916 	ld	d, b
   056E C5            [11]  917 	push	bc
   056F 21 04 10      [10]  918 	ld	hl,#0x1004
   0572 E5            [11]  919 	push	hl
   0573 AF            [ 4]  920 	xor	a, a
   0574 F5            [11]  921 	push	af
   0575 33            [ 6]  922 	inc	sp
   0576 D5            [11]  923 	push	de
   0577 CDr00r00      [17]  924 	call	_cpct_drawSolidBox
   057A F1            [10]  925 	pop	af
   057B F1            [10]  926 	pop	af
   057C 33            [ 6]  927 	inc	sp
   057D C1            [10]  928 	pop	bc
   057E                     929 00108$:
                            930 ;src/main.c:192: if(e.vivo == 0){
   057E DD 6E FA      [19]  931 	ld	l,-6 (ix)
   0581 DD 66 FB      [19]  932 	ld	h,-5 (ix)
   0584 5E            [ 7]  933 	ld	e,(hl)
   0585 23            [ 6]  934 	inc	hl
   0586 7E            [ 7]  935 	ld	a, (hl)
   0587 B3            [ 4]  936 	or	a,e
   0588 20 2B         [12]  937 	jr	NZ,00110$
                            938 ;src/main.c:193: memptr = cpct_getScreenPtr(VMEM,e.x,e.y);
   058A DD 6E F2      [19]  939 	ld	l,-14 (ix)
   058D DD 66 F3      [19]  940 	ld	h,-13 (ix)
   0590 46            [ 7]  941 	ld	b,(hl)
   0591 DD 6E EA      [19]  942 	ld	l,-22 (ix)
   0594 DD 66 EB      [19]  943 	ld	h,-21 (ix)
   0597 4E            [ 7]  944 	ld	c, (hl)
   0598 C5            [11]  945 	push	bc
   0599 21 00 C0      [10]  946 	ld	hl,#0xC000
   059C E5            [11]  947 	push	hl
   059D CDr00r00      [17]  948 	call	_cpct_getScreenPtr
   05A0 4D            [ 4]  949 	ld	c, l
   05A1 44            [ 4]  950 	ld	b, h
                            951 ;src/main.c:194: cpct_drawSolidBox(memptr, 18, 4, 16);
   05A2 59            [ 4]  952 	ld	e, c
   05A3 50            [ 4]  953 	ld	d, b
   05A4 C5            [11]  954 	push	bc
   05A5 21 04 10      [10]  955 	ld	hl,#0x1004
   05A8 E5            [11]  956 	push	hl
   05A9 3E 12         [ 7]  957 	ld	a,#0x12
   05AB F5            [11]  958 	push	af
   05AC 33            [ 6]  959 	inc	sp
   05AD D5            [11]  960 	push	de
   05AE CDr00r00      [17]  961 	call	_cpct_drawSolidBox
   05B1 F1            [10]  962 	pop	af
   05B2 F1            [10]  963 	pop	af
   05B3 33            [ 6]  964 	inc	sp
   05B4 C1            [10]  965 	pop	bc
   05B5                     966 00110$:
                            967 ;src/main.c:177: if(p.atk >= 21)
   05B5 DD 6E EE      [19]  968 	ld	l,-18 (ix)
   05B8 DD 66 EF      [19]  969 	ld	h,-17 (ix)
   05BB 5E            [ 7]  970 	ld	e,(hl)
   05BC 23            [ 6]  971 	inc	hl
   05BD 56            [ 7]  972 	ld	d,(hl)
                            973 ;src/main.c:197: if(p.atk < 20)
   05BE 7B            [ 4]  974 	ld	a,e
   05BF D6 14         [ 7]  975 	sub	a, #0x14
   05C1 7A            [ 4]  976 	ld	a,d
   05C2 DE 00         [ 7]  977 	sbc	a, #0x00
   05C4 30 10         [12]  978 	jr	NC,00115$
                            979 ;src/main.c:198: drawFatiga(p.atk,memptr,2);
   05C6 C5            [11]  980 	push	bc
   05C7 3E 02         [ 7]  981 	ld	a,#0x02
   05C9 F5            [11]  982 	push	af
   05CA 33            [ 6]  983 	inc	sp
   05CB C5            [11]  984 	push	bc
   05CC D5            [11]  985 	push	de
   05CD CDrAFr01      [17]  986 	call	_drawFatiga
   05D0 F1            [10]  987 	pop	af
   05D1 F1            [10]  988 	pop	af
   05D2 33            [ 6]  989 	inc	sp
   05D3 C1            [10]  990 	pop	bc
   05D4 18 25         [12]  991 	jr	00116$
   05D6                     992 00115$:
                            993 ;src/main.c:199: else if(p.atk > 20)
   05D6 3E 14         [ 7]  994 	ld	a,#0x14
   05D8 BB            [ 4]  995 	cp	a, e
   05D9 3E 00         [ 7]  996 	ld	a,#0x00
   05DB 9A            [ 4]  997 	sbc	a, d
   05DC 30 10         [12]  998 	jr	NC,00112$
                            999 ;src/main.c:200: drawFatiga(p.atk,memptr,16);
   05DE C5            [11] 1000 	push	bc
   05DF 3E 10         [ 7] 1001 	ld	a,#0x10
   05E1 F5            [11] 1002 	push	af
   05E2 33            [ 6] 1003 	inc	sp
   05E3 C5            [11] 1004 	push	bc
   05E4 D5            [11] 1005 	push	de
   05E5 CDrAFr01      [17] 1006 	call	_drawFatiga
   05E8 F1            [10] 1007 	pop	af
   05E9 F1            [10] 1008 	pop	af
   05EA 33            [ 6] 1009 	inc	sp
   05EB C1            [10] 1010 	pop	bc
   05EC 18 0D         [12] 1011 	jr	00116$
   05EE                    1012 00112$:
                           1013 ;src/main.c:202: drawFatiga(p.atk,memptr,0);
   05EE C5            [11] 1014 	push	bc
   05EF AF            [ 4] 1015 	xor	a, a
   05F0 F5            [11] 1016 	push	af
   05F1 33            [ 6] 1017 	inc	sp
   05F2 C5            [11] 1018 	push	bc
   05F3 D5            [11] 1019 	push	de
   05F4 CDrAFr01      [17] 1020 	call	_drawFatiga
   05F7 F1            [10] 1021 	pop	af
   05F8 F1            [10] 1022 	pop	af
   05F9 33            [ 6] 1023 	inc	sp
   05FA C1            [10] 1024 	pop	bc
   05FB                    1025 00116$:
                           1026 ;src/main.c:204: drawVida(p.life, memptr);
   05FB DD 6E F0      [19] 1027 	ld	l,-16 (ix)
   05FE DD 66 F1      [19] 1028 	ld	h,-15 (ix)
   0601 5E            [ 7] 1029 	ld	e,(hl)
   0602 23            [ 6] 1030 	inc	hl
   0603 56            [ 7] 1031 	ld	d,(hl)
   0604 C5            [11] 1032 	push	bc
   0605 D5            [11] 1033 	push	de
   0606 CDr6Cr02      [17] 1034 	call	_drawVida
   0609 F1            [10] 1035 	pop	af
   060A F1            [10] 1036 	pop	af
                           1037 ;src/main.c:206: p.prevX = p.x;
   060B DD 6E FC      [19] 1038 	ld	l,-4 (ix)
   060E DD 66 FD      [19] 1039 	ld	h,-3 (ix)
   0611 7E            [ 7] 1040 	ld	a,(hl)
   0612 DD 6E F8      [19] 1041 	ld	l,-8 (ix)
   0615 DD 66 F9      [19] 1042 	ld	h,-7 (ix)
   0618 77            [ 7] 1043 	ld	(hl),a
                           1044 ;src/main.c:207: p.prevY = p.y;
   0619 DD 6E FE      [19] 1045 	ld	l,-2 (ix)
   061C DD 66 FF      [19] 1046 	ld	h,-1 (ix)
   061F 7E            [ 7] 1047 	ld	a,(hl)
   0620 DD 6E E4      [19] 1048 	ld	l,-28 (ix)
   0623 DD 66 E5      [19] 1049 	ld	h,-27 (ix)
   0626 77            [ 7] 1050 	ld	(hl),a
                           1051 ;src/main.c:208: p.prevAtk = p.atk;
   0627 DD 6E EE      [19] 1052 	ld	l,-18 (ix)
   062A DD 66 EF      [19] 1053 	ld	h,-17 (ix)
   062D 56            [ 7] 1054 	ld	d,(hl)
   062E 23            [ 6] 1055 	inc	hl
   062F 5E            [ 7] 1056 	ld	e,(hl)
   0630 DD 6E E8      [19] 1057 	ld	l,-24 (ix)
   0633 DD 66 E9      [19] 1058 	ld	h,-23 (ix)
   0636 72            [ 7] 1059 	ld	(hl),d
   0637 23            [ 6] 1060 	inc	hl
   0638 73            [ 7] 1061 	ld	(hl),e
                           1062 ;src/main.c:210: if(p.col != 2){
   0639 DD 6E E0      [19] 1063 	ld	l,-32 (ix)
   063C DD 66 E1      [19] 1064 	ld	h,-31 (ix)
   063F 56            [ 7] 1065 	ld	d,(hl)
   0640 23            [ 6] 1066 	inc	hl
   0641 66            [ 7] 1067 	ld	h,(hl)
   0642 7A            [ 4] 1068 	ld	a,d
   0643 D6 02         [ 7] 1069 	sub	a,#0x02
   0645 20 04         [12] 1070 	jr	NZ,00297$
   0647 B4            [ 4] 1071 	or	a,h
   0648 CArE6r07      [10] 1072 	jp	Z,00157$
   064B                    1073 00297$:
                           1074 ;src/main.c:211: cpct_scanKeyboard_f();
   064B CDr00r00      [17] 1075 	call	_cpct_scanKeyboard_f
                           1076 ;src/main.c:212: if(cpct_isKeyPressed(Key_Space) && p.atk >= 20){
   064E 21 05 80      [10] 1077 	ld	hl,#0x8005
   0651 CDr00r00      [17] 1078 	call	_cpct_isKeyPressed
   0654 DD 75 F5      [19] 1079 	ld	-11 (ix),l
                           1080 ;src/main.c:177: if(p.atk >= 21)
   0657 DD 6E EE      [19] 1081 	ld	l,-18 (ix)
   065A DD 66 EF      [19] 1082 	ld	h,-17 (ix)
   065D 7E            [ 7] 1083 	ld	a,(hl)
   065E DD 77 EC      [19] 1084 	ld	-20 (ix),a
   0661 23            [ 6] 1085 	inc	hl
   0662 7E            [ 7] 1086 	ld	a,(hl)
   0663 DD 77 ED      [19] 1087 	ld	-19 (ix),a
                           1088 ;src/main.c:197: if(p.atk < 20)
   0666 DD 7E EC      [19] 1089 	ld	a,-20 (ix)
   0669 D6 14         [ 7] 1090 	sub	a, #0x14
   066B DD 7E ED      [19] 1091 	ld	a,-19 (ix)
   066E DE 00         [ 7] 1092 	sbc	a, #0x00
   0670 3E 00         [ 7] 1093 	ld	a,#0x00
   0672 17            [ 4] 1094 	rla
   0673 DD 77 F4      [19] 1095 	ld	-12 (ix),a
                           1096 ;src/main.c:216: p.atk += 1;
   0676 DD 7E EC      [19] 1097 	ld	a,-20 (ix)
   0679 C6 01         [ 7] 1098 	add	a, #0x01
   067B DD 77 F6      [19] 1099 	ld	-10 (ix),a
   067E DD 7E ED      [19] 1100 	ld	a,-19 (ix)
   0681 CE 00         [ 7] 1101 	adc	a, #0x00
   0683 DD 77 F7      [19] 1102 	ld	-9 (ix),a
                           1103 ;src/main.c:212: if(cpct_isKeyPressed(Key_Space) && p.atk >= 20){
   0686 DD 7E F5      [19] 1104 	ld	a,-11 (ix)
   0689 B7            [ 4] 1105 	or	a, a
   068A 28 5D         [12] 1106 	jr	Z,00151$
   068C DD 7E F4      [19] 1107 	ld	a,-12 (ix)
   068F B7            [ 4] 1108 	or	a, a
   0690 20 57         [12] 1109 	jr	NZ,00151$
                           1110 ;src/main.c:213: if(p.atk >= 50)
   0692 DD 7E EC      [19] 1111 	ld	a,-20 (ix)
   0695 D6 32         [ 7] 1112 	sub	a, #0x32
   0697 DD 7E ED      [19] 1113 	ld	a,-19 (ix)
   069A DE 00         [ 7] 1114 	sbc	a, #0x00
   069C 38 0C         [12] 1115 	jr	C,00118$
                           1116 ;src/main.c:214: p.atk = 0;
   069E DD 6E EE      [19] 1117 	ld	l,-18 (ix)
   06A1 DD 66 EF      [19] 1118 	ld	h,-17 (ix)
   06A4 AF            [ 4] 1119 	xor	a, a
   06A5 77            [ 7] 1120 	ld	(hl), a
   06A6 23            [ 6] 1121 	inc	hl
   06A7 77            [ 7] 1122 	ld	(hl), a
   06A8 18 0F         [12] 1123 	jr	00119$
   06AA                    1124 00118$:
                           1125 ;src/main.c:216: p.atk += 1;
   06AA DD 6E EE      [19] 1126 	ld	l,-18 (ix)
   06AD DD 66 EF      [19] 1127 	ld	h,-17 (ix)
   06B0 DD 7E F6      [19] 1128 	ld	a,-10 (ix)
   06B3 77            [ 7] 1129 	ld	(hl),a
   06B4 23            [ 6] 1130 	inc	hl
   06B5 DD 7E F7      [19] 1131 	ld	a,-9 (ix)
   06B8 77            [ 7] 1132 	ld	(hl),a
   06B9                    1133 00119$:
                           1134 ;src/main.c:217: if(cpct_isKeyPressed(Key_CursorRight))
   06B9 21 00 02      [10] 1135 	ld	hl,#0x0200
   06BC CDr00r00      [17] 1136 	call	_cpct_isKeyPressed
   06BF 7D            [ 4] 1137 	ld	a,l
   06C0 B7            [ 4] 1138 	or	a, a
   06C1 28 0D         [12] 1139 	jr	Z,00123$
                           1140 ;src/main.c:218: p.dir = 0;
   06C3 DD 6E E6      [19] 1141 	ld	l,-26 (ix)
   06C6 DD 66 E7      [19] 1142 	ld	h,-25 (ix)
   06C9 AF            [ 4] 1143 	xor	a, a
   06CA 77            [ 7] 1144 	ld	(hl), a
   06CB 23            [ 6] 1145 	inc	hl
   06CC 77            [ 7] 1146 	ld	(hl), a
   06CD C3r23r08      [10] 1147 	jp	00158$
   06D0                    1148 00123$:
                           1149 ;src/main.c:219: else if(cpct_isKeyPressed(Key_CursorLeft))
   06D0 21 01 01      [10] 1150 	ld	hl,#0x0101
   06D3 CDr00r00      [17] 1151 	call	_cpct_isKeyPressed
   06D6 7D            [ 4] 1152 	ld	a,l
   06D7 B7            [ 4] 1153 	or	a, a
   06D8 CAr23r08      [10] 1154 	jp	Z,00158$
                           1155 ;src/main.c:220: p.dir = 1;
   06DB DD 6E E6      [19] 1156 	ld	l,-26 (ix)
   06DE DD 66 E7      [19] 1157 	ld	h,-25 (ix)
   06E1 36 01         [10] 1158 	ld	(hl),#0x01
   06E3 23            [ 6] 1159 	inc	hl
   06E4 36 00         [10] 1160 	ld	(hl),#0x00
   06E6 C3r23r08      [10] 1161 	jp	00158$
   06E9                    1162 00151$:
                           1163 ;src/main.c:222: if(p.atk < 20)
   06E9 DD 7E F4      [19] 1164 	ld	a,-12 (ix)
   06EC B7            [ 4] 1165 	or	a, a
   06ED 28 11         [12] 1166 	jr	Z,00126$
                           1167 ;src/main.c:223: p.atk += 1;
   06EF DD 6E EE      [19] 1168 	ld	l,-18 (ix)
   06F2 DD 66 EF      [19] 1169 	ld	h,-17 (ix)
   06F5 DD 7E F6      [19] 1170 	ld	a,-10 (ix)
   06F8 77            [ 7] 1171 	ld	(hl),a
   06F9 23            [ 6] 1172 	inc	hl
   06FA DD 7E F7      [19] 1173 	ld	a,-9 (ix)
   06FD 77            [ 7] 1174 	ld	(hl),a
   06FE 18 0B         [12] 1175 	jr	00127$
   0700                    1176 00126$:
                           1177 ;src/main.c:225: p.atk = 20;
   0700 DD 6E EE      [19] 1178 	ld	l,-18 (ix)
   0703 DD 66 EF      [19] 1179 	ld	h,-17 (ix)
   0706 36 14         [10] 1180 	ld	(hl),#0x14
   0708 23            [ 6] 1181 	inc	hl
   0709 36 00         [10] 1182 	ld	(hl),#0x00
   070B                    1183 00127$:
                           1184 ;src/main.c:226: if(cpct_isKeyPressed(Key_CursorRight) && p.x < 76 ){
   070B 21 00 02      [10] 1185 	ld	hl,#0x0200
   070E CDr00r00      [17] 1186 	call	_cpct_isKeyPressed
   0711 7D            [ 4] 1187 	ld	a,l
   0712 B7            [ 4] 1188 	or	a, a
   0713 28 32         [12] 1189 	jr	Z,00147$
   0715 DD 6E FC      [19] 1190 	ld	l,-4 (ix)
   0718 DD 66 FD      [19] 1191 	ld	h,-3 (ix)
   071B 56            [ 7] 1192 	ld	d,(hl)
   071C 7A            [ 4] 1193 	ld	a,d
   071D D6 4C         [ 7] 1194 	sub	a, #0x4C
   071F 30 26         [12] 1195 	jr	NC,00147$
                           1196 ;src/main.c:227: if(p.col != 2)
   0721 DD 6E E0      [19] 1197 	ld	l,-32 (ix)
   0724 DD 66 E1      [19] 1198 	ld	h,-31 (ix)
   0727 5E            [ 7] 1199 	ld	e,(hl)
   0728 23            [ 6] 1200 	inc	hl
   0729 66            [ 7] 1201 	ld	h,(hl)
   072A 7B            [ 4] 1202 	ld	a,e
   072B D6 02         [ 7] 1203 	sub	a,#0x02
   072D 20 03         [12] 1204 	jr	NZ,00298$
   072F B4            [ 4] 1205 	or	a,h
   0730 28 08         [12] 1206 	jr	Z,00129$
   0732                    1207 00298$:
                           1208 ;src/main.c:228: p.x += 1;
   0732 14            [ 4] 1209 	inc	d
   0733 DD 6E FC      [19] 1210 	ld	l,-4 (ix)
   0736 DD 66 FD      [19] 1211 	ld	h,-3 (ix)
   0739 72            [ 7] 1212 	ld	(hl),d
   073A                    1213 00129$:
                           1214 ;src/main.c:229: p.dir = 0;
   073A DD 6E E6      [19] 1215 	ld	l,-26 (ix)
   073D DD 66 E7      [19] 1216 	ld	h,-25 (ix)
   0740 AF            [ 4] 1217 	xor	a, a
   0741 77            [ 7] 1218 	ld	(hl), a
   0742 23            [ 6] 1219 	inc	hl
   0743 77            [ 7] 1220 	ld	(hl), a
   0744 C3r23r08      [10] 1221 	jp	00158$
   0747                    1222 00147$:
                           1223 ;src/main.c:230: }else if(cpct_isKeyPressed(Key_CursorLeft) && p.x > 0 ){
   0747 21 01 01      [10] 1224 	ld	hl,#0x0101
   074A CDr00r00      [17] 1225 	call	_cpct_isKeyPressed
   074D 7D            [ 4] 1226 	ld	a,l
   074E B7            [ 4] 1227 	or	a, a
   074F 28 32         [12] 1228 	jr	Z,00143$
   0751 DD 6E FC      [19] 1229 	ld	l,-4 (ix)
   0754 DD 66 FD      [19] 1230 	ld	h,-3 (ix)
   0757 56            [ 7] 1231 	ld	d,(hl)
   0758 7A            [ 4] 1232 	ld	a,d
   0759 B7            [ 4] 1233 	or	a, a
   075A 28 27         [12] 1234 	jr	Z,00143$
                           1235 ;src/main.c:231: if(p.col != 2)
   075C DD 6E E0      [19] 1236 	ld	l,-32 (ix)
   075F DD 66 E1      [19] 1237 	ld	h,-31 (ix)
   0762 5E            [ 7] 1238 	ld	e,(hl)
   0763 23            [ 6] 1239 	inc	hl
   0764 66            [ 7] 1240 	ld	h,(hl)
   0765 7B            [ 4] 1241 	ld	a,e
   0766 D6 02         [ 7] 1242 	sub	a,#0x02
   0768 20 03         [12] 1243 	jr	NZ,00299$
   076A B4            [ 4] 1244 	or	a,h
   076B 28 08         [12] 1245 	jr	Z,00131$
   076D                    1246 00299$:
                           1247 ;src/main.c:232: p.x -= 1;
   076D 15            [ 4] 1248 	dec	d
   076E DD 6E FC      [19] 1249 	ld	l,-4 (ix)
   0771 DD 66 FD      [19] 1250 	ld	h,-3 (ix)
   0774 72            [ 7] 1251 	ld	(hl),d
   0775                    1252 00131$:
                           1253 ;src/main.c:233: p.dir = 1;
   0775 DD 6E E6      [19] 1254 	ld	l,-26 (ix)
   0778 DD 66 E7      [19] 1255 	ld	h,-25 (ix)
   077B 36 01         [10] 1256 	ld	(hl),#0x01
   077D 23            [ 6] 1257 	inc	hl
   077E 36 00         [10] 1258 	ld	(hl),#0x00
   0780 C3r23r08      [10] 1259 	jp	00158$
   0783                    1260 00143$:
                           1261 ;src/main.c:234: }else if(cpct_isKeyPressed(Key_CursorDown) && p.y < 184 ){
   0783 21 00 04      [10] 1262 	ld	hl,#0x0400
   0786 CDr00r00      [17] 1263 	call	_cpct_isKeyPressed
   0789 7D            [ 4] 1264 	ld	a,l
   078A B7            [ 4] 1265 	or	a, a
   078B 28 22         [12] 1266 	jr	Z,00139$
                           1267 ;src/main.c:175: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   078D DD 6E FE      [19] 1268 	ld	l,-2 (ix)
   0790 DD 66 FF      [19] 1269 	ld	h,-1 (ix)
   0793 56            [ 7] 1270 	ld	d,(hl)
                           1271 ;src/main.c:234: }else if(cpct_isKeyPressed(Key_CursorDown) && p.y < 184 ){
   0794 7A            [ 4] 1272 	ld	a,d
   0795 D6 B8         [ 7] 1273 	sub	a, #0xB8
   0797 30 16         [12] 1274 	jr	NC,00139$
                           1275 ;src/main.c:235: p.y += 2;
   0799 14            [ 4] 1276 	inc	d
   079A 14            [ 4] 1277 	inc	d
   079B DD 6E FE      [19] 1278 	ld	l,-2 (ix)
   079E DD 66 FF      [19] 1279 	ld	h,-1 (ix)
   07A1 72            [ 7] 1280 	ld	(hl),d
                           1281 ;src/main.c:236: p.dir = 2;
   07A2 DD 6E E6      [19] 1282 	ld	l,-26 (ix)
   07A5 DD 66 E7      [19] 1283 	ld	h,-25 (ix)
   07A8 36 02         [10] 1284 	ld	(hl),#0x02
   07AA 23            [ 6] 1285 	inc	hl
   07AB 36 00         [10] 1286 	ld	(hl),#0x00
   07AD 18 74         [12] 1287 	jr	00158$
   07AF                    1288 00139$:
                           1289 ;src/main.c:237: }else if(cpct_isKeyPressed(Key_CursorUp) && p.y > 0 ){
   07AF 21 00 01      [10] 1290 	ld	hl,#0x0100
   07B2 CDr00r00      [17] 1291 	call	_cpct_isKeyPressed
   07B5 7D            [ 4] 1292 	ld	a,l
   07B6 B7            [ 4] 1293 	or	a, a
   07B7 28 20         [12] 1294 	jr	Z,00135$
                           1295 ;src/main.c:175: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   07B9 DD 6E FE      [19] 1296 	ld	l,-2 (ix)
   07BC DD 66 FF      [19] 1297 	ld	h,-1 (ix)
   07BF 7E            [ 7] 1298 	ld	a,(hl)
                           1299 ;src/main.c:237: }else if(cpct_isKeyPressed(Key_CursorUp) && p.y > 0 ){
   07C0 B7            [ 4] 1300 	or	a, a
   07C1 28 16         [12] 1301 	jr	Z,00135$
                           1302 ;src/main.c:238: p.y -= 2;
   07C3 C6 FE         [ 7] 1303 	add	a,#0xFE
   07C5 DD 6E FE      [19] 1304 	ld	l,-2 (ix)
   07C8 DD 66 FF      [19] 1305 	ld	h,-1 (ix)
   07CB 77            [ 7] 1306 	ld	(hl),a
                           1307 ;src/main.c:239: p.dir = 3;
   07CC DD 6E E6      [19] 1308 	ld	l,-26 (ix)
   07CF DD 66 E7      [19] 1309 	ld	h,-25 (ix)
   07D2 36 03         [10] 1310 	ld	(hl),#0x03
   07D4 23            [ 6] 1311 	inc	hl
   07D5 36 00         [10] 1312 	ld	(hl),#0x00
   07D7 18 4A         [12] 1313 	jr	00158$
   07D9                    1314 00135$:
                           1315 ;src/main.c:240: }else  if(cpct_isKeyPressed(Key_Esc)){
   07D9 21 08 04      [10] 1316 	ld	hl,#0x0408
   07DC CDr00r00      [17] 1317 	call	_cpct_isKeyPressed
   07DF 7D            [ 4] 1318 	ld	a,l
   07E0 B7            [ 4] 1319 	or	a, a
   07E1 28 40         [12] 1320 	jr	Z,00158$
                           1321 ;src/main.c:241: return;
   07E3 C3r0Br09      [10] 1322 	jp	00171$
   07E6                    1323 00157$:
                           1324 ;src/main.c:245: p.x -= 2;
   07E6 DD 6E FC      [19] 1325 	ld	l,-4 (ix)
   07E9 DD 66 FD      [19] 1326 	ld	h,-3 (ix)
   07EC 7E            [ 7] 1327 	ld	a,(hl)
   07ED C6 FE         [ 7] 1328 	add	a,#0xFE
   07EF DD 6E FC      [19] 1329 	ld	l,-4 (ix)
   07F2 DD 66 FD      [19] 1330 	ld	h,-3 (ix)
   07F5 77            [ 7] 1331 	ld	(hl),a
                           1332 ;src/main.c:246: p.rebote -= 2;
   07F6 DD 6E E2      [19] 1333 	ld	l,-30 (ix)
   07F9 DD 66 E3      [19] 1334 	ld	h,-29 (ix)
   07FC 5E            [ 7] 1335 	ld	e,(hl)
   07FD 23            [ 6] 1336 	inc	hl
   07FE 56            [ 7] 1337 	ld	d,(hl)
   07FF 1B            [ 6] 1338 	dec	de
   0800 1B            [ 6] 1339 	dec	de
   0801 DD 6E E2      [19] 1340 	ld	l,-30 (ix)
   0804 DD 66 E3      [19] 1341 	ld	h,-29 (ix)
   0807 73            [ 7] 1342 	ld	(hl),e
   0808 23            [ 6] 1343 	inc	hl
   0809 72            [ 7] 1344 	ld	(hl),d
                           1345 ;src/main.c:247: if(p.rebote == 0){
   080A 7A            [ 4] 1346 	ld	a,d
   080B B3            [ 4] 1347 	or	a,e
   080C 20 15         [12] 1348 	jr	NZ,00158$
                           1349 ;src/main.c:248: p.rebote = 6;
   080E DD 6E E2      [19] 1350 	ld	l,-30 (ix)
   0811 DD 66 E3      [19] 1351 	ld	h,-29 (ix)
   0814 36 06         [10] 1352 	ld	(hl),#0x06
   0816 23            [ 6] 1353 	inc	hl
   0817 36 00         [10] 1354 	ld	(hl),#0x00
                           1355 ;src/main.c:249: p.col = 0;
   0819 DD 6E E0      [19] 1356 	ld	l,-32 (ix)
   081C DD 66 E1      [19] 1357 	ld	h,-31 (ix)
   081F AF            [ 4] 1358 	xor	a, a
   0820 77            [ 7] 1359 	ld	(hl), a
   0821 23            [ 6] 1360 	inc	hl
   0822 77            [ 7] 1361 	ld	(hl), a
   0823                    1362 00158$:
                           1363 ;src/main.c:254: sprite = checkSprite(p.atk,p.dir);
   0823 DD 6E E6      [19] 1364 	ld	l,-26 (ix)
   0826 DD 66 E7      [19] 1365 	ld	h,-25 (ix)
   0829 4E            [ 7] 1366 	ld	c,(hl)
   082A 23            [ 6] 1367 	inc	hl
   082B 46            [ 7] 1368 	ld	b,(hl)
   082C DD 6E EE      [19] 1369 	ld	l,-18 (ix)
   082F DD 66 EF      [19] 1370 	ld	h,-17 (ix)
   0832 5E            [ 7] 1371 	ld	e,(hl)
   0833 23            [ 6] 1372 	inc	hl
   0834 56            [ 7] 1373 	ld	d,(hl)
   0835 C5            [11] 1374 	push	bc
   0836 D5            [11] 1375 	push	de
   0837 CDr51r01      [17] 1376 	call	_checkSprite
   083A F1            [10] 1377 	pop	af
   083B F1            [10] 1378 	pop	af
   083C DD 75 DE      [19] 1379 	ld	-34 (ix),l
   083F DD 74 DF      [19] 1380 	ld	-33 (ix),h
                           1381 ;src/main.c:256: if(p.col != 2 && e.vivo == 0){
   0842 DD 6E E0      [19] 1382 	ld	l,-32 (ix)
   0845 DD 66 E1      [19] 1383 	ld	h,-31 (ix)
   0848 56            [ 7] 1384 	ld	d,(hl)
   0849 23            [ 6] 1385 	inc	hl
   084A 66            [ 7] 1386 	ld	h,(hl)
   084B 7A            [ 4] 1387 	ld	a,d
   084C D6 02         [ 7] 1388 	sub	a,#0x02
   084E 20 04         [12] 1389 	jr	NZ,00300$
   0850 B4            [ 4] 1390 	or	a,h
   0851 CArEBr08      [10] 1391 	jp	Z,00164$
   0854                    1392 00300$:
   0854 DD 6E FA      [19] 1393 	ld	l,-6 (ix)
   0857 DD 66 FB      [19] 1394 	ld	h,-5 (ix)
   085A 56            [ 7] 1395 	ld	d,(hl)
   085B 23            [ 6] 1396 	inc	hl
   085C 7E            [ 7] 1397 	ld	a, (hl)
   085D B2            [ 4] 1398 	or	a,d
   085E C2rEBr08      [10] 1399 	jp	NZ,00164$
                           1400 ;src/main.c:257: p.col = checkCollisions(p.x,p.y,e.x,e.y,p.dir,p.atk);
   0861 DD 6E EE      [19] 1401 	ld	l,-18 (ix)
   0864 DD 66 EF      [19] 1402 	ld	h,-17 (ix)
   0867 4E            [ 7] 1403 	ld	c,(hl)
   0868 23            [ 6] 1404 	inc	hl
   0869 46            [ 7] 1405 	ld	b,(hl)
   086A DD 6E E6      [19] 1406 	ld	l,-26 (ix)
   086D DD 66 E7      [19] 1407 	ld	h,-25 (ix)
   0870 7E            [ 7] 1408 	ld	a,(hl)
   0871 DD 77 F6      [19] 1409 	ld	-10 (ix),a
   0874 23            [ 6] 1410 	inc	hl
   0875 7E            [ 7] 1411 	ld	a,(hl)
   0876 DD 77 F7      [19] 1412 	ld	-9 (ix),a
   0879 DD 6E F2      [19] 1413 	ld	l,-14 (ix)
   087C DD 66 F3      [19] 1414 	ld	h,-13 (ix)
   087F 5E            [ 7] 1415 	ld	e,(hl)
   0880 DD 6E EA      [19] 1416 	ld	l,-22 (ix)
   0883 DD 66 EB      [19] 1417 	ld	h,-21 (ix)
   0886 7E            [ 7] 1418 	ld	a,(hl)
   0887 DD 77 F4      [19] 1419 	ld	-12 (ix),a
   088A DD 6E FE      [19] 1420 	ld	l,-2 (ix)
   088D DD 66 FF      [19] 1421 	ld	h,-1 (ix)
   0890 7E            [ 7] 1422 	ld	a,(hl)
   0891 DD 77 EC      [19] 1423 	ld	-20 (ix),a
   0894 DD 6E FC      [19] 1424 	ld	l,-4 (ix)
   0897 DD 66 FD      [19] 1425 	ld	h,-3 (ix)
   089A 56            [ 7] 1426 	ld	d,(hl)
   089B C5            [11] 1427 	push	bc
   089C DD 6E F6      [19] 1428 	ld	l,-10 (ix)
   089F DD 66 F7      [19] 1429 	ld	h,-9 (ix)
   08A2 E5            [11] 1430 	push	hl
   08A3 7B            [ 4] 1431 	ld	a,e
   08A4 F5            [11] 1432 	push	af
   08A5 33            [ 6] 1433 	inc	sp
   08A6 DD 7E F4      [19] 1434 	ld	a,-12 (ix)
   08A9 F5            [11] 1435 	push	af
   08AA 33            [ 6] 1436 	inc	sp
   08AB DD 7E EC      [19] 1437 	ld	a,-20 (ix)
   08AE F5            [11] 1438 	push	af
   08AF 33            [ 6] 1439 	inc	sp
   08B0 D5            [11] 1440 	push	de
   08B1 33            [ 6] 1441 	inc	sp
   08B2 CDr95r00      [17] 1442 	call	_checkCollisions
   08B5 F1            [10] 1443 	pop	af
   08B6 F1            [10] 1444 	pop	af
   08B7 F1            [10] 1445 	pop	af
   08B8 F1            [10] 1446 	pop	af
   08B9 55            [ 4] 1447 	ld	d,l
   08BA 5C            [ 4] 1448 	ld	e,h
   08BB DD 6E E0      [19] 1449 	ld	l,-32 (ix)
   08BE DD 66 E1      [19] 1450 	ld	h,-31 (ix)
   08C1 72            [ 7] 1451 	ld	(hl),d
   08C2 23            [ 6] 1452 	inc	hl
   08C3 73            [ 7] 1453 	ld	(hl),e
                           1454 ;src/main.c:258: if(p.col == 2)
   08C4 7A            [ 4] 1455 	ld	a,d
   08C5 D6 02         [ 7] 1456 	sub	a,#0x02
   08C7 20 16         [12] 1457 	jr	NZ,00160$
   08C9 B3            [ 4] 1458 	or	a,e
   08CA 20 13         [12] 1459 	jr	NZ,00160$
                           1460 ;src/main.c:259: p.life--;
   08CC DD 6E F0      [19] 1461 	ld	l,-16 (ix)
   08CF DD 66 F1      [19] 1462 	ld	h,-15 (ix)
   08D2 5E            [ 7] 1463 	ld	e,(hl)
   08D3 23            [ 6] 1464 	inc	hl
   08D4 56            [ 7] 1465 	ld	d,(hl)
   08D5 1B            [ 6] 1466 	dec	de
   08D6 DD 6E F0      [19] 1467 	ld	l,-16 (ix)
   08D9 DD 66 F1      [19] 1468 	ld	h,-15 (ix)
   08DC 73            [ 7] 1469 	ld	(hl),e
   08DD 23            [ 6] 1470 	inc	hl
   08DE 72            [ 7] 1471 	ld	(hl),d
   08DF                    1472 00160$:
                           1473 ;src/main.c:260: if(p.life == 0)
   08DF DD 6E F0      [19] 1474 	ld	l,-16 (ix)
   08E2 DD 66 F1      [19] 1475 	ld	h,-15 (ix)
   08E5 56            [ 7] 1476 	ld	d,(hl)
   08E6 23            [ 6] 1477 	inc	hl
   08E7 7E            [ 7] 1478 	ld	a, (hl)
   08E8 B2            [ 4] 1479 	or	a,d
                           1480 ;src/main.c:261: return;
   08E9 28 20         [12] 1481 	jr	Z,00171$
   08EB                    1482 00164$:
                           1483 ;src/main.c:263: if(p.col == 1)
   08EB DD 6E E0      [19] 1484 	ld	l,-32 (ix)
   08EE DD 66 E1      [19] 1485 	ld	h,-31 (ix)
   08F1 56            [ 7] 1486 	ld	d,(hl)
   08F2 23            [ 6] 1487 	inc	hl
   08F3 66            [ 7] 1488 	ld	h,(hl)
   08F4 15            [ 4] 1489 	dec	d
   08F5 C2rA1r04      [10] 1490 	jp	NZ,00169$
   08F8 7C            [ 4] 1491 	ld	a,h
   08F9 B7            [ 4] 1492 	or	a, a
   08FA C2rA1r04      [10] 1493 	jp	NZ,00169$
                           1494 ;src/main.c:264: e.vivo = 1;
   08FD DD 6E FA      [19] 1495 	ld	l,-6 (ix)
   0900 DD 66 FB      [19] 1496 	ld	h,-5 (ix)
   0903 36 01         [10] 1497 	ld	(hl),#0x01
   0905 23            [ 6] 1498 	inc	hl
   0906 36 00         [10] 1499 	ld	(hl),#0x00
   0908 C3rA1r04      [10] 1500 	jp	00169$
   090B                    1501 00171$:
   090B DD F9         [10] 1502 	ld	sp, ix
   090D DD E1         [14] 1503 	pop	ix
   090F C9            [10] 1504 	ret
                           1505 ;src/main.c:271: void main(void) {
                           1506 ;	---------------------------------
                           1507 ; Function main
                           1508 ; ---------------------------------
   0910                    1509 _main::
                           1510 ;src/main.c:273: init();
   0910 CDr00r00      [17] 1511 	call	_init
                           1512 ;src/main.c:276: while(1){
   0913                    1513 00102$:
                           1514 ;src/main.c:277: menu();
   0913 CDr29r00      [17] 1515 	call	_menu
                           1516 ;src/main.c:278: game();
   0916 CDr13r03      [17] 1517 	call	_game
   0919 18 F8         [12] 1518 	jr	00102$
                           1519 	.area _CODE
                           1520 	.area _INITIALIZER
                           1521 	.area _CABS (ABS)
