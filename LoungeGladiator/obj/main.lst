                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Sep 22 2015) (CYGWIN)
                              4 ; This file was generated Mon Oct  5 18:00:45 2015
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _game
                             14 	.globl _drawVida
                             15 	.globl _drawFatiga
                             16 	.globl _checkSprite
                             17 	.globl _checkCollisions
                             18 	.globl _menu
                             19 	.globl _init
                             20 	.globl _cpct_getScreenPtr
                             21 	.globl _cpct_setPalette
                             22 	.globl _cpct_fw2hw
                             23 	.globl _cpct_waitVSYNC
                             24 	.globl _cpct_setVideoMode
                             25 	.globl _cpct_drawStringM0
                             26 	.globl _cpct_drawSolidBox
                             27 	.globl _cpct_drawSpriteMasked
                             28 	.globl _cpct_isKeyPressed
                             29 	.globl _cpct_scanKeyboard_f
                             30 	.globl _cpct_memset
                             31 	.globl _cpct_disableFirmware
                             32 	.globl _g_palette
                             33 ;--------------------------------------------------------
                             34 ; special function registers
                             35 ;--------------------------------------------------------
                             36 ;--------------------------------------------------------
                             37 ; ram data
                             38 ;--------------------------------------------------------
                             39 	.area _DATA
                             40 ;--------------------------------------------------------
                             41 ; ram data
                             42 ;--------------------------------------------------------
                             43 	.area _INITIALIZED
                             44 ;--------------------------------------------------------
                             45 ; absolute external ram data
                             46 ;--------------------------------------------------------
                             47 	.area _DABS (ABS)
                             48 ;--------------------------------------------------------
                             49 ; global & static initialisations
                             50 ;--------------------------------------------------------
                             51 	.area _HOME
                             52 	.area _GSINIT
                             53 	.area _GSFINAL
                             54 	.area _GSINIT
                             55 ;--------------------------------------------------------
                             56 ; Home
                             57 ;--------------------------------------------------------
                             58 	.area _HOME
                             59 	.area _HOME
                             60 ;--------------------------------------------------------
                             61 ; code
                             62 ;--------------------------------------------------------
                             63 	.area _CODE
                             64 ;src/main.c:47: void init(){
                             65 ;	---------------------------------
                             66 ; Function init
                             67 ; ---------------------------------
   0000                      68 _init::
                             69 ;src/main.c:48: cpct_disableFirmware();
   0000 CDr00r00      [17]   70 	call	_cpct_disableFirmware
                             71 ;src/main.c:49: cpct_setVideoMode(0);
   0003 AF            [ 4]   72 	xor	a, a
   0004 F5            [11]   73 	push	af
   0005 33            [ 6]   74 	inc	sp
   0006 CDr00r00      [17]   75 	call	_cpct_setVideoMode
   0009 33            [ 6]   76 	inc	sp
                             77 ;src/main.c:50: cpct_fw2hw(g_palette,4);
   000A 11r25r00      [10]   78 	ld	de,#_g_palette
   000D 3E 04         [ 7]   79 	ld	a,#0x04
   000F F5            [11]   80 	push	af
   0010 33            [ 6]   81 	inc	sp
   0011 D5            [11]   82 	push	de
   0012 CDr00r00      [17]   83 	call	_cpct_fw2hw
   0015 F1            [10]   84 	pop	af
   0016 33            [ 6]   85 	inc	sp
                             86 ;src/main.c:51: cpct_setPalette(g_palette,4);
   0017 11r25r00      [10]   87 	ld	de,#_g_palette
   001A 3E 04         [ 7]   88 	ld	a,#0x04
   001C F5            [11]   89 	push	af
   001D 33            [ 6]   90 	inc	sp
   001E D5            [11]   91 	push	de
   001F CDr00r00      [17]   92 	call	_cpct_setPalette
   0022 F1            [10]   93 	pop	af
   0023 33            [ 6]   94 	inc	sp
   0024 C9            [10]   95 	ret
   0025                      96 _g_palette:
   0025 00                   97 	.db #0x00	; 0
   0026 1A                   98 	.db #0x1A	; 26
   0027 06                   99 	.db #0x06	; 6
   0028 12                  100 	.db #0x12	; 18
                            101 ;src/main.c:55: void menu(){
                            102 ;	---------------------------------
                            103 ; Function menu
                            104 ; ---------------------------------
   0029                     105 _menu::
                            106 ;src/main.c:57: cpct_clearScreen(0);
   0029 21 00 40      [10]  107 	ld	hl,#0x4000
   002C E5            [11]  108 	push	hl
   002D AF            [ 4]  109 	xor	a, a
   002E F5            [11]  110 	push	af
   002F 33            [ 6]  111 	inc	sp
   0030 26 C0         [ 7]  112 	ld	h, #0xC0
   0032 E5            [11]  113 	push	hl
   0033 CDr00r00      [17]  114 	call	_cpct_memset
                            115 ;src/main.c:59: memptr = cpct_getScreenPtr(VMEM,20,10);
   0036 21 14 0A      [10]  116 	ld	hl,#0x0A14
   0039 E5            [11]  117 	push	hl
   003A 21 00 C0      [10]  118 	ld	hl,#0xC000
   003D E5            [11]  119 	push	hl
   003E CDr00r00      [17]  120 	call	_cpct_getScreenPtr
                            121 ;src/main.c:60: cpct_drawStringM0("Super Menu",memptr,2,3);
   0041 EB            [ 4]  122 	ex	de,hl
   0042 01r7Er00      [10]  123 	ld	bc,#___str_0+0
   0045 21 02 03      [10]  124 	ld	hl,#0x0302
   0048 E5            [11]  125 	push	hl
   0049 D5            [11]  126 	push	de
   004A C5            [11]  127 	push	bc
   004B CDr00r00      [17]  128 	call	_cpct_drawStringM0
   004E 21 06 00      [10]  129 	ld	hl,#6
   0051 39            [11]  130 	add	hl,sp
   0052 F9            [ 6]  131 	ld	sp,hl
                            132 ;src/main.c:62: memptr = cpct_getScreenPtr(VMEM,18,180);
   0053 21 12 B4      [10]  133 	ld	hl,#0xB412
   0056 E5            [11]  134 	push	hl
   0057 21 00 C0      [10]  135 	ld	hl,#0xC000
   005A E5            [11]  136 	push	hl
   005B CDr00r00      [17]  137 	call	_cpct_getScreenPtr
                            138 ;src/main.c:63: cpct_drawStringM0("Pulsa Intro",memptr,4,5);
   005E EB            [ 4]  139 	ex	de,hl
   005F 01r89r00      [10]  140 	ld	bc,#___str_1+0
   0062 21 04 05      [10]  141 	ld	hl,#0x0504
   0065 E5            [11]  142 	push	hl
   0066 D5            [11]  143 	push	de
   0067 C5            [11]  144 	push	bc
   0068 CDr00r00      [17]  145 	call	_cpct_drawStringM0
   006B 21 06 00      [10]  146 	ld	hl,#6
   006E 39            [11]  147 	add	hl,sp
   006F F9            [ 6]  148 	ld	sp,hl
                            149 ;src/main.c:65: do{
   0070                     150 00101$:
                            151 ;src/main.c:66: cpct_scanKeyboard_f();
   0070 CDr00r00      [17]  152 	call	_cpct_scanKeyboard_f
                            153 ;src/main.c:67: }while(!cpct_isKeyPressed(Key_Enter));
   0073 21 00 40      [10]  154 	ld	hl,#0x4000
   0076 CDr00r00      [17]  155 	call	_cpct_isKeyPressed
   0079 7D            [ 4]  156 	ld	a,l
   007A B7            [ 4]  157 	or	a, a
   007B 28 F3         [12]  158 	jr	Z,00101$
   007D C9            [10]  159 	ret
   007E                     160 ___str_0:
   007E 53 75 70 65 72 20   161 	.ascii "Super Menu"
        4D 65 6E 75
   0088 00                  162 	.db 0x00
   0089                     163 ___str_1:
   0089 50 75 6C 73 61 20   164 	.ascii "Pulsa Intro"
        49 6E 74 72 6F
   0094 00                  165 	.db 0x00
                            166 ;src/main.c:72: u8* checkCollisions(u8 pX, u8 pY, u8 eX, u8 eY, u8* dir, u8* atk){
                            167 ;	---------------------------------
                            168 ; Function checkCollisions
                            169 ; ---------------------------------
   0095                     170 _checkCollisions::
   0095 DD E5         [15]  171 	push	ix
   0097 DD 21 00 00   [14]  172 	ld	ix,#0
   009B DD 39         [15]  173 	add	ix,sp
   009D 3B            [ 6]  174 	dec	sp
                            175 ;src/main.c:73: if((u8)atk >= 21)
   009E DD 7E 0A      [19]  176 	ld	a,10 (ix)
   00A1 DD 77 FF      [19]  177 	ld	-1 (ix),a
                            178 ;src/main.c:75: if(eX - pX > -1 && eX - pX < 11)
   00A4 DD 4E 06      [19]  179 	ld	c,6 (ix)
   00A7 06 00         [ 7]  180 	ld	b,#0x00
   00A9 DD 6E 04      [19]  181 	ld	l,4 (ix)
   00AC 26 00         [ 7]  182 	ld	h,#0x00
   00AE 79            [ 4]  183 	ld	a,c
   00AF 95            [ 4]  184 	sub	a, l
   00B0 5F            [ 4]  185 	ld	e,a
   00B1 78            [ 4]  186 	ld	a,b
   00B2 9C            [ 4]  187 	sbc	a, h
   00B3 57            [ 4]  188 	ld	d,a
                            189 ;src/main.c:73: if((u8)atk >= 21)
   00B4 DD 7E FF      [19]  190 	ld	a,-1 (ix)
   00B7 D6 15         [ 7]  191 	sub	a, #0x15
   00B9 38 4F         [12]  192 	jr	C,00118$
                            193 ;src/main.c:74: if(dir == 0)
   00BB DD 7E 09      [19]  194 	ld	a,9 (ix)
   00BE DD B6 08      [19]  195 	or	a,8 (ix)
   00C1 20 21         [12]  196 	jr	NZ,00110$
                            197 ;src/main.c:75: if(eX - pX > -1 && eX - pX < 11)
   00C3 3E FF         [ 7]  198 	ld	a,#0xFF
   00C5 BB            [ 4]  199 	cp	a, e
   00C6 9A            [ 4]  200 	sbc	a, d
   00C7 E2rCCr00      [10]  201 	jp	PO, 00162$
   00CA EE 80         [ 7]  202 	xor	a, #0x80
   00CC                     203 00162$:
   00CC F2rDFr00      [10]  204 	jp	P,00102$
   00CF 7B            [ 4]  205 	ld	a,e
   00D0 D6 0B         [ 7]  206 	sub	a, #0x0B
   00D2 7A            [ 4]  207 	ld	a,d
   00D3 17            [ 4]  208 	rla
   00D4 3F            [ 4]  209 	ccf
   00D5 1F            [ 4]  210 	rra
   00D6 DE 80         [ 7]  211 	sbc	a, #0x80
   00D8 30 05         [12]  212 	jr	NC,00102$
                            213 ;src/main.c:76: return 1;
   00DA 21 01 00      [10]  214 	ld	hl,#0x0001
   00DD 18 6E         [12]  215 	jr	00120$
   00DF                     216 00102$:
                            217 ;src/main.c:78: return 0;
   00DF 21 00 00      [10]  218 	ld	hl,#0x0000
   00E2 18 69         [12]  219 	jr	00120$
   00E4                     220 00110$:
                            221 ;src/main.c:80: if(pX - eX > -1 && pX - eX < 11)
   00E4 BF            [ 4]  222 	cp	a, a
   00E5 ED 42         [15]  223 	sbc	hl, bc
   00E7 3E FF         [ 7]  224 	ld	a,#0xFF
   00E9 BD            [ 4]  225 	cp	a, l
   00EA 9C            [ 4]  226 	sbc	a, h
   00EB E2rF0r00      [10]  227 	jp	PO, 00163$
   00EE EE 80         [ 7]  228 	xor	a, #0x80
   00F0                     229 00163$:
   00F0 F2r05r01      [10]  230 	jp	P,00106$
   00F3 11 0B 80      [10]  231 	ld	de, #0x800B
   00F6 29            [11]  232 	add	hl, hl
   00F7 3F            [ 4]  233 	ccf
   00F8 CB 1C         [ 8]  234 	rr	h
   00FA CB 1D         [ 8]  235 	rr	l
   00FC ED 52         [15]  236 	sbc	hl, de
   00FE 30 05         [12]  237 	jr	NC,00106$
                            238 ;src/main.c:81: return 1;
   0100 21 01 00      [10]  239 	ld	hl,#0x0001
   0103 18 48         [12]  240 	jr	00120$
   0105                     241 00106$:
                            242 ;src/main.c:83: return 0;
   0105 21 00 00      [10]  243 	ld	hl,#0x0000
   0108 18 43         [12]  244 	jr	00120$
   010A                     245 00118$:
                            246 ;src/main.c:85: if(eX - pX > 0 && eX - pX < 4 && eY - pY > 0 && eY - pY < 16)
   010A AF            [ 4]  247 	xor	a, a
   010B BB            [ 4]  248 	cp	a, e
   010C 9A            [ 4]  249 	sbc	a, d
   010D E2r12r01      [10]  250 	jp	PO, 00164$
   0110 EE 80         [ 7]  251 	xor	a, #0x80
   0112                     252 00164$:
   0112 F2r4Ar01      [10]  253 	jp	P,00119$
   0115 7B            [ 4]  254 	ld	a,e
   0116 D6 04         [ 7]  255 	sub	a, #0x04
   0118 7A            [ 4]  256 	ld	a,d
   0119 17            [ 4]  257 	rla
   011A 3F            [ 4]  258 	ccf
   011B 1F            [ 4]  259 	rra
   011C DE 80         [ 7]  260 	sbc	a, #0x80
   011E 30 2A         [12]  261 	jr	NC,00119$
   0120 DD 6E 07      [19]  262 	ld	l,7 (ix)
   0123 26 00         [ 7]  263 	ld	h,#0x00
   0125 DD 5E 05      [19]  264 	ld	e,5 (ix)
   0128 16 00         [ 7]  265 	ld	d,#0x00
   012A BF            [ 4]  266 	cp	a, a
   012B ED 52         [15]  267 	sbc	hl, de
   012D AF            [ 4]  268 	xor	a, a
   012E BD            [ 4]  269 	cp	a, l
   012F 9C            [ 4]  270 	sbc	a, h
   0130 E2r35r01      [10]  271 	jp	PO, 00165$
   0133 EE 80         [ 7]  272 	xor	a, #0x80
   0135                     273 00165$:
   0135 F2r4Ar01      [10]  274 	jp	P,00119$
   0138 11 10 80      [10]  275 	ld	de, #0x8010
   013B 29            [11]  276 	add	hl, hl
   013C 3F            [ 4]  277 	ccf
   013D CB 1C         [ 8]  278 	rr	h
   013F CB 1D         [ 8]  279 	rr	l
   0141 ED 52         [15]  280 	sbc	hl, de
   0143 30 05         [12]  281 	jr	NC,00119$
                            282 ;src/main.c:86: return 2;
   0145 21 02 00      [10]  283 	ld	hl,#0x0002
   0148 18 03         [12]  284 	jr	00120$
   014A                     285 00119$:
                            286 ;src/main.c:88: return 0;
   014A 21 00 00      [10]  287 	ld	hl,#0x0000
   014D                     288 00120$:
   014D 33            [ 6]  289 	inc	sp
   014E DD E1         [14]  290 	pop	ix
   0150 C9            [10]  291 	ret
                            292 ;src/main.c:91: u8* checkSprite(u8* atk, u8* dir){
                            293 ;	---------------------------------
                            294 ; Function checkSprite
                            295 ; ---------------------------------
   0151                     296 _checkSprite::
                            297 ;src/main.c:92: if(atk <= 20)
   0151 3E 14         [ 7]  298 	ld	a,#0x14
   0153 FD 21 02 00   [14]  299 	ld	iy,#2
   0157 FD 39         [15]  300 	add	iy,sp
   0159 FD BE 00      [19]  301 	cp	a, 0 (iy)
   015C 3E 00         [ 7]  302 	ld	a,#0x00
   015E FD 9E 01      [19]  303 	sbc	a, 1 (iy)
   0161 38 3B         [12]  304 	jr	C,00110$
                            305 ;src/main.c:93: switch((int)dir){
   0163 FD 21 04 00   [14]  306 	ld	iy,#4
   0167 FD 39         [15]  307 	add	iy,sp
   0169 FD 5E 00      [19]  308 	ld	e,0 (iy)
   016C FD 56 01      [19]  309 	ld	d,1 (iy)
   016F CB 7A         [ 8]  310 	bit	7, d
   0171 C0            [11]  311 	ret	NZ
   0172 3E 03         [ 7]  312 	ld	a,#0x03
   0174 BB            [ 4]  313 	cp	a, e
   0175 3E 00         [ 7]  314 	ld	a,#0x00
   0177 9A            [ 4]  315 	sbc	a, d
   0178 E2r7Dr01      [10]  316 	jp	PO, 00130$
   017B EE 80         [ 7]  317 	xor	a, #0x80
   017D                     318 00130$:
   017D F8            [11]  319 	ret	M
   017E 16 00         [ 7]  320 	ld	d,#0x00
   0180 21r86r01      [10]  321 	ld	hl,#00131$
   0183 19            [11]  322 	add	hl,de
   0184 19            [11]  323 	add	hl,de
                            324 ;src/main.c:94: case 0:
   0185 E9            [ 4]  325 	jp	(hl)
   0186                     326 00131$:
   0186 18 06         [12]  327 	jr	00101$
   0188 18 08         [12]  328 	jr	00102$
   018A 18 0A         [12]  329 	jr	00103$
   018C 18 0C         [12]  330 	jr	00104$
   018E                     331 00101$:
                            332 ;src/main.c:95: return gladis_quieto_dcha;
   018E 21r00r00      [10]  333 	ld	hl,#_gladis_quieto_dcha
   0191 C9            [10]  334 	ret
                            335 ;src/main.c:97: case 1:
   0192                     336 00102$:
                            337 ;src/main.c:98: return gladis_quieto_izda;
   0192 21r00r00      [10]  338 	ld	hl,#_gladis_quieto_izda
   0195 C9            [10]  339 	ret
                            340 ;src/main.c:100: case 2:
   0196                     341 00103$:
                            342 ;src/main.c:101: return gladis_quieto_dcha;
   0196 21r00r00      [10]  343 	ld	hl,#_gladis_quieto_dcha
   0199 C9            [10]  344 	ret
                            345 ;src/main.c:103: case 3:
   019A                     346 00104$:
                            347 ;src/main.c:104: return gladis_arriba_dcha;
   019A 21r00r00      [10]  348 	ld	hl,#_gladis_arriba_dcha
   019D C9            [10]  349 	ret
                            350 ;src/main.c:105: }
   019E                     351 00110$:
                            352 ;src/main.c:106: else if(dir == 0){
   019E 21 05 00      [10]  353 	ld	hl, #4+1
   01A1 39            [11]  354 	add	hl, sp
   01A2 7E            [ 7]  355 	ld	a, (hl)
   01A3 2B            [ 6]  356 	dec	hl
   01A4 B6            [ 7]  357 	or	a,(hl)
   01A5 20 04         [12]  358 	jr	NZ,00107$
                            359 ;src/main.c:107: return gladis_atk_dcha;
   01A7 21r00r00      [10]  360 	ld	hl,#_gladis_atk_dcha
   01AA C9            [10]  361 	ret
   01AB                     362 00107$:
                            363 ;src/main.c:109: return gladis_atk_izda;
   01AB 21r00r00      [10]  364 	ld	hl,#_gladis_atk_izda
   01AE C9            [10]  365 	ret
                            366 ;src/main.c:114: void drawFatiga(u8* atk, u8* memptr, u8 col){
                            367 ;	---------------------------------
                            368 ; Function drawFatiga
                            369 ; ---------------------------------
   01AF                     370 _drawFatiga::
   01AF DD E5         [15]  371 	push	ix
   01B1 DD 21 00 00   [14]  372 	ld	ix,#0
   01B5 DD 39         [15]  373 	add	ix,sp
                            374 ;src/main.c:115: if(atk < 20)
   01B7 DD 7E 04      [19]  375 	ld	a,4 (ix)
   01BA D6 14         [ 7]  376 	sub	a, #0x14
   01BC DD 7E 05      [19]  377 	ld	a,5 (ix)
   01BF DE 00         [ 7]  378 	sbc	a, #0x00
   01C1 30 04         [12]  379 	jr	NC,00102$
                            380 ;src/main.c:116: col = 2;
   01C3 DD 36 08 02   [19]  381 	ld	8 (ix),#0x02
   01C7                     382 00102$:
                            383 ;src/main.c:117: if(atk > 30 || atk <= 20){
   01C7 3E 14         [ 7]  384 	ld	a,#0x14
   01C9 DD BE 04      [19]  385 	cp	a, 4 (ix)
   01CC 3E 00         [ 7]  386 	ld	a,#0x00
   01CE DD 9E 05      [19]  387 	sbc	a, 5 (ix)
   01D1 3E 00         [ 7]  388 	ld	a,#0x00
   01D3 17            [ 4]  389 	rla
   01D4 57            [ 4]  390 	ld	d,a
   01D5 3E 1E         [ 7]  391 	ld	a,#0x1E
   01D7 DD BE 04      [19]  392 	cp	a, 4 (ix)
   01DA 3E 00         [ 7]  393 	ld	a,#0x00
   01DC DD 9E 05      [19]  394 	sbc	a, 5 (ix)
   01DF 38 04         [12]  395 	jr	C,00103$
   01E1 7A            [ 4]  396 	ld	a,d
   01E2 B7            [ 4]  397 	or	a, a
   01E3 20 27         [12]  398 	jr	NZ,00104$
   01E5                     399 00103$:
                            400 ;src/main.c:118: memptr = cpct_getScreenPtr(VMEM,4,160);
   01E5 D5            [11]  401 	push	de
   01E6 21 04 A0      [10]  402 	ld	hl,#0xA004
   01E9 E5            [11]  403 	push	hl
   01EA 21 00 C0      [10]  404 	ld	hl,#0xC000
   01ED E5            [11]  405 	push	hl
   01EE CDr00r00      [17]  406 	call	_cpct_getScreenPtr
   01F1 D1            [10]  407 	pop	de
                            408 ;src/main.c:119: cpct_drawSolidBox(memptr, col, 2, 8);
   01F2 DD 75 06      [19]  409 	ld	6 (ix),l
   01F5 DD 74 07      [19]  410 	ld	7 (ix),h
   01F8 4D            [ 4]  411 	ld	c,l
   01F9 44            [ 4]  412 	ld	b,h
   01FA D5            [11]  413 	push	de
   01FB 21 02 08      [10]  414 	ld	hl,#0x0802
   01FE E5            [11]  415 	push	hl
   01FF DD 7E 08      [19]  416 	ld	a,8 (ix)
   0202 F5            [11]  417 	push	af
   0203 33            [ 6]  418 	inc	sp
   0204 C5            [11]  419 	push	bc
   0205 CDr00r00      [17]  420 	call	_cpct_drawSolidBox
   0208 F1            [10]  421 	pop	af
   0209 F1            [10]  422 	pop	af
   020A 33            [ 6]  423 	inc	sp
   020B D1            [10]  424 	pop	de
   020C                     425 00104$:
                            426 ;src/main.c:121: if(atk > 40 || atk <= 20){
   020C 3E 28         [ 7]  427 	ld	a,#0x28
   020E DD BE 04      [19]  428 	cp	a, 4 (ix)
   0211 3E 00         [ 7]  429 	ld	a,#0x00
   0213 DD 9E 05      [19]  430 	sbc	a, 5 (ix)
   0216 38 04         [12]  431 	jr	C,00106$
   0218 7A            [ 4]  432 	ld	a,d
   0219 B7            [ 4]  433 	or	a, a
   021A 20 27         [12]  434 	jr	NZ,00107$
   021C                     435 00106$:
                            436 ;src/main.c:122: memptr = cpct_getScreenPtr(VMEM,7,160);
   021C D5            [11]  437 	push	de
   021D 21 07 A0      [10]  438 	ld	hl,#0xA007
   0220 E5            [11]  439 	push	hl
   0221 21 00 C0      [10]  440 	ld	hl,#0xC000
   0224 E5            [11]  441 	push	hl
   0225 CDr00r00      [17]  442 	call	_cpct_getScreenPtr
   0228 D1            [10]  443 	pop	de
                            444 ;src/main.c:123: cpct_drawSolidBox(memptr, col, 2, 8);
   0229 DD 75 06      [19]  445 	ld	6 (ix),l
   022C DD 74 07      [19]  446 	ld	7 (ix),h
   022F 4D            [ 4]  447 	ld	c,l
   0230 44            [ 4]  448 	ld	b,h
   0231 D5            [11]  449 	push	de
   0232 21 02 08      [10]  450 	ld	hl,#0x0802
   0235 E5            [11]  451 	push	hl
   0236 DD 7E 08      [19]  452 	ld	a,8 (ix)
   0239 F5            [11]  453 	push	af
   023A 33            [ 6]  454 	inc	sp
   023B C5            [11]  455 	push	bc
   023C CDr00r00      [17]  456 	call	_cpct_drawSolidBox
   023F F1            [10]  457 	pop	af
   0240 F1            [10]  458 	pop	af
   0241 33            [ 6]  459 	inc	sp
   0242 D1            [10]  460 	pop	de
   0243                     461 00107$:
                            462 ;src/main.c:125: if(atk <= 20){
   0243 7A            [ 4]  463 	ld	a,d
   0244 B7            [ 4]  464 	or	a, a
   0245 20 22         [12]  465 	jr	NZ,00111$
                            466 ;src/main.c:126: memptr = cpct_getScreenPtr(VMEM,10,160);
   0247 21 0A A0      [10]  467 	ld	hl,#0xA00A
   024A E5            [11]  468 	push	hl
   024B 21 00 C0      [10]  469 	ld	hl,#0xC000
   024E E5            [11]  470 	push	hl
   024F CDr00r00      [17]  471 	call	_cpct_getScreenPtr
                            472 ;src/main.c:127: cpct_drawSolidBox(memptr, col, 2, 8);
   0252 DD 75 06      [19]  473 	ld	6 (ix),l
   0255 DD 74 07      [19]  474 	ld	7 (ix),h
   0258 EB            [ 4]  475 	ex	de,hl
   0259 21 02 08      [10]  476 	ld	hl,#0x0802
   025C E5            [11]  477 	push	hl
   025D DD 7E 08      [19]  478 	ld	a,8 (ix)
   0260 F5            [11]  479 	push	af
   0261 33            [ 6]  480 	inc	sp
   0262 D5            [11]  481 	push	de
   0263 CDr00r00      [17]  482 	call	_cpct_drawSolidBox
   0266 F1            [10]  483 	pop	af
   0267 F1            [10]  484 	pop	af
   0268 33            [ 6]  485 	inc	sp
   0269                     486 00111$:
   0269 DD E1         [14]  487 	pop	ix
   026B C9            [10]  488 	ret
                            489 ;src/main.c:132: void drawVida(u8* life, u8* memptr){
                            490 ;	---------------------------------
                            491 ; Function drawVida
                            492 ; ---------------------------------
   026C                     493 _drawVida::
   026C DD E5         [15]  494 	push	ix
   026E DD 21 00 00   [14]  495 	ld	ix,#0
   0272 DD 39         [15]  496 	add	ix,sp
                            497 ;src/main.c:133: if(life >= 1){
   0274 DD 7E 04      [19]  498 	ld	a,4 (ix)
   0277 D6 01         [ 7]  499 	sub	a, #0x01
   0279 DD 7E 05      [19]  500 	ld	a,5 (ix)
   027C DE 00         [ 7]  501 	sbc	a, #0x00
   027E 38 1F         [12]  502 	jr	C,00102$
                            503 ;src/main.c:134: memptr = cpct_getScreenPtr(VMEM,55,160);
   0280 21 37 A0      [10]  504 	ld	hl,#0xA037
   0283 E5            [11]  505 	push	hl
   0284 21 00 C0      [10]  506 	ld	hl,#0xC000
   0287 E5            [11]  507 	push	hl
   0288 CDr00r00      [17]  508 	call	_cpct_getScreenPtr
                            509 ;src/main.c:135: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   028B DD 75 06      [19]  510 	ld	6 (ix),l
   028E DD 74 07      [19]  511 	ld	7 (ix),h
   0291 4D            [ 4]  512 	ld	c,l
   0292 44            [ 4]  513 	ld	b,h
   0293 11r00r00      [10]  514 	ld	de,#_corazon_lleno
   0296 21 04 08      [10]  515 	ld	hl,#0x0804
   0299 E5            [11]  516 	push	hl
   029A C5            [11]  517 	push	bc
   029B D5            [11]  518 	push	de
   029C CDr00r00      [17]  519 	call	_cpct_drawSpriteMasked
   029F                     520 00102$:
                            521 ;src/main.c:137: memptr = cpct_getScreenPtr(VMEM,60,160);
   029F 21 3C A0      [10]  522 	ld	hl,#0xA03C
   02A2 E5            [11]  523 	push	hl
   02A3 21 00 C0      [10]  524 	ld	hl,#0xC000
   02A6 E5            [11]  525 	push	hl
   02A7 CDr00r00      [17]  526 	call	_cpct_getScreenPtr
                            527 ;src/main.c:135: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   02AA DD 75 06      [19]  528 	ld	6 (ix),l
   02AD DD 74 07      [19]  529 	ld	7 (ix),h
   02B0 4D            [ 4]  530 	ld	c,l
   02B1 44            [ 4]  531 	ld	b,h
                            532 ;src/main.c:138: if(life >= 2)
   02B2 DD 7E 04      [19]  533 	ld	a,4 (ix)
   02B5 D6 02         [ 7]  534 	sub	a, #0x02
   02B7 DD 7E 05      [19]  535 	ld	a,5 (ix)
   02BA DE 00         [ 7]  536 	sbc	a, #0x00
   02BC 38 0E         [12]  537 	jr	C,00104$
                            538 ;src/main.c:139: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   02BE 11r00r00      [10]  539 	ld	de,#_corazon_lleno
   02C1 21 04 08      [10]  540 	ld	hl,#0x0804
   02C4 E5            [11]  541 	push	hl
   02C5 C5            [11]  542 	push	bc
   02C6 D5            [11]  543 	push	de
   02C7 CDr00r00      [17]  544 	call	_cpct_drawSpriteMasked
   02CA 18 0C         [12]  545 	jr	00105$
   02CC                     546 00104$:
                            547 ;src/main.c:141: cpct_drawSpriteMasked(corazon_roto, memptr, 4, 8);
   02CC 11r00r00      [10]  548 	ld	de,#_corazon_roto
   02CF 21 04 08      [10]  549 	ld	hl,#0x0804
   02D2 E5            [11]  550 	push	hl
   02D3 C5            [11]  551 	push	bc
   02D4 D5            [11]  552 	push	de
   02D5 CDr00r00      [17]  553 	call	_cpct_drawSpriteMasked
   02D8                     554 00105$:
                            555 ;src/main.c:142: memptr = cpct_getScreenPtr(VMEM,65,160);
   02D8 21 41 A0      [10]  556 	ld	hl,#0xA041
   02DB E5            [11]  557 	push	hl
   02DC 21 00 C0      [10]  558 	ld	hl,#0xC000
   02DF E5            [11]  559 	push	hl
   02E0 CDr00r00      [17]  560 	call	_cpct_getScreenPtr
                            561 ;src/main.c:135: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   02E3 DD 75 06      [19]  562 	ld	6 (ix),l
   02E6 DD 74 07      [19]  563 	ld	7 (ix),h
   02E9 EB            [ 4]  564 	ex	de,hl
                            565 ;src/main.c:143: if(life >= 3)
   02EA DD 7E 04      [19]  566 	ld	a,4 (ix)
   02ED D6 03         [ 7]  567 	sub	a, #0x03
   02EF DD 7E 05      [19]  568 	ld	a,5 (ix)
   02F2 DE 00         [ 7]  569 	sbc	a, #0x00
   02F4 38 0E         [12]  570 	jr	C,00107$
                            571 ;src/main.c:144: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   02F6 01r00r00      [10]  572 	ld	bc,#_corazon_lleno
   02F9 21 04 08      [10]  573 	ld	hl,#0x0804
   02FC E5            [11]  574 	push	hl
   02FD D5            [11]  575 	push	de
   02FE C5            [11]  576 	push	bc
   02FF CDr00r00      [17]  577 	call	_cpct_drawSpriteMasked
   0302 18 0C         [12]  578 	jr	00109$
   0304                     579 00107$:
                            580 ;src/main.c:146: cpct_drawSpriteMasked(corazon_roto, memptr, 4, 8);
   0304 01r00r00      [10]  581 	ld	bc,#_corazon_roto+0
   0307 21 04 08      [10]  582 	ld	hl,#0x0804
   030A E5            [11]  583 	push	hl
   030B D5            [11]  584 	push	de
   030C C5            [11]  585 	push	bc
   030D CDr00r00      [17]  586 	call	_cpct_drawSpriteMasked
   0310                     587 00109$:
   0310 DD E1         [14]  588 	pop	ix
   0312 C9            [10]  589 	ret
                            590 ;src/main.c:152: void game(){
                            591 ;	---------------------------------
                            592 ; Function game
                            593 ; ---------------------------------
   0313                     594 _game::
   0313 DD E5         [15]  595 	push	ix
   0315 DD 21 00 00   [14]  596 	ld	ix,#0
   0319 DD 39         [15]  597 	add	ix,sp
   031B 21 CC FF      [10]  598 	ld	hl,#-52
   031E 39            [11]  599 	add	hl,sp
   031F F9            [ 6]  600 	ld	sp,hl
                            601 ;src/main.c:153: TPlayer p = { 0,100,20,0,0,6,3 };
   0320 21 00 00      [10]  602 	ld	hl,#0x0000
   0323 39            [11]  603 	add	hl,sp
   0324 36 00         [10]  604 	ld	(hl),#0x00
   0326 21 00 00      [10]  605 	ld	hl,#0x0000
   0329 39            [11]  606 	add	hl,sp
   032A DD 75 E6      [19]  607 	ld	-26 (ix),l
   032D DD 74 E7      [19]  608 	ld	-25 (ix),h
   0330 DD 7E E6      [19]  609 	ld	a,-26 (ix)
   0333 C6 01         [ 7]  610 	add	a, #0x01
   0335 DD 77 ED      [19]  611 	ld	-19 (ix),a
   0338 DD 7E E7      [19]  612 	ld	a,-25 (ix)
   033B CE 00         [ 7]  613 	adc	a, #0x00
   033D DD 77 EE      [19]  614 	ld	-18 (ix),a
   0340 DD 6E ED      [19]  615 	ld	l,-19 (ix)
   0343 DD 66 EE      [19]  616 	ld	h,-18 (ix)
   0346 36 64         [10]  617 	ld	(hl),#0x64
   0348 DD 7E E6      [19]  618 	ld	a,-26 (ix)
   034B C6 02         [ 7]  619 	add	a, #0x02
   034D DD 77 EB      [19]  620 	ld	-21 (ix),a
   0350 DD 7E E7      [19]  621 	ld	a,-25 (ix)
   0353 CE 00         [ 7]  622 	adc	a, #0x00
   0355 DD 77 EC      [19]  623 	ld	-20 (ix),a
   0358 DD 6E EB      [19]  624 	ld	l,-21 (ix)
   035B DD 66 EC      [19]  625 	ld	h,-20 (ix)
   035E 36 14         [10]  626 	ld	(hl),#0x14
   0360 23            [ 6]  627 	inc	hl
   0361 36 00         [10]  628 	ld	(hl),#0x00
   0363 DD 7E E6      [19]  629 	ld	a,-26 (ix)
   0366 C6 04         [ 7]  630 	add	a, #0x04
   0368 DD 77 FE      [19]  631 	ld	-2 (ix),a
   036B DD 7E E7      [19]  632 	ld	a,-25 (ix)
   036E CE 00         [ 7]  633 	adc	a, #0x00
   0370 DD 77 FF      [19]  634 	ld	-1 (ix),a
   0373 DD 6E FE      [19]  635 	ld	l,-2 (ix)
   0376 DD 66 FF      [19]  636 	ld	h,-1 (ix)
   0379 AF            [ 4]  637 	xor	a, a
   037A 77            [ 7]  638 	ld	(hl), a
   037B 23            [ 6]  639 	inc	hl
   037C 77            [ 7]  640 	ld	(hl), a
   037D DD 7E E6      [19]  641 	ld	a,-26 (ix)
   0380 C6 06         [ 7]  642 	add	a, #0x06
   0382 DD 77 FC      [19]  643 	ld	-4 (ix),a
   0385 DD 7E E7      [19]  644 	ld	a,-25 (ix)
   0388 CE 00         [ 7]  645 	adc	a, #0x00
   038A DD 77 FD      [19]  646 	ld	-3 (ix),a
   038D DD 6E FC      [19]  647 	ld	l,-4 (ix)
   0390 DD 66 FD      [19]  648 	ld	h,-3 (ix)
   0393 AF            [ 4]  649 	xor	a, a
   0394 77            [ 7]  650 	ld	(hl), a
   0395 23            [ 6]  651 	inc	hl
   0396 77            [ 7]  652 	ld	(hl), a
   0397 DD 7E E6      [19]  653 	ld	a,-26 (ix)
   039A C6 08         [ 7]  654 	add	a, #0x08
   039C DD 77 F1      [19]  655 	ld	-15 (ix),a
   039F DD 7E E7      [19]  656 	ld	a,-25 (ix)
   03A2 CE 00         [ 7]  657 	adc	a, #0x00
   03A4 DD 77 F2      [19]  658 	ld	-14 (ix),a
   03A7 DD 6E F1      [19]  659 	ld	l,-15 (ix)
   03AA DD 66 F2      [19]  660 	ld	h,-14 (ix)
   03AD 36 06         [10]  661 	ld	(hl),#0x06
   03AF 23            [ 6]  662 	inc	hl
   03B0 36 00         [10]  663 	ld	(hl),#0x00
   03B2 DD 7E E6      [19]  664 	ld	a,-26 (ix)
   03B5 C6 0A         [ 7]  665 	add	a, #0x0A
   03B7 DD 77 EF      [19]  666 	ld	-17 (ix),a
   03BA DD 7E E7      [19]  667 	ld	a,-25 (ix)
   03BD CE 00         [ 7]  668 	adc	a, #0x00
   03BF DD 77 F0      [19]  669 	ld	-16 (ix),a
   03C2 DD 6E EF      [19]  670 	ld	l,-17 (ix)
   03C5 DD 66 F0      [19]  671 	ld	h,-16 (ix)
   03C8 36 03         [10]  672 	ld	(hl),#0x03
   03CA 23            [ 6]  673 	inc	hl
   03CB 36 00         [10]  674 	ld	(hl),#0x00
                            675 ;src/main.c:154: TEnemy  e = { 55,100,0,0 };
   03CD 21 0C 00      [10]  676 	ld	hl,#0x000C
   03D0 39            [11]  677 	add	hl,sp
   03D1 36 37         [10]  678 	ld	(hl),#0x37
   03D3 21 0C 00      [10]  679 	ld	hl,#0x000C
   03D6 39            [11]  680 	add	hl,sp
   03D7 DD 75 FA      [19]  681 	ld	-6 (ix),l
   03DA DD 74 FB      [19]  682 	ld	-5 (ix),h
   03DD DD 7E FA      [19]  683 	ld	a,-6 (ix)
   03E0 C6 01         [ 7]  684 	add	a, #0x01
   03E2 DD 77 F8      [19]  685 	ld	-8 (ix),a
   03E5 DD 7E FB      [19]  686 	ld	a,-5 (ix)
   03E8 CE 00         [ 7]  687 	adc	a, #0x00
   03EA DD 77 F9      [19]  688 	ld	-7 (ix),a
   03ED DD 6E F8      [19]  689 	ld	l,-8 (ix)
   03F0 DD 66 F9      [19]  690 	ld	h,-7 (ix)
   03F3 36 64         [10]  691 	ld	(hl),#0x64
   03F5 DD 7E FA      [19]  692 	ld	a,-6 (ix)
   03F8 C6 02         [ 7]  693 	add	a, #0x02
   03FA DD 77 E9      [19]  694 	ld	-23 (ix),a
   03FD DD 7E FB      [19]  695 	ld	a,-5 (ix)
   0400 CE 00         [ 7]  696 	adc	a, #0x00
   0402 DD 77 EA      [19]  697 	ld	-22 (ix),a
   0405 DD 6E E9      [19]  698 	ld	l,-23 (ix)
   0408 DD 66 EA      [19]  699 	ld	h,-22 (ix)
   040B AF            [ 4]  700 	xor	a, a
   040C 77            [ 7]  701 	ld	(hl), a
   040D 23            [ 6]  702 	inc	hl
   040E 77            [ 7]  703 	ld	(hl), a
   040F DD 7E FA      [19]  704 	ld	a,-6 (ix)
   0412 C6 04         [ 7]  705 	add	a, #0x04
   0414 6F            [ 4]  706 	ld	l,a
   0415 DD 7E FB      [19]  707 	ld	a,-5 (ix)
   0418 CE 00         [ 7]  708 	adc	a, #0x00
   041A 67            [ 4]  709 	ld	h,a
   041B AF            [ 4]  710 	xor	a, a
   041C 77            [ 7]  711 	ld	(hl), a
   041D 23            [ 6]  712 	inc	hl
   041E 77            [ 7]  713 	ld	(hl), a
                            714 ;src/main.c:155: TEnemy pr = { 0,0,1,0 };
   041F 21 14 00      [10]  715 	ld	hl,#0x0014
   0422 39            [11]  716 	add	hl,sp
   0423 36 00         [10]  717 	ld	(hl),#0x00
   0425 21 14 00      [10]  718 	ld	hl,#0x0014
   0428 39            [11]  719 	add	hl,sp
   0429 5D            [ 4]  720 	ld	e,l
   042A 54            [ 4]  721 	ld	d,h
   042B 23            [ 6]  722 	inc	hl
   042C 36 00         [10]  723 	ld	(hl),#0x00
   042E 6B            [ 4]  724 	ld	l, e
   042F 62            [ 4]  725 	ld	h, d
   0430 23            [ 6]  726 	inc	hl
   0431 23            [ 6]  727 	inc	hl
   0432 36 01         [10]  728 	ld	(hl),#0x01
   0434 23            [ 6]  729 	inc	hl
   0435 36 00         [10]  730 	ld	(hl),#0x00
   0437 21 04 00      [10]  731 	ld	hl,#0x0004
   043A 19            [11]  732 	add	hl,de
   043B AF            [ 4]  733 	xor	a, a
   043C 77            [ 7]  734 	ld	(hl), a
   043D 23            [ 6]  735 	inc	hl
   043E 77            [ 7]  736 	ld	(hl), a
                            737 ;src/main.c:160: cpct_clearScreen(0);
   043F 21 00 40      [10]  738 	ld	hl,#0x4000
   0442 E5            [11]  739 	push	hl
   0443 AF            [ 4]  740 	xor	a, a
   0444 F5            [11]  741 	push	af
   0445 33            [ 6]  742 	inc	sp
   0446 26 C0         [ 7]  743 	ld	h, #0xC0
   0448 E5            [11]  744 	push	hl
   0449 CDr00r00      [17]  745 	call	_cpct_memset
                            746 ;src/main.c:162: while (1){
   044C                     747 00169$:
                            748 ;src/main.c:165: cpct_waitVSYNC();
   044C CDr00r00      [17]  749 	call	_cpct_waitVSYNC
                            750 ;src/main.c:168: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   044F DD 6E ED      [19]  751 	ld	l,-19 (ix)
   0452 DD 66 EE      [19]  752 	ld	h,-18 (ix)
   0455 46            [ 7]  753 	ld	b,(hl)
   0456 DD 6E E6      [19]  754 	ld	l,-26 (ix)
   0459 DD 66 E7      [19]  755 	ld	h,-25 (ix)
   045C 4E            [ 7]  756 	ld	c, (hl)
   045D C5            [11]  757 	push	bc
   045E 21 00 C0      [10]  758 	ld	hl,#0xC000
   0461 E5            [11]  759 	push	hl
   0462 CDr00r00      [17]  760 	call	_cpct_getScreenPtr
   0465 EB            [ 4]  761 	ex	de,hl
                            762 ;src/main.c:169: if(p.atk <= 20)
   0466 DD 6E EB      [19]  763 	ld	l,-21 (ix)
   0469 DD 66 EC      [19]  764 	ld	h,-20 (ix)
   046C 46            [ 7]  765 	ld	b,(hl)
   046D 23            [ 6]  766 	inc	hl
   046E 66            [ 7]  767 	ld	h,(hl)
                            768 ;src/main.c:170: cpct_drawSolidBox(memptr,0,4,16);
                            769 ;src/main.c:169: if(p.atk <= 20)
   046F 3E 14         [ 7]  770 	ld	a,#0x14
   0471 B8            [ 4]  771 	cp	a, b
   0472 3E 00         [ 7]  772 	ld	a,#0x00
   0474 9C            [ 4]  773 	sbc	a, h
   0475 38 10         [12]  774 	jr	C,00102$
                            775 ;src/main.c:170: cpct_drawSolidBox(memptr,0,4,16);
   0477 21 04 10      [10]  776 	ld	hl,#0x1004
   047A E5            [11]  777 	push	hl
   047B AF            [ 4]  778 	xor	a, a
   047C F5            [11]  779 	push	af
   047D 33            [ 6]  780 	inc	sp
   047E D5            [11]  781 	push	de
   047F CDr00r00      [17]  782 	call	_cpct_drawSolidBox
   0482 F1            [10]  783 	pop	af
   0483 F1            [10]  784 	pop	af
   0484 33            [ 6]  785 	inc	sp
   0485 18 0E         [12]  786 	jr	00103$
   0487                     787 00102$:
                            788 ;src/main.c:172: cpct_drawSolidBox(memptr,0,5,16);
   0487 21 05 10      [10]  789 	ld	hl,#0x1005
   048A E5            [11]  790 	push	hl
   048B AF            [ 4]  791 	xor	a, a
   048C F5            [11]  792 	push	af
   048D 33            [ 6]  793 	inc	sp
   048E D5            [11]  794 	push	de
   048F CDr00r00      [17]  795 	call	_cpct_drawSolidBox
   0492 F1            [10]  796 	pop	af
   0493 F1            [10]  797 	pop	af
   0494 33            [ 6]  798 	inc	sp
   0495                     799 00103$:
                            800 ;src/main.c:174: memptr = cpct_getScreenPtr(VMEM,55,160);
   0495 21 37 A0      [10]  801 	ld	hl,#0xA037
   0498 E5            [11]  802 	push	hl
   0499 21 00 C0      [10]  803 	ld	hl,#0xC000
   049C E5            [11]  804 	push	hl
   049D CDr00r00      [17]  805 	call	_cpct_getScreenPtr
                            806 ;src/main.c:175: cpct_drawSolidBox(memptr,0,10,16);
   04A0 EB            [ 4]  807 	ex	de,hl
   04A1 21 0A 10      [10]  808 	ld	hl,#0x100A
   04A4 E5            [11]  809 	push	hl
   04A5 AF            [ 4]  810 	xor	a, a
   04A6 F5            [11]  811 	push	af
   04A7 33            [ 6]  812 	inc	sp
   04A8 D5            [11]  813 	push	de
   04A9 CDr00r00      [17]  814 	call	_cpct_drawSolidBox
   04AC F1            [10]  815 	pop	af
   04AD F1            [10]  816 	pop	af
   04AE 33            [ 6]  817 	inc	sp
                            818 ;src/main.c:177: memptr = cpct_getScreenPtr(VMEM,e.x,e.y);
   04AF DD 6E F8      [19]  819 	ld	l,-8 (ix)
   04B2 DD 66 F9      [19]  820 	ld	h,-7 (ix)
   04B5 46            [ 7]  821 	ld	b,(hl)
   04B6 DD 6E FA      [19]  822 	ld	l,-6 (ix)
   04B9 DD 66 FB      [19]  823 	ld	h,-5 (ix)
   04BC 4E            [ 7]  824 	ld	c, (hl)
   04BD C5            [11]  825 	push	bc
   04BE 21 00 C0      [10]  826 	ld	hl,#0xC000
   04C1 E5            [11]  827 	push	hl
   04C2 CDr00r00      [17]  828 	call	_cpct_getScreenPtr
   04C5 4D            [ 4]  829 	ld	c, l
   04C6 44            [ 4]  830 	ld	b, h
                            831 ;src/main.c:178: if(e.vivo == 0)
   04C7 DD 6E E9      [19]  832 	ld	l,-23 (ix)
   04CA DD 66 EA      [19]  833 	ld	h,-22 (ix)
   04CD 56            [ 7]  834 	ld	d,(hl)
   04CE 23            [ 6]  835 	inc	hl
   04CF 7E            [ 7]  836 	ld	a, (hl)
   04D0 B2            [ 4]  837 	or	a,d
   04D1 20 0E         [12]  838 	jr	NZ,00105$
                            839 ;src/main.c:179: cpct_drawSolidBox(memptr,0,4,16);
   04D3 21 04 10      [10]  840 	ld	hl,#0x1004
   04D6 E5            [11]  841 	push	hl
   04D7 AF            [ 4]  842 	xor	a, a
   04D8 F5            [11]  843 	push	af
   04D9 33            [ 6]  844 	inc	sp
   04DA C5            [11]  845 	push	bc
   04DB CDr00r00      [17]  846 	call	_cpct_drawSolidBox
   04DE F1            [10]  847 	pop	af
   04DF F1            [10]  848 	pop	af
   04E0 33            [ 6]  849 	inc	sp
   04E1                     850 00105$:
                            851 ;src/main.c:182: if(p.col != 2){
   04E1 DD 6E FC      [19]  852 	ld	l,-4 (ix)
   04E4 DD 66 FD      [19]  853 	ld	h,-3 (ix)
   04E7 56            [ 7]  854 	ld	d,(hl)
   04E8 23            [ 6]  855 	inc	hl
   04E9 66            [ 7]  856 	ld	h,(hl)
   04EA 7A            [ 4]  857 	ld	a,d
   04EB D6 02         [ 7]  858 	sub	a,#0x02
   04ED 20 04         [12]  859 	jr	NZ,00297$
   04EF B4            [ 4]  860 	or	a,h
   04F0 CAr8Er06      [10]  861 	jp	Z,00146$
   04F3                     862 00297$:
                            863 ;src/main.c:183: cpct_scanKeyboard_f();
   04F3 CDr00r00      [17]  864 	call	_cpct_scanKeyboard_f
                            865 ;src/main.c:184: if(cpct_isKeyPressed(Key_Space) && p.atk >= 20){
   04F6 21 05 80      [10]  866 	ld	hl,#0x8005
   04F9 CDr00r00      [17]  867 	call	_cpct_isKeyPressed
   04FC DD 75 E8      [19]  868 	ld	-24 (ix),l
                            869 ;src/main.c:169: if(p.atk <= 20)
   04FF DD 6E EB      [19]  870 	ld	l,-21 (ix)
   0502 DD 66 EC      [19]  871 	ld	h,-20 (ix)
   0505 7E            [ 7]  872 	ld	a,(hl)
   0506 DD 77 F6      [19]  873 	ld	-10 (ix),a
   0509 23            [ 6]  874 	inc	hl
   050A 7E            [ 7]  875 	ld	a,(hl)
   050B DD 77 F7      [19]  876 	ld	-9 (ix),a
                            877 ;src/main.c:184: if(cpct_isKeyPressed(Key_Space) && p.atk >= 20){
   050E DD 7E F6      [19]  878 	ld	a,-10 (ix)
   0511 D6 14         [ 7]  879 	sub	a, #0x14
   0513 DD 7E F7      [19]  880 	ld	a,-9 (ix)
   0516 DE 00         [ 7]  881 	sbc	a, #0x00
   0518 3E 00         [ 7]  882 	ld	a,#0x00
   051A 17            [ 4]  883 	rla
   051B DD 77 F5      [19]  884 	ld	-11 (ix),a
                            885 ;src/main.c:188: p.atk += 1;
   051E DD 7E F6      [19]  886 	ld	a,-10 (ix)
   0521 C6 01         [ 7]  887 	add	a, #0x01
   0523 DD 77 F3      [19]  888 	ld	-13 (ix),a
   0526 DD 7E F7      [19]  889 	ld	a,-9 (ix)
   0529 CE 00         [ 7]  890 	adc	a, #0x00
   052B DD 77 F4      [19]  891 	ld	-12 (ix),a
                            892 ;src/main.c:184: if(cpct_isKeyPressed(Key_Space) && p.atk >= 20){
   052E DD 7E E8      [19]  893 	ld	a,-24 (ix)
   0531 B7            [ 4]  894 	or	a, a
   0532 28 5D         [12]  895 	jr	Z,00140$
   0534 DD 7E F5      [19]  896 	ld	a,-11 (ix)
   0537 B7            [ 4]  897 	or	a, a
   0538 20 57         [12]  898 	jr	NZ,00140$
                            899 ;src/main.c:185: if(p.atk >= 50)
   053A DD 7E F6      [19]  900 	ld	a,-10 (ix)
   053D D6 32         [ 7]  901 	sub	a, #0x32
   053F DD 7E F7      [19]  902 	ld	a,-9 (ix)
   0542 DE 00         [ 7]  903 	sbc	a, #0x00
   0544 38 0C         [12]  904 	jr	C,00107$
                            905 ;src/main.c:186: p.atk = 0;
   0546 DD 6E EB      [19]  906 	ld	l,-21 (ix)
   0549 DD 66 EC      [19]  907 	ld	h,-20 (ix)
   054C AF            [ 4]  908 	xor	a, a
   054D 77            [ 7]  909 	ld	(hl), a
   054E 23            [ 6]  910 	inc	hl
   054F 77            [ 7]  911 	ld	(hl), a
   0550 18 0F         [12]  912 	jr	00108$
   0552                     913 00107$:
                            914 ;src/main.c:188: p.atk += 1;
   0552 DD 6E EB      [19]  915 	ld	l,-21 (ix)
   0555 DD 66 EC      [19]  916 	ld	h,-20 (ix)
   0558 DD 7E F3      [19]  917 	ld	a,-13 (ix)
   055B 77            [ 7]  918 	ld	(hl),a
   055C 23            [ 6]  919 	inc	hl
   055D DD 7E F4      [19]  920 	ld	a,-12 (ix)
   0560 77            [ 7]  921 	ld	(hl),a
   0561                     922 00108$:
                            923 ;src/main.c:189: if(cpct_isKeyPressed(Key_CursorRight))
   0561 21 00 02      [10]  924 	ld	hl,#0x0200
   0564 CDr00r00      [17]  925 	call	_cpct_isKeyPressed
   0567 7D            [ 4]  926 	ld	a,l
   0568 B7            [ 4]  927 	or	a, a
   0569 28 0D         [12]  928 	jr	Z,00112$
                            929 ;src/main.c:190: p.dir = 0;
   056B DD 6E FE      [19]  930 	ld	l,-2 (ix)
   056E DD 66 FF      [19]  931 	ld	h,-1 (ix)
   0571 AF            [ 4]  932 	xor	a, a
   0572 77            [ 7]  933 	ld	(hl), a
   0573 23            [ 6]  934 	inc	hl
   0574 77            [ 7]  935 	ld	(hl), a
   0575 C3rCBr06      [10]  936 	jp	00147$
   0578                     937 00112$:
                            938 ;src/main.c:191: else if(cpct_isKeyPressed(Key_CursorLeft))
   0578 21 01 01      [10]  939 	ld	hl,#0x0101
   057B CDr00r00      [17]  940 	call	_cpct_isKeyPressed
   057E 7D            [ 4]  941 	ld	a,l
   057F B7            [ 4]  942 	or	a, a
   0580 CArCBr06      [10]  943 	jp	Z,00147$
                            944 ;src/main.c:192: p.dir = 1;
   0583 DD 6E FE      [19]  945 	ld	l,-2 (ix)
   0586 DD 66 FF      [19]  946 	ld	h,-1 (ix)
   0589 36 01         [10]  947 	ld	(hl),#0x01
   058B 23            [ 6]  948 	inc	hl
   058C 36 00         [10]  949 	ld	(hl),#0x00
   058E C3rCBr06      [10]  950 	jp	00147$
   0591                     951 00140$:
                            952 ;src/main.c:194: if(p.atk < 20)
   0591 DD 7E F5      [19]  953 	ld	a,-11 (ix)
   0594 B7            [ 4]  954 	or	a, a
   0595 28 11         [12]  955 	jr	Z,00115$
                            956 ;src/main.c:195: p.atk += 1;
   0597 DD 6E EB      [19]  957 	ld	l,-21 (ix)
   059A DD 66 EC      [19]  958 	ld	h,-20 (ix)
   059D DD 7E F3      [19]  959 	ld	a,-13 (ix)
   05A0 77            [ 7]  960 	ld	(hl),a
   05A1 23            [ 6]  961 	inc	hl
   05A2 DD 7E F4      [19]  962 	ld	a,-12 (ix)
   05A5 77            [ 7]  963 	ld	(hl),a
   05A6 18 0B         [12]  964 	jr	00116$
   05A8                     965 00115$:
                            966 ;src/main.c:197: p.atk = 20;
   05A8 DD 6E EB      [19]  967 	ld	l,-21 (ix)
   05AB DD 66 EC      [19]  968 	ld	h,-20 (ix)
   05AE 36 14         [10]  969 	ld	(hl),#0x14
   05B0 23            [ 6]  970 	inc	hl
   05B1 36 00         [10]  971 	ld	(hl),#0x00
   05B3                     972 00116$:
                            973 ;src/main.c:198: if(cpct_isKeyPressed(Key_CursorRight) && p.x < 76 ){
   05B3 21 00 02      [10]  974 	ld	hl,#0x0200
   05B6 CDr00r00      [17]  975 	call	_cpct_isKeyPressed
   05B9 7D            [ 4]  976 	ld	a,l
   05BA B7            [ 4]  977 	or	a, a
   05BB 28 32         [12]  978 	jr	Z,00136$
   05BD DD 6E E6      [19]  979 	ld	l,-26 (ix)
   05C0 DD 66 E7      [19]  980 	ld	h,-25 (ix)
   05C3 56            [ 7]  981 	ld	d,(hl)
   05C4 7A            [ 4]  982 	ld	a,d
   05C5 D6 4C         [ 7]  983 	sub	a, #0x4C
   05C7 30 26         [12]  984 	jr	NC,00136$
                            985 ;src/main.c:199: if(p.col != 2)
   05C9 DD 6E FC      [19]  986 	ld	l,-4 (ix)
   05CC DD 66 FD      [19]  987 	ld	h,-3 (ix)
   05CF 5E            [ 7]  988 	ld	e,(hl)
   05D0 23            [ 6]  989 	inc	hl
   05D1 66            [ 7]  990 	ld	h,(hl)
   05D2 7B            [ 4]  991 	ld	a,e
   05D3 D6 02         [ 7]  992 	sub	a,#0x02
   05D5 20 03         [12]  993 	jr	NZ,00298$
   05D7 B4            [ 4]  994 	or	a,h
   05D8 28 08         [12]  995 	jr	Z,00118$
   05DA                     996 00298$:
                            997 ;src/main.c:200: p.x += 1;
   05DA 14            [ 4]  998 	inc	d
   05DB DD 6E E6      [19]  999 	ld	l,-26 (ix)
   05DE DD 66 E7      [19] 1000 	ld	h,-25 (ix)
   05E1 72            [ 7] 1001 	ld	(hl),d
   05E2                    1002 00118$:
                           1003 ;src/main.c:201: p.dir = 0;
   05E2 DD 6E FE      [19] 1004 	ld	l,-2 (ix)
   05E5 DD 66 FF      [19] 1005 	ld	h,-1 (ix)
   05E8 AF            [ 4] 1006 	xor	a, a
   05E9 77            [ 7] 1007 	ld	(hl), a
   05EA 23            [ 6] 1008 	inc	hl
   05EB 77            [ 7] 1009 	ld	(hl), a
   05EC C3rCBr06      [10] 1010 	jp	00147$
   05EF                    1011 00136$:
                           1012 ;src/main.c:202: }else if(cpct_isKeyPressed(Key_CursorLeft) && p.x > 0 ){
   05EF 21 01 01      [10] 1013 	ld	hl,#0x0101
   05F2 CDr00r00      [17] 1014 	call	_cpct_isKeyPressed
   05F5 7D            [ 4] 1015 	ld	a,l
   05F6 B7            [ 4] 1016 	or	a, a
   05F7 28 32         [12] 1017 	jr	Z,00132$
   05F9 DD 6E E6      [19] 1018 	ld	l,-26 (ix)
   05FC DD 66 E7      [19] 1019 	ld	h,-25 (ix)
   05FF 56            [ 7] 1020 	ld	d,(hl)
   0600 7A            [ 4] 1021 	ld	a,d
   0601 B7            [ 4] 1022 	or	a, a
   0602 28 27         [12] 1023 	jr	Z,00132$
                           1024 ;src/main.c:203: if(p.col != 2)
   0604 DD 6E FC      [19] 1025 	ld	l,-4 (ix)
   0607 DD 66 FD      [19] 1026 	ld	h,-3 (ix)
   060A 5E            [ 7] 1027 	ld	e,(hl)
   060B 23            [ 6] 1028 	inc	hl
   060C 66            [ 7] 1029 	ld	h,(hl)
   060D 7B            [ 4] 1030 	ld	a,e
   060E D6 02         [ 7] 1031 	sub	a,#0x02
   0610 20 03         [12] 1032 	jr	NZ,00299$
   0612 B4            [ 4] 1033 	or	a,h
   0613 28 08         [12] 1034 	jr	Z,00120$
   0615                    1035 00299$:
                           1036 ;src/main.c:204: p.x -= 1;
   0615 15            [ 4] 1037 	dec	d
   0616 DD 6E E6      [19] 1038 	ld	l,-26 (ix)
   0619 DD 66 E7      [19] 1039 	ld	h,-25 (ix)
   061C 72            [ 7] 1040 	ld	(hl),d
   061D                    1041 00120$:
                           1042 ;src/main.c:205: p.dir = 1;
   061D DD 6E FE      [19] 1043 	ld	l,-2 (ix)
   0620 DD 66 FF      [19] 1044 	ld	h,-1 (ix)
   0623 36 01         [10] 1045 	ld	(hl),#0x01
   0625 23            [ 6] 1046 	inc	hl
   0626 36 00         [10] 1047 	ld	(hl),#0x00
   0628 C3rCBr06      [10] 1048 	jp	00147$
   062B                    1049 00132$:
                           1050 ;src/main.c:206: }else if(cpct_isKeyPressed(Key_CursorDown) && p.y < 184 ){
   062B 21 00 04      [10] 1051 	ld	hl,#0x0400
   062E CDr00r00      [17] 1052 	call	_cpct_isKeyPressed
   0631 7D            [ 4] 1053 	ld	a,l
   0632 B7            [ 4] 1054 	or	a, a
   0633 28 22         [12] 1055 	jr	Z,00128$
                           1056 ;src/main.c:168: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   0635 DD 6E ED      [19] 1057 	ld	l,-19 (ix)
   0638 DD 66 EE      [19] 1058 	ld	h,-18 (ix)
   063B 56            [ 7] 1059 	ld	d,(hl)
                           1060 ;src/main.c:206: }else if(cpct_isKeyPressed(Key_CursorDown) && p.y < 184 ){
   063C 7A            [ 4] 1061 	ld	a,d
   063D D6 B8         [ 7] 1062 	sub	a, #0xB8
   063F 30 16         [12] 1063 	jr	NC,00128$
                           1064 ;src/main.c:207: p.y += 2;
   0641 14            [ 4] 1065 	inc	d
   0642 14            [ 4] 1066 	inc	d
   0643 DD 6E ED      [19] 1067 	ld	l,-19 (ix)
   0646 DD 66 EE      [19] 1068 	ld	h,-18 (ix)
   0649 72            [ 7] 1069 	ld	(hl),d
                           1070 ;src/main.c:208: p.dir = 2;
   064A DD 6E FE      [19] 1071 	ld	l,-2 (ix)
   064D DD 66 FF      [19] 1072 	ld	h,-1 (ix)
   0650 36 02         [10] 1073 	ld	(hl),#0x02
   0652 23            [ 6] 1074 	inc	hl
   0653 36 00         [10] 1075 	ld	(hl),#0x00
   0655 18 74         [12] 1076 	jr	00147$
   0657                    1077 00128$:
                           1078 ;src/main.c:209: }else if(cpct_isKeyPressed(Key_CursorUp) && p.y > 0 ){
   0657 21 00 01      [10] 1079 	ld	hl,#0x0100
   065A CDr00r00      [17] 1080 	call	_cpct_isKeyPressed
   065D 7D            [ 4] 1081 	ld	a,l
   065E B7            [ 4] 1082 	or	a, a
   065F 28 20         [12] 1083 	jr	Z,00124$
                           1084 ;src/main.c:168: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   0661 DD 6E ED      [19] 1085 	ld	l,-19 (ix)
   0664 DD 66 EE      [19] 1086 	ld	h,-18 (ix)
   0667 7E            [ 7] 1087 	ld	a,(hl)
                           1088 ;src/main.c:209: }else if(cpct_isKeyPressed(Key_CursorUp) && p.y > 0 ){
   0668 B7            [ 4] 1089 	or	a, a
   0669 28 16         [12] 1090 	jr	Z,00124$
                           1091 ;src/main.c:210: p.y -= 2;
   066B C6 FE         [ 7] 1092 	add	a,#0xFE
   066D DD 6E ED      [19] 1093 	ld	l,-19 (ix)
   0670 DD 66 EE      [19] 1094 	ld	h,-18 (ix)
   0673 77            [ 7] 1095 	ld	(hl),a
                           1096 ;src/main.c:211: p.dir = 3;
   0674 DD 6E FE      [19] 1097 	ld	l,-2 (ix)
   0677 DD 66 FF      [19] 1098 	ld	h,-1 (ix)
   067A 36 03         [10] 1099 	ld	(hl),#0x03
   067C 23            [ 6] 1100 	inc	hl
   067D 36 00         [10] 1101 	ld	(hl),#0x00
   067F 18 4A         [12] 1102 	jr	00147$
   0681                    1103 00124$:
                           1104 ;src/main.c:212: }else  if(cpct_isKeyPressed(Key_Esc)){
   0681 21 08 04      [10] 1105 	ld	hl,#0x0408
   0684 CDr00r00      [17] 1106 	call	_cpct_isKeyPressed
   0687 7D            [ 4] 1107 	ld	a,l
   0688 B7            [ 4] 1108 	or	a, a
   0689 28 40         [12] 1109 	jr	Z,00147$
                           1110 ;src/main.c:213: return;
   068B C3r8Cr08      [10] 1111 	jp	00171$
   068E                    1112 00146$:
                           1113 ;src/main.c:217: p.x -= 2;
   068E DD 6E E6      [19] 1114 	ld	l,-26 (ix)
   0691 DD 66 E7      [19] 1115 	ld	h,-25 (ix)
   0694 7E            [ 7] 1116 	ld	a,(hl)
   0695 C6 FE         [ 7] 1117 	add	a,#0xFE
   0697 DD 6E E6      [19] 1118 	ld	l,-26 (ix)
   069A DD 66 E7      [19] 1119 	ld	h,-25 (ix)
   069D 77            [ 7] 1120 	ld	(hl),a
                           1121 ;src/main.c:218: p.rebote -= 2;
   069E DD 6E F1      [19] 1122 	ld	l,-15 (ix)
   06A1 DD 66 F2      [19] 1123 	ld	h,-14 (ix)
   06A4 5E            [ 7] 1124 	ld	e,(hl)
   06A5 23            [ 6] 1125 	inc	hl
   06A6 56            [ 7] 1126 	ld	d,(hl)
   06A7 1B            [ 6] 1127 	dec	de
   06A8 1B            [ 6] 1128 	dec	de
   06A9 DD 6E F1      [19] 1129 	ld	l,-15 (ix)
   06AC DD 66 F2      [19] 1130 	ld	h,-14 (ix)
   06AF 73            [ 7] 1131 	ld	(hl),e
   06B0 23            [ 6] 1132 	inc	hl
   06B1 72            [ 7] 1133 	ld	(hl),d
                           1134 ;src/main.c:219: if(p.rebote == 0){
   06B2 7A            [ 4] 1135 	ld	a,d
   06B3 B3            [ 4] 1136 	or	a,e
   06B4 20 15         [12] 1137 	jr	NZ,00147$
                           1138 ;src/main.c:220: p.rebote = 6;
   06B6 DD 6E F1      [19] 1139 	ld	l,-15 (ix)
   06B9 DD 66 F2      [19] 1140 	ld	h,-14 (ix)
   06BC 36 06         [10] 1141 	ld	(hl),#0x06
   06BE 23            [ 6] 1142 	inc	hl
   06BF 36 00         [10] 1143 	ld	(hl),#0x00
                           1144 ;src/main.c:221: p.col = 0;
   06C1 DD 6E FC      [19] 1145 	ld	l,-4 (ix)
   06C4 DD 66 FD      [19] 1146 	ld	h,-3 (ix)
   06C7 AF            [ 4] 1147 	xor	a, a
   06C8 77            [ 7] 1148 	ld	(hl), a
   06C9 23            [ 6] 1149 	inc	hl
   06CA 77            [ 7] 1150 	ld	(hl), a
   06CB                    1151 00147$:
                           1152 ;src/main.c:226: sprite = checkSprite(p.atk,p.dir);
   06CB DD 6E FE      [19] 1153 	ld	l,-2 (ix)
   06CE DD 66 FF      [19] 1154 	ld	h,-1 (ix)
   06D1 4E            [ 7] 1155 	ld	c,(hl)
   06D2 23            [ 6] 1156 	inc	hl
   06D3 46            [ 7] 1157 	ld	b,(hl)
   06D4 DD 6E EB      [19] 1158 	ld	l,-21 (ix)
   06D7 DD 66 EC      [19] 1159 	ld	h,-20 (ix)
   06DA 5E            [ 7] 1160 	ld	e,(hl)
   06DB 23            [ 6] 1161 	inc	hl
   06DC 56            [ 7] 1162 	ld	d,(hl)
   06DD C5            [11] 1163 	push	bc
   06DE D5            [11] 1164 	push	de
   06DF CDr51r01      [17] 1165 	call	_checkSprite
   06E2 F1            [10] 1166 	pop	af
   06E3 F1            [10] 1167 	pop	af
   06E4 DD 75 DE      [19] 1168 	ld	-34 (ix),l
   06E7 DD 74 DF      [19] 1169 	ld	-33 (ix),h
                           1170 ;src/main.c:228: if(p.col != 2 && e.vivo == 0){
   06EA DD 6E FC      [19] 1171 	ld	l,-4 (ix)
   06ED DD 66 FD      [19] 1172 	ld	h,-3 (ix)
   06F0 56            [ 7] 1173 	ld	d,(hl)
   06F1 23            [ 6] 1174 	inc	hl
   06F2 66            [ 7] 1175 	ld	h,(hl)
   06F3 7A            [ 4] 1176 	ld	a,d
   06F4 D6 02         [ 7] 1177 	sub	a,#0x02
   06F6 20 04         [12] 1178 	jr	NZ,00300$
   06F8 B4            [ 4] 1179 	or	a,h
   06F9 CAr94r07      [10] 1180 	jp	Z,00153$
   06FC                    1181 00300$:
   06FC DD 6E E9      [19] 1182 	ld	l,-23 (ix)
   06FF DD 66 EA      [19] 1183 	ld	h,-22 (ix)
   0702 56            [ 7] 1184 	ld	d,(hl)
   0703 23            [ 6] 1185 	inc	hl
   0704 7E            [ 7] 1186 	ld	a, (hl)
   0705 B2            [ 4] 1187 	or	a,d
   0706 C2r94r07      [10] 1188 	jp	NZ,00153$
                           1189 ;src/main.c:229: p.col = checkCollisions(p.x,p.y,e.x,e.y,p.dir,p.atk);
   0709 DD 6E EB      [19] 1190 	ld	l,-21 (ix)
   070C DD 66 EC      [19] 1191 	ld	h,-20 (ix)
   070F 4E            [ 7] 1192 	ld	c,(hl)
   0710 23            [ 6] 1193 	inc	hl
   0711 46            [ 7] 1194 	ld	b,(hl)
   0712 DD 6E FE      [19] 1195 	ld	l,-2 (ix)
   0715 DD 66 FF      [19] 1196 	ld	h,-1 (ix)
   0718 7E            [ 7] 1197 	ld	a,(hl)
   0719 DD 77 F3      [19] 1198 	ld	-13 (ix),a
   071C 23            [ 6] 1199 	inc	hl
   071D 7E            [ 7] 1200 	ld	a,(hl)
   071E DD 77 F4      [19] 1201 	ld	-12 (ix),a
   0721 DD 6E F8      [19] 1202 	ld	l,-8 (ix)
   0724 DD 66 F9      [19] 1203 	ld	h,-7 (ix)
   0727 5E            [ 7] 1204 	ld	e,(hl)
   0728 DD 6E FA      [19] 1205 	ld	l,-6 (ix)
   072B DD 66 FB      [19] 1206 	ld	h,-5 (ix)
   072E 7E            [ 7] 1207 	ld	a,(hl)
   072F DD 77 F5      [19] 1208 	ld	-11 (ix),a
   0732 DD 6E ED      [19] 1209 	ld	l,-19 (ix)
   0735 DD 66 EE      [19] 1210 	ld	h,-18 (ix)
   0738 7E            [ 7] 1211 	ld	a,(hl)
   0739 DD 77 F6      [19] 1212 	ld	-10 (ix),a
   073C DD 6E E6      [19] 1213 	ld	l,-26 (ix)
   073F DD 66 E7      [19] 1214 	ld	h,-25 (ix)
   0742 56            [ 7] 1215 	ld	d,(hl)
   0743 C5            [11] 1216 	push	bc
   0744 DD 6E F3      [19] 1217 	ld	l,-13 (ix)
   0747 DD 66 F4      [19] 1218 	ld	h,-12 (ix)
   074A E5            [11] 1219 	push	hl
   074B 7B            [ 4] 1220 	ld	a,e
   074C F5            [11] 1221 	push	af
   074D 33            [ 6] 1222 	inc	sp
   074E DD 7E F5      [19] 1223 	ld	a,-11 (ix)
   0751 F5            [11] 1224 	push	af
   0752 33            [ 6] 1225 	inc	sp
   0753 DD 7E F6      [19] 1226 	ld	a,-10 (ix)
   0756 F5            [11] 1227 	push	af
   0757 33            [ 6] 1228 	inc	sp
   0758 D5            [11] 1229 	push	de
   0759 33            [ 6] 1230 	inc	sp
   075A CDr95r00      [17] 1231 	call	_checkCollisions
   075D F1            [10] 1232 	pop	af
   075E F1            [10] 1233 	pop	af
   075F F1            [10] 1234 	pop	af
   0760 F1            [10] 1235 	pop	af
   0761 55            [ 4] 1236 	ld	d,l
   0762 5C            [ 4] 1237 	ld	e,h
   0763 DD 6E FC      [19] 1238 	ld	l,-4 (ix)
   0766 DD 66 FD      [19] 1239 	ld	h,-3 (ix)
   0769 72            [ 7] 1240 	ld	(hl),d
   076A 23            [ 6] 1241 	inc	hl
   076B 73            [ 7] 1242 	ld	(hl),e
                           1243 ;src/main.c:230: if(p.col == 2)
   076C 7A            [ 4] 1244 	ld	a,d
   076D D6 02         [ 7] 1245 	sub	a,#0x02
   076F 20 16         [12] 1246 	jr	NZ,00149$
   0771 B3            [ 4] 1247 	or	a,e
   0772 20 13         [12] 1248 	jr	NZ,00149$
                           1249 ;src/main.c:231: p.life--;
   0774 DD 6E EF      [19] 1250 	ld	l,-17 (ix)
   0777 DD 66 F0      [19] 1251 	ld	h,-16 (ix)
   077A 5E            [ 7] 1252 	ld	e,(hl)
   077B 23            [ 6] 1253 	inc	hl
   077C 56            [ 7] 1254 	ld	d,(hl)
   077D 1B            [ 6] 1255 	dec	de
   077E DD 6E EF      [19] 1256 	ld	l,-17 (ix)
   0781 DD 66 F0      [19] 1257 	ld	h,-16 (ix)
   0784 73            [ 7] 1258 	ld	(hl),e
   0785 23            [ 6] 1259 	inc	hl
   0786 72            [ 7] 1260 	ld	(hl),d
   0787                    1261 00149$:
                           1262 ;src/main.c:232: if(p.life == 0)
   0787 DD 6E EF      [19] 1263 	ld	l,-17 (ix)
   078A DD 66 F0      [19] 1264 	ld	h,-16 (ix)
   078D 56            [ 7] 1265 	ld	d,(hl)
   078E 23            [ 6] 1266 	inc	hl
   078F 7E            [ 7] 1267 	ld	a, (hl)
   0790 B2            [ 4] 1268 	or	a,d
                           1269 ;src/main.c:233: return;
   0791 CAr8Cr08      [10] 1270 	jp	Z,00171$
   0794                    1271 00153$:
                           1272 ;src/main.c:235: if(p.col == 1)
   0794 DD 6E FC      [19] 1273 	ld	l,-4 (ix)
   0797 DD 66 FD      [19] 1274 	ld	h,-3 (ix)
   079A 56            [ 7] 1275 	ld	d,(hl)
   079B 23            [ 6] 1276 	inc	hl
   079C 66            [ 7] 1277 	ld	h,(hl)
   079D 15            [ 4] 1278 	dec	d
   079E 20 0F         [12] 1279 	jr	NZ,00156$
   07A0 7C            [ 4] 1280 	ld	a,h
   07A1 B7            [ 4] 1281 	or	a, a
   07A2 20 0B         [12] 1282 	jr	NZ,00156$
                           1283 ;src/main.c:236: e.vivo = 1;
   07A4 DD 6E E9      [19] 1284 	ld	l,-23 (ix)
   07A7 DD 66 EA      [19] 1285 	ld	h,-22 (ix)
   07AA 36 01         [10] 1286 	ld	(hl),#0x01
   07AC 23            [ 6] 1287 	inc	hl
   07AD 36 00         [10] 1288 	ld	(hl),#0x00
   07AF                    1289 00156$:
                           1290 ;src/main.c:239: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   07AF DD 6E ED      [19] 1291 	ld	l,-19 (ix)
   07B2 DD 66 EE      [19] 1292 	ld	h,-18 (ix)
   07B5 46            [ 7] 1293 	ld	b,(hl)
   07B6 DD 6E E6      [19] 1294 	ld	l,-26 (ix)
   07B9 DD 66 E7      [19] 1295 	ld	h,-25 (ix)
   07BC 4E            [ 7] 1296 	ld	c, (hl)
   07BD C5            [11] 1297 	push	bc
   07BE 21 00 C0      [10] 1298 	ld	hl,#0xC000
   07C1 E5            [11] 1299 	push	hl
   07C2 CDr00r00      [17] 1300 	call	_cpct_getScreenPtr
   07C5 4D            [ 4] 1301 	ld	c, l
   07C6 44            [ 4] 1302 	ld	b, h
                           1303 ;src/main.c:242: if(p.atk >= 21)
   07C7 DD 6E EB      [19] 1304 	ld	l,-21 (ix)
   07CA DD 66 EC      [19] 1305 	ld	h,-20 (ix)
   07CD 7E            [ 7] 1306 	ld	a, (hl)
   07CE 23            [ 6] 1307 	inc	hl
   07CF 66            [ 7] 1308 	ld	h,(hl)
   07D0 6F            [ 4] 1309 	ld	l,a
                           1310 ;src/main.c:170: cpct_drawSolidBox(memptr,0,4,16);
   07D1 C5            [11] 1311 	push	bc
   07D2 FD E1         [14] 1312 	pop	iy
                           1313 ;src/main.c:243: cpct_drawSpriteMasked(sprite, memptr, 5, 16);
   07D4 DD 5E DE      [19] 1314 	ld	e,-34 (ix)
   07D7 DD 56 DF      [19] 1315 	ld	d,-33 (ix)
                           1316 ;src/main.c:242: if(p.atk >= 21)
   07DA 7D            [ 4] 1317 	ld	a,l
   07DB D6 15         [ 7] 1318 	sub	a, #0x15
   07DD 7C            [ 4] 1319 	ld	a,h
   07DE DE 00         [ 7] 1320 	sbc	a, #0x00
   07E0 38 0E         [12] 1321 	jr	C,00158$
                           1322 ;src/main.c:243: cpct_drawSpriteMasked(sprite, memptr, 5, 16);
   07E2 C5            [11] 1323 	push	bc
   07E3 21 05 10      [10] 1324 	ld	hl,#0x1005
   07E6 E5            [11] 1325 	push	hl
   07E7 FD E5         [15] 1326 	push	iy
   07E9 D5            [11] 1327 	push	de
   07EA CDr00r00      [17] 1328 	call	_cpct_drawSpriteMasked
   07ED C1            [10] 1329 	pop	bc
   07EE 18 0C         [12] 1330 	jr	00159$
   07F0                    1331 00158$:
                           1332 ;src/main.c:245: cpct_drawSpriteMasked(sprite, memptr, 4, 16);
   07F0 C5            [11] 1333 	push	bc
   07F1 21 04 10      [10] 1334 	ld	hl,#0x1004
   07F4 E5            [11] 1335 	push	hl
   07F5 FD E5         [15] 1336 	push	iy
   07F7 D5            [11] 1337 	push	de
   07F8 CDr00r00      [17] 1338 	call	_cpct_drawSpriteMasked
   07FB C1            [10] 1339 	pop	bc
   07FC                    1340 00159$:
                           1341 ;src/main.c:248: if(e.vivo == 0){
   07FC DD 6E E9      [19] 1342 	ld	l,-23 (ix)
   07FF DD 66 EA      [19] 1343 	ld	h,-22 (ix)
   0802 5E            [ 7] 1344 	ld	e,(hl)
   0803 23            [ 6] 1345 	inc	hl
   0804 7E            [ 7] 1346 	ld	a, (hl)
   0805 B3            [ 4] 1347 	or	a,e
   0806 20 2B         [12] 1348 	jr	NZ,00161$
                           1349 ;src/main.c:249: memptr = cpct_getScreenPtr(VMEM,e.x,e.y);
   0808 DD 6E F8      [19] 1350 	ld	l,-8 (ix)
   080B DD 66 F9      [19] 1351 	ld	h,-7 (ix)
   080E 46            [ 7] 1352 	ld	b,(hl)
   080F DD 6E FA      [19] 1353 	ld	l,-6 (ix)
   0812 DD 66 FB      [19] 1354 	ld	h,-5 (ix)
   0815 4E            [ 7] 1355 	ld	c, (hl)
   0816 C5            [11] 1356 	push	bc
   0817 21 00 C0      [10] 1357 	ld	hl,#0xC000
   081A E5            [11] 1358 	push	hl
   081B CDr00r00      [17] 1359 	call	_cpct_getScreenPtr
   081E 4D            [ 4] 1360 	ld	c, l
   081F 44            [ 4] 1361 	ld	b, h
                           1362 ;src/main.c:250: cpct_drawSolidBox(memptr, 18, 4, 16);
   0820 59            [ 4] 1363 	ld	e, c
   0821 50            [ 4] 1364 	ld	d, b
   0822 C5            [11] 1365 	push	bc
   0823 21 04 10      [10] 1366 	ld	hl,#0x1004
   0826 E5            [11] 1367 	push	hl
   0827 3E 12         [ 7] 1368 	ld	a,#0x12
   0829 F5            [11] 1369 	push	af
   082A 33            [ 6] 1370 	inc	sp
   082B D5            [11] 1371 	push	de
   082C CDr00r00      [17] 1372 	call	_cpct_drawSolidBox
   082F F1            [10] 1373 	pop	af
   0830 F1            [10] 1374 	pop	af
   0831 33            [ 6] 1375 	inc	sp
   0832 C1            [10] 1376 	pop	bc
   0833                    1377 00161$:
                           1378 ;src/main.c:169: if(p.atk <= 20)
   0833 DD 6E EB      [19] 1379 	ld	l,-21 (ix)
   0836 DD 66 EC      [19] 1380 	ld	h,-20 (ix)
   0839 5E            [ 7] 1381 	ld	e,(hl)
   083A 23            [ 6] 1382 	inc	hl
   083B 56            [ 7] 1383 	ld	d,(hl)
                           1384 ;src/main.c:253: if(p.atk < 20)
   083C 7B            [ 4] 1385 	ld	a,e
   083D D6 14         [ 7] 1386 	sub	a, #0x14
   083F 7A            [ 4] 1387 	ld	a,d
   0840 DE 00         [ 7] 1388 	sbc	a, #0x00
   0842 30 10         [12] 1389 	jr	NC,00166$
                           1390 ;src/main.c:254: drawFatiga(p.atk,memptr,2);
   0844 C5            [11] 1391 	push	bc
   0845 3E 02         [ 7] 1392 	ld	a,#0x02
   0847 F5            [11] 1393 	push	af
   0848 33            [ 6] 1394 	inc	sp
   0849 C5            [11] 1395 	push	bc
   084A D5            [11] 1396 	push	de
   084B CDrAFr01      [17] 1397 	call	_drawFatiga
   084E F1            [10] 1398 	pop	af
   084F F1            [10] 1399 	pop	af
   0850 33            [ 6] 1400 	inc	sp
   0851 C1            [10] 1401 	pop	bc
   0852 18 25         [12] 1402 	jr	00167$
   0854                    1403 00166$:
                           1404 ;src/main.c:255: else if(p.atk > 20)
   0854 3E 14         [ 7] 1405 	ld	a,#0x14
   0856 BB            [ 4] 1406 	cp	a, e
   0857 3E 00         [ 7] 1407 	ld	a,#0x00
   0859 9A            [ 4] 1408 	sbc	a, d
   085A 30 10         [12] 1409 	jr	NC,00163$
                           1410 ;src/main.c:256: drawFatiga(p.atk,memptr,16);
   085C C5            [11] 1411 	push	bc
   085D 3E 10         [ 7] 1412 	ld	a,#0x10
   085F F5            [11] 1413 	push	af
   0860 33            [ 6] 1414 	inc	sp
   0861 C5            [11] 1415 	push	bc
   0862 D5            [11] 1416 	push	de
   0863 CDrAFr01      [17] 1417 	call	_drawFatiga
   0866 F1            [10] 1418 	pop	af
   0867 F1            [10] 1419 	pop	af
   0868 33            [ 6] 1420 	inc	sp
   0869 C1            [10] 1421 	pop	bc
   086A 18 0D         [12] 1422 	jr	00167$
   086C                    1423 00163$:
                           1424 ;src/main.c:258: drawFatiga(p.atk,memptr,0);
   086C C5            [11] 1425 	push	bc
   086D AF            [ 4] 1426 	xor	a, a
   086E F5            [11] 1427 	push	af
   086F 33            [ 6] 1428 	inc	sp
   0870 C5            [11] 1429 	push	bc
   0871 D5            [11] 1430 	push	de
   0872 CDrAFr01      [17] 1431 	call	_drawFatiga
   0875 F1            [10] 1432 	pop	af
   0876 F1            [10] 1433 	pop	af
   0877 33            [ 6] 1434 	inc	sp
   0878 C1            [10] 1435 	pop	bc
   0879                    1436 00167$:
                           1437 ;src/main.c:260: drawVida(p.life, memptr);
   0879 DD 6E EF      [19] 1438 	ld	l,-17 (ix)
   087C DD 66 F0      [19] 1439 	ld	h,-16 (ix)
   087F 5E            [ 7] 1440 	ld	e,(hl)
   0880 23            [ 6] 1441 	inc	hl
   0881 56            [ 7] 1442 	ld	d,(hl)
   0882 C5            [11] 1443 	push	bc
   0883 D5            [11] 1444 	push	de
   0884 CDr6Cr02      [17] 1445 	call	_drawVida
   0887 F1            [10] 1446 	pop	af
   0888 F1            [10] 1447 	pop	af
   0889 C3r4Cr04      [10] 1448 	jp	00169$
   088C                    1449 00171$:
   088C DD F9         [10] 1450 	ld	sp, ix
   088E DD E1         [14] 1451 	pop	ix
   0890 C9            [10] 1452 	ret
                           1453 ;src/main.c:267: void main(void) {
                           1454 ;	---------------------------------
                           1455 ; Function main
                           1456 ; ---------------------------------
   0891                    1457 _main::
                           1458 ;src/main.c:269: init();
   0891 CDr00r00      [17] 1459 	call	_init
                           1460 ;src/main.c:272: while(1){
   0894                    1461 00102$:
                           1462 ;src/main.c:273: menu();
   0894 CDr29r00      [17] 1463 	call	_menu
                           1464 ;src/main.c:274: game();
   0897 CDr13r03      [17] 1465 	call	_game
   089A 18 F8         [12] 1466 	jr	00102$
                           1467 	.area _CODE
                           1468 	.area _INITIALIZER
                           1469 	.area _CABS (ABS)
