                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Sep 22 2015) (CYGWIN)
                              4 ; This file was generated Fri Oct  2 17:01:34 2015
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _loadMap
                             14 	.globl _game
                             15 	.globl _drawMap
                             16 	.globl _menu
                             17 	.globl _init
                             18 	.globl _cpct_getScreenPtr
                             19 	.globl _cpct_setPalette
                             20 	.globl _cpct_fw2hw
                             21 	.globl _cpct_waitVSYNC
                             22 	.globl _cpct_setVideoMode
                             23 	.globl _cpct_drawStringM0
                             24 	.globl _cpct_drawSolidBox
                             25 	.globl _cpct_drawSpriteMasked
                             26 	.globl _cpct_isKeyPressed
                             27 	.globl _cpct_scanKeyboard_f
                             28 	.globl _cpct_memset
                             29 	.globl _cpct_disableFirmware
                             30 	.globl _scene
                             31 	.globl _g_palette
                             32 	.globl _mapa2
                             33 	.globl _mapa1
                             34 ;--------------------------------------------------------
                             35 ; special function registers
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; ram data
                             39 ;--------------------------------------------------------
                             40 	.area _DATA
   0000                      41 _scene::
   0000                      42 	.ds 6
                             43 ;--------------------------------------------------------
                             44 ; ram data
                             45 ;--------------------------------------------------------
                             46 	.area _INITIALIZED
                             47 ;--------------------------------------------------------
                             48 ; absolute external ram data
                             49 ;--------------------------------------------------------
                             50 	.area _DABS (ABS)
                             51 ;--------------------------------------------------------
                             52 ; global & static initialisations
                             53 ;--------------------------------------------------------
                             54 	.area _HOME
                             55 	.area _GSINIT
                             56 	.area _GSFINAL
                             57 	.area _GSINIT
                             58 ;--------------------------------------------------------
                             59 ; Home
                             60 ;--------------------------------------------------------
                             61 	.area _HOME
                             62 	.area _HOME
                             63 ;--------------------------------------------------------
                             64 ; code
                             65 ;--------------------------------------------------------
                             66 	.area _CODE
                             67 ;src/main.c:61: void init(){
                             68 ;	---------------------------------
                             69 ; Function init
                             70 ; ---------------------------------
   0000                      71 _init::
                             72 ;src/main.c:62: cpct_disableFirmware();
   0000 CDr00r00      [17]   73 	call	_cpct_disableFirmware
                             74 ;src/main.c:63: cpct_setVideoMode(0);
   0003 AF            [ 4]   75 	xor	a, a
   0004 F5            [11]   76 	push	af
   0005 33            [ 6]   77 	inc	sp
   0006 CDr00r00      [17]   78 	call	_cpct_setVideoMode
   0009 33            [ 6]   79 	inc	sp
                             80 ;src/main.c:64: cpct_fw2hw(g_palette,4);
   000A 11rA5r02      [10]   81 	ld	de,#_g_palette
   000D 3E 04         [ 7]   82 	ld	a,#0x04
   000F F5            [11]   83 	push	af
   0010 33            [ 6]   84 	inc	sp
   0011 D5            [11]   85 	push	de
   0012 CDr00r00      [17]   86 	call	_cpct_fw2hw
   0015 F1            [10]   87 	pop	af
   0016 33            [ 6]   88 	inc	sp
                             89 ;src/main.c:65: cpct_setPalette(g_palette,4);
   0017 11rA5r02      [10]   90 	ld	de,#_g_palette
   001A 3E 04         [ 7]   91 	ld	a,#0x04
   001C F5            [11]   92 	push	af
   001D 33            [ 6]   93 	inc	sp
   001E D5            [11]   94 	push	de
   001F CDr00r00      [17]   95 	call	_cpct_setPalette
   0022 F1            [10]   96 	pop	af
   0023 33            [ 6]   97 	inc	sp
   0024 C9            [10]   98 	ret
   0025                      99 _mapa1:
   0025 01 00               100 	.dw #0x0001
   0027 01 00               101 	.dw #0x0001
   0029 01 00               102 	.dw #0x0001
   002B 01 00               103 	.dw #0x0001
   002D 01 00               104 	.dw #0x0001
   002F 01 00               105 	.dw #0x0001
   0031 01 00               106 	.dw #0x0001
   0033 01 00               107 	.dw #0x0001
   0035 01 00               108 	.dw #0x0001
   0037 01 00               109 	.dw #0x0001
   0039 01 00               110 	.dw #0x0001
   003B 01 00               111 	.dw #0x0001
   003D 01 00               112 	.dw #0x0001
   003F 01 00               113 	.dw #0x0001
   0041 01 00               114 	.dw #0x0001
   0043 01 00               115 	.dw #0x0001
   0045 01 00               116 	.dw #0x0001
   0047 00 00               117 	.dw #0x0000
   0049 00 00               118 	.dw #0x0000
   004B 00 00               119 	.dw #0x0000
   004D 00 00               120 	.dw #0x0000
   004F 00 00               121 	.dw #0x0000
   0051 00 00               122 	.dw #0x0000
   0053 00 00               123 	.dw #0x0000
   0055 00 00               124 	.dw #0x0000
   0057 00 00               125 	.dw #0x0000
   0059 00 00               126 	.dw #0x0000
   005B 00 00               127 	.dw #0x0000
   005D 00 00               128 	.dw #0x0000
   005F 00 00               129 	.dw #0x0000
   0061 00 00               130 	.dw #0x0000
   0063 01 00               131 	.dw #0x0001
   0065 01 00               132 	.dw #0x0001
   0067 00 00               133 	.dw #0x0000
   0069 00 00               134 	.dw #0x0000
   006B 00 00               135 	.dw #0x0000
   006D 00 00               136 	.dw #0x0000
   006F 00 00               137 	.dw #0x0000
   0071 00 00               138 	.dw #0x0000
   0073 00 00               139 	.dw #0x0000
   0075 00 00               140 	.dw #0x0000
   0077 00 00               141 	.dw #0x0000
   0079 00 00               142 	.dw #0x0000
   007B 00 00               143 	.dw #0x0000
   007D 00 00               144 	.dw #0x0000
   007F 00 00               145 	.dw #0x0000
   0081 00 00               146 	.dw #0x0000
   0083 01 00               147 	.dw #0x0001
   0085 01 00               148 	.dw #0x0001
   0087 00 00               149 	.dw #0x0000
   0089 00 00               150 	.dw #0x0000
   008B 00 00               151 	.dw #0x0000
   008D 00 00               152 	.dw #0x0000
   008F 00 00               153 	.dw #0x0000
   0091 00 00               154 	.dw #0x0000
   0093 00 00               155 	.dw #0x0000
   0095 00 00               156 	.dw #0x0000
   0097 00 00               157 	.dw #0x0000
   0099 00 00               158 	.dw #0x0000
   009B 00 00               159 	.dw #0x0000
   009D 00 00               160 	.dw #0x0000
   009F 00 00               161 	.dw #0x0000
   00A1 00 00               162 	.dw #0x0000
   00A3 01 00               163 	.dw #0x0001
   00A5 01 00               164 	.dw #0x0001
   00A7 00 00               165 	.dw #0x0000
   00A9 00 00               166 	.dw #0x0000
   00AB 00 00               167 	.dw #0x0000
   00AD 00 00               168 	.dw #0x0000
   00AF 00 00               169 	.dw #0x0000
   00B1 00 00               170 	.dw #0x0000
   00B3 00 00               171 	.dw #0x0000
   00B5 00 00               172 	.dw #0x0000
   00B7 00 00               173 	.dw #0x0000
   00B9 00 00               174 	.dw #0x0000
   00BB 00 00               175 	.dw #0x0000
   00BD 00 00               176 	.dw #0x0000
   00BF 00 00               177 	.dw #0x0000
   00C1 00 00               178 	.dw #0x0000
   00C3 01 00               179 	.dw #0x0001
   00C5 00 00               180 	.dw #0x0000
   00C7 00 00               181 	.dw #0x0000
   00C9 00 00               182 	.dw #0x0000
   00CB 00 00               183 	.dw #0x0000
   00CD 00 00               184 	.dw #0x0000
   00CF 00 00               185 	.dw #0x0000
   00D1 00 00               186 	.dw #0x0000
   00D3 00 00               187 	.dw #0x0000
   00D5 00 00               188 	.dw #0x0000
   00D7 00 00               189 	.dw #0x0000
   00D9 00 00               190 	.dw #0x0000
   00DB 00 00               191 	.dw #0x0000
   00DD 00 00               192 	.dw #0x0000
   00DF 00 00               193 	.dw #0x0000
   00E1 00 00               194 	.dw #0x0000
   00E3 01 00               195 	.dw #0x0001
   00E5 01 00               196 	.dw #0x0001
   00E7 00 00               197 	.dw #0x0000
   00E9 00 00               198 	.dw #0x0000
   00EB 00 00               199 	.dw #0x0000
   00ED 00 00               200 	.dw #0x0000
   00EF 00 00               201 	.dw #0x0000
   00F1 00 00               202 	.dw #0x0000
   00F3 00 00               203 	.dw #0x0000
   00F5 00 00               204 	.dw #0x0000
   00F7 00 00               205 	.dw #0x0000
   00F9 00 00               206 	.dw #0x0000
   00FB 00 00               207 	.dw #0x0000
   00FD 00 00               208 	.dw #0x0000
   00FF 00 00               209 	.dw #0x0000
   0101 00 00               210 	.dw #0x0000
   0103 01 00               211 	.dw #0x0001
   0105 01 00               212 	.dw #0x0001
   0107 00 00               213 	.dw #0x0000
   0109 00 00               214 	.dw #0x0000
   010B 00 00               215 	.dw #0x0000
   010D 00 00               216 	.dw #0x0000
   010F 00 00               217 	.dw #0x0000
   0111 00 00               218 	.dw #0x0000
   0113 00 00               219 	.dw #0x0000
   0115 00 00               220 	.dw #0x0000
   0117 00 00               221 	.dw #0x0000
   0119 00 00               222 	.dw #0x0000
   011B 00 00               223 	.dw #0x0000
   011D 00 00               224 	.dw #0x0000
   011F 00 00               225 	.dw #0x0000
   0121 00 00               226 	.dw #0x0000
   0123 01 00               227 	.dw #0x0001
   0125 01 00               228 	.dw #0x0001
   0127 00 00               229 	.dw #0x0000
   0129 00 00               230 	.dw #0x0000
   012B 00 00               231 	.dw #0x0000
   012D 00 00               232 	.dw #0x0000
   012F 00 00               233 	.dw #0x0000
   0131 00 00               234 	.dw #0x0000
   0133 00 00               235 	.dw #0x0000
   0135 00 00               236 	.dw #0x0000
   0137 00 00               237 	.dw #0x0000
   0139 00 00               238 	.dw #0x0000
   013B 00 00               239 	.dw #0x0000
   013D 00 00               240 	.dw #0x0000
   013F 00 00               241 	.dw #0x0000
   0141 00 00               242 	.dw #0x0000
   0143 01 00               243 	.dw #0x0001
   0145 01 00               244 	.dw #0x0001
   0147 01 00               245 	.dw #0x0001
   0149 01 00               246 	.dw #0x0001
   014B 01 00               247 	.dw #0x0001
   014D 01 00               248 	.dw #0x0001
   014F 01 00               249 	.dw #0x0001
   0151 01 00               250 	.dw #0x0001
   0153 01 00               251 	.dw #0x0001
   0155 01 00               252 	.dw #0x0001
   0157 01 00               253 	.dw #0x0001
   0159 01 00               254 	.dw #0x0001
   015B 01 00               255 	.dw #0x0001
   015D 01 00               256 	.dw #0x0001
   015F 01 00               257 	.dw #0x0001
   0161 01 00               258 	.dw #0x0001
   0163 01 00               259 	.dw #0x0001
   0165                     260 _mapa2:
   0165 01 00               261 	.dw #0x0001
   0167 01 00               262 	.dw #0x0001
   0169 01 00               263 	.dw #0x0001
   016B 01 00               264 	.dw #0x0001
   016D 01 00               265 	.dw #0x0001
   016F 01 00               266 	.dw #0x0001
   0171 01 00               267 	.dw #0x0001
   0173 01 00               268 	.dw #0x0001
   0175 01 00               269 	.dw #0x0001
   0177 01 00               270 	.dw #0x0001
   0179 01 00               271 	.dw #0x0001
   017B 01 00               272 	.dw #0x0001
   017D 01 00               273 	.dw #0x0001
   017F 01 00               274 	.dw #0x0001
   0181 01 00               275 	.dw #0x0001
   0183 01 00               276 	.dw #0x0001
   0185 01 00               277 	.dw #0x0001
   0187 01 00               278 	.dw #0x0001
   0189 01 00               279 	.dw #0x0001
   018B 00 00               280 	.dw #0x0000
   018D 00 00               281 	.dw #0x0000
   018F 00 00               282 	.dw #0x0000
   0191 00 00               283 	.dw #0x0000
   0193 00 00               284 	.dw #0x0000
   0195 00 00               285 	.dw #0x0000
   0197 00 00               286 	.dw #0x0000
   0199 00 00               287 	.dw #0x0000
   019B 00 00               288 	.dw #0x0000
   019D 00 00               289 	.dw #0x0000
   019F 01 00               290 	.dw #0x0001
   01A1 01 00               291 	.dw #0x0001
   01A3 01 00               292 	.dw #0x0001
   01A5 01 00               293 	.dw #0x0001
   01A7 01 00               294 	.dw #0x0001
   01A9 01 00               295 	.dw #0x0001
   01AB 00 00               296 	.dw #0x0000
   01AD 00 00               297 	.dw #0x0000
   01AF 00 00               298 	.dw #0x0000
   01B1 00 00               299 	.dw #0x0000
   01B3 00 00               300 	.dw #0x0000
   01B5 00 00               301 	.dw #0x0000
   01B7 00 00               302 	.dw #0x0000
   01B9 00 00               303 	.dw #0x0000
   01BB 00 00               304 	.dw #0x0000
   01BD 00 00               305 	.dw #0x0000
   01BF 01 00               306 	.dw #0x0001
   01C1 01 00               307 	.dw #0x0001
   01C3 01 00               308 	.dw #0x0001
   01C5 01 00               309 	.dw #0x0001
   01C7 00 00               310 	.dw #0x0000
   01C9 01 00               311 	.dw #0x0001
   01CB 00 00               312 	.dw #0x0000
   01CD 00 00               313 	.dw #0x0000
   01CF 00 00               314 	.dw #0x0000
   01D1 00 00               315 	.dw #0x0000
   01D3 01 00               316 	.dw #0x0001
   01D5 01 00               317 	.dw #0x0001
   01D7 01 00               318 	.dw #0x0001
   01D9 00 00               319 	.dw #0x0000
   01DB 00 00               320 	.dw #0x0000
   01DD 00 00               321 	.dw #0x0000
   01DF 01 00               322 	.dw #0x0001
   01E1 00 00               323 	.dw #0x0000
   01E3 01 00               324 	.dw #0x0001
   01E5 01 00               325 	.dw #0x0001
   01E7 00 00               326 	.dw #0x0000
   01E9 01 00               327 	.dw #0x0001
   01EB 00 00               328 	.dw #0x0000
   01ED 00 00               329 	.dw #0x0000
   01EF 00 00               330 	.dw #0x0000
   01F1 00 00               331 	.dw #0x0000
   01F3 01 00               332 	.dw #0x0001
   01F5 01 00               333 	.dw #0x0001
   01F7 01 00               334 	.dw #0x0001
   01F9 00 00               335 	.dw #0x0000
   01FB 00 00               336 	.dw #0x0000
   01FD 00 00               337 	.dw #0x0000
   01FF 01 00               338 	.dw #0x0001
   0201 00 00               339 	.dw #0x0000
   0203 01 00               340 	.dw #0x0001
   0205 00 00               341 	.dw #0x0000
   0207 00 00               342 	.dw #0x0000
   0209 01 00               343 	.dw #0x0001
   020B 00 00               344 	.dw #0x0000
   020D 00 00               345 	.dw #0x0000
   020F 00 00               346 	.dw #0x0000
   0211 00 00               347 	.dw #0x0000
   0213 01 00               348 	.dw #0x0001
   0215 00 00               349 	.dw #0x0000
   0217 01 00               350 	.dw #0x0001
   0219 00 00               351 	.dw #0x0000
   021B 00 00               352 	.dw #0x0000
   021D 00 00               353 	.dw #0x0000
   021F 01 00               354 	.dw #0x0001
   0221 00 00               355 	.dw #0x0000
   0223 01 00               356 	.dw #0x0001
   0225 01 00               357 	.dw #0x0001
   0227 00 00               358 	.dw #0x0000
   0229 01 00               359 	.dw #0x0001
   022B 01 00               360 	.dw #0x0001
   022D 01 00               361 	.dw #0x0001
   022F 01 00               362 	.dw #0x0001
   0231 01 00               363 	.dw #0x0001
   0233 00 00               364 	.dw #0x0000
   0235 00 00               365 	.dw #0x0000
   0237 00 00               366 	.dw #0x0000
   0239 01 00               367 	.dw #0x0001
   023B 01 00               368 	.dw #0x0001
   023D 01 00               369 	.dw #0x0001
   023F 01 00               370 	.dw #0x0001
   0241 00 00               371 	.dw #0x0000
   0243 01 00               372 	.dw #0x0001
   0245 01 00               373 	.dw #0x0001
   0247 00 00               374 	.dw #0x0000
   0249 01 00               375 	.dw #0x0001
   024B 01 00               376 	.dw #0x0001
   024D 01 00               377 	.dw #0x0001
   024F 01 00               378 	.dw #0x0001
   0251 01 00               379 	.dw #0x0001
   0253 00 00               380 	.dw #0x0000
   0255 00 00               381 	.dw #0x0000
   0257 00 00               382 	.dw #0x0000
   0259 01 00               383 	.dw #0x0001
   025B 01 00               384 	.dw #0x0001
   025D 01 00               385 	.dw #0x0001
   025F 01 00               386 	.dw #0x0001
   0261 00 00               387 	.dw #0x0000
   0263 01 00               388 	.dw #0x0001
   0265 01 00               389 	.dw #0x0001
   0267 00 00               390 	.dw #0x0000
   0269 00 00               391 	.dw #0x0000
   026B 00 00               392 	.dw #0x0000
   026D 00 00               393 	.dw #0x0000
   026F 00 00               394 	.dw #0x0000
   0271 00 00               395 	.dw #0x0000
   0273 00 00               396 	.dw #0x0000
   0275 00 00               397 	.dw #0x0000
   0277 00 00               398 	.dw #0x0000
   0279 00 00               399 	.dw #0x0000
   027B 00 00               400 	.dw #0x0000
   027D 00 00               401 	.dw #0x0000
   027F 00 00               402 	.dw #0x0000
   0281 00 00               403 	.dw #0x0000
   0283 01 00               404 	.dw #0x0001
   0285 01 00               405 	.dw #0x0001
   0287 01 00               406 	.dw #0x0001
   0289 01 00               407 	.dw #0x0001
   028B 01 00               408 	.dw #0x0001
   028D 01 00               409 	.dw #0x0001
   028F 01 00               410 	.dw #0x0001
   0291 01 00               411 	.dw #0x0001
   0293 01 00               412 	.dw #0x0001
   0295 01 00               413 	.dw #0x0001
   0297 01 00               414 	.dw #0x0001
   0299 01 00               415 	.dw #0x0001
   029B 01 00               416 	.dw #0x0001
   029D 01 00               417 	.dw #0x0001
   029F 01 00               418 	.dw #0x0001
   02A1 01 00               419 	.dw #0x0001
   02A3 01 00               420 	.dw #0x0001
   02A5                     421 _g_palette:
   02A5 00                  422 	.db #0x00	; 0
   02A6 1A                  423 	.db #0x1A	; 26
   02A7 06                  424 	.db #0x06	; 6
   02A8 12                  425 	.db #0x12	; 18
                            426 ;src/main.c:69: void menu(){
                            427 ;	---------------------------------
                            428 ; Function menu
                            429 ; ---------------------------------
   02A9                     430 _menu::
                            431 ;src/main.c:71: cpct_clearScreen(0);
   02A9 21 00 40      [10]  432 	ld	hl,#0x4000
   02AC E5            [11]  433 	push	hl
   02AD AF            [ 4]  434 	xor	a, a
   02AE F5            [11]  435 	push	af
   02AF 33            [ 6]  436 	inc	sp
   02B0 26 C0         [ 7]  437 	ld	h, #0xC0
   02B2 E5            [11]  438 	push	hl
   02B3 CDr00r00      [17]  439 	call	_cpct_memset
                            440 ;src/main.c:73: memptr = cpct_getScreenPtr(VMEM,20,10);
   02B6 21 14 0A      [10]  441 	ld	hl,#0x0A14
   02B9 E5            [11]  442 	push	hl
   02BA 21 00 C0      [10]  443 	ld	hl,#0xC000
   02BD E5            [11]  444 	push	hl
   02BE CDr00r00      [17]  445 	call	_cpct_getScreenPtr
                            446 ;src/main.c:74: cpct_drawStringM0("MENU",memptr,2,3);
   02C1 EB            [ 4]  447 	ex	de,hl
   02C2 01rFEr02      [10]  448 	ld	bc,#___str_0+0
   02C5 21 02 03      [10]  449 	ld	hl,#0x0302
   02C8 E5            [11]  450 	push	hl
   02C9 D5            [11]  451 	push	de
   02CA C5            [11]  452 	push	bc
   02CB CDr00r00      [17]  453 	call	_cpct_drawStringM0
   02CE 21 06 00      [10]  454 	ld	hl,#6
   02D1 39            [11]  455 	add	hl,sp
   02D2 F9            [ 6]  456 	ld	sp,hl
                            457 ;src/main.c:76: memptr = cpct_getScreenPtr(VMEM,18,180);
   02D3 21 12 B4      [10]  458 	ld	hl,#0xB412
   02D6 E5            [11]  459 	push	hl
   02D7 21 00 C0      [10]  460 	ld	hl,#0xC000
   02DA E5            [11]  461 	push	hl
   02DB CDr00r00      [17]  462 	call	_cpct_getScreenPtr
                            463 ;src/main.c:77: cpct_drawStringM0("Pulsa Intro",memptr,4,5);
   02DE EB            [ 4]  464 	ex	de,hl
   02DF 01r03r03      [10]  465 	ld	bc,#___str_1+0
   02E2 21 04 05      [10]  466 	ld	hl,#0x0504
   02E5 E5            [11]  467 	push	hl
   02E6 D5            [11]  468 	push	de
   02E7 C5            [11]  469 	push	bc
   02E8 CDr00r00      [17]  470 	call	_cpct_drawStringM0
   02EB 21 06 00      [10]  471 	ld	hl,#6
   02EE 39            [11]  472 	add	hl,sp
   02EF F9            [ 6]  473 	ld	sp,hl
                            474 ;src/main.c:79: do{
   02F0                     475 00101$:
                            476 ;src/main.c:80: cpct_scanKeyboard_f();
   02F0 CDr00r00      [17]  477 	call	_cpct_scanKeyboard_f
                            478 ;src/main.c:81: }while(!cpct_isKeyPressed(Key_Enter));
   02F3 21 00 40      [10]  479 	ld	hl,#0x4000
   02F6 CDr00r00      [17]  480 	call	_cpct_isKeyPressed
   02F9 7D            [ 4]  481 	ld	a,l
   02FA B7            [ 4]  482 	or	a, a
   02FB 28 F3         [12]  483 	jr	Z,00101$
   02FD C9            [10]  484 	ret
   02FE                     485 ___str_0:
   02FE 4D 45 4E 55         486 	.ascii "MENU"
   0302 00                  487 	.db 0x00
   0303                     488 ___str_1:
   0303 50 75 6C 73 61 20   489 	.ascii "Pulsa Intro"
        49 6E 74 72 6F
   030E 00                  490 	.db 0x00
                            491 ;src/main.c:87: void drawMap(int t){
                            492 ;	---------------------------------
                            493 ; Function drawMap
                            494 ; ---------------------------------
   030F                     495 _drawMap::
   030F DD E5         [15]  496 	push	ix
   0311 DD 21 00 00   [14]  497 	ld	ix,#0
   0315 DD 39         [15]  498 	add	ix,sp
   0317 21 FA FF      [10]  499 	ld	hl,#-6
   031A 39            [11]  500 	add	hl,sp
   031B F9            [ 6]  501 	ld	sp,hl
                            502 ;src/main.c:91: if(t == 1){ 
   031C DD 7E 04      [19]  503 	ld	a,4 (ix)
   031F 3D            [ 4]  504 	dec	a
   0320 20 3A         [12]  505 	jr	NZ,00103$
   0322 DD 7E 05      [19]  506 	ld	a,5 (ix)
   0325 B7            [ 4]  507 	or	a, a
   0326 20 34         [12]  508 	jr	NZ,00103$
                            509 ;src/main.c:92: for(x=0;x<height;x++){
   0328 11 00 00      [10]  510 	ld	de,#0x0000
   032B                     511 00111$:
                            512 ;src/main.c:93: scene[x] = mapa1[x];
   032B 6B            [ 4]  513 	ld	l, e
   032C 62            [ 4]  514 	ld	h, d
   032D 29            [11]  515 	add	hl, hl
   032E 3Er00         [ 7]  516 	ld	a,#<(_scene)
   0330 85            [ 4]  517 	add	a, l
   0331 DD 77 FE      [19]  518 	ld	-2 (ix),a
   0334 3Es00         [ 7]  519 	ld	a,#>(_scene)
   0336 8C            [ 4]  520 	adc	a, h
   0337 DD 77 FF      [19]  521 	ld	-1 (ix),a
   033A 6B            [ 4]  522 	ld	l, e
   033B 62            [ 4]  523 	ld	h, d
   033C 29            [11]  524 	add	hl, hl
   033D 29            [11]  525 	add	hl, hl
   033E 29            [11]  526 	add	hl, hl
   033F 29            [11]  527 	add	hl, hl
   0340 29            [11]  528 	add	hl, hl
   0341 01r25r00      [10]  529 	ld	bc,#_mapa1
   0344 09            [11]  530 	add	hl,bc
   0345 45            [ 4]  531 	ld	b,l
   0346 4C            [ 4]  532 	ld	c,h
   0347 DD 6E FE      [19]  533 	ld	l,-2 (ix)
   034A DD 66 FF      [19]  534 	ld	h,-1 (ix)
   034D 70            [ 7]  535 	ld	(hl),b
   034E 23            [ 6]  536 	inc	hl
   034F 71            [ 7]  537 	ld	(hl),c
                            538 ;src/main.c:92: for(x=0;x<height;x++){
   0350 13            [ 6]  539 	inc	de
   0351 7B            [ 4]  540 	ld	a,e
   0352 D6 0A         [ 7]  541 	sub	a, #0x0A
   0354 7A            [ 4]  542 	ld	a,d
   0355 17            [ 4]  543 	rla
   0356 3F            [ 4]  544 	ccf
   0357 1F            [ 4]  545 	rra
   0358 DE 80         [ 7]  546 	sbc	a, #0x80
   035A 38 CF         [12]  547 	jr	C,00111$
   035C                     548 00103$:
                            549 ;src/main.c:97: if(t == 2){ 
   035C DD 7E 04      [19]  550 	ld	a,4 (ix)
   035F D6 02         [ 7]  551 	sub	a, #0x02
   0361 20 30         [12]  552 	jr	NZ,00128$
   0363 DD 7E 05      [19]  553 	ld	a,5 (ix)
   0366 B7            [ 4]  554 	or	a, a
   0367 20 2A         [12]  555 	jr	NZ,00128$
                            556 ;src/main.c:98: for(x=0;x<height;x++){
   0369 01 00 00      [10]  557 	ld	bc,#0x0000
   036C                     558 00113$:
                            559 ;src/main.c:99: scene[x] = mapa2[x];
   036C 69            [ 4]  560 	ld	l, c
   036D 60            [ 4]  561 	ld	h, b
   036E 29            [11]  562 	add	hl, hl
   036F FD 21r00r00   [14]  563 	ld	iy,#_scene
   0373 EB            [ 4]  564 	ex	de,hl
   0374 FD 19         [15]  565 	add	iy, de
   0376 69            [ 4]  566 	ld	l, c
   0377 60            [ 4]  567 	ld	h, b
   0378 29            [11]  568 	add	hl, hl
   0379 29            [11]  569 	add	hl, hl
   037A 29            [11]  570 	add	hl, hl
   037B 29            [11]  571 	add	hl, hl
   037C 29            [11]  572 	add	hl, hl
   037D 11r65r01      [10]  573 	ld	de,#_mapa2
   0380 19            [11]  574 	add	hl,de
   0381 FD 75 00      [19]  575 	ld	0 (iy),l
   0384 FD 74 01      [19]  576 	ld	1 (iy),h
                            577 ;src/main.c:98: for(x=0;x<height;x++){
   0387 03            [ 6]  578 	inc	bc
   0388 79            [ 4]  579 	ld	a,c
   0389 D6 0A         [ 7]  580 	sub	a, #0x0A
   038B 78            [ 4]  581 	ld	a,b
   038C 17            [ 4]  582 	rla
   038D 3F            [ 4]  583 	ccf
   038E 1F            [ 4]  584 	rra
   038F DE 80         [ 7]  585 	sbc	a, #0x80
   0391 38 D9         [12]  586 	jr	C,00113$
                            587 ;src/main.c:103: for(posY=0; posY<height;posY++){
   0393                     588 00128$:
   0393 DD 36 FC 00   [19]  589 	ld	-4 (ix),#0x00
   0397 DD 36 FD 00   [19]  590 	ld	-3 (ix),#0x00
                            591 ;src/main.c:104: for(posX=0; posX<width;posX++){
   039B                     592 00126$:
   039B C1            [10]  593 	pop	bc
   039C E1            [10]  594 	pop	hl
   039D E5            [11]  595 	push	hl
   039E C5            [11]  596 	push	bc
   039F 29            [11]  597 	add	hl, hl
   03A0 3Er00         [ 7]  598 	ld	a,#<(_scene)
   03A2 85            [ 4]  599 	add	a, l
   03A3 DD 77 FE      [19]  600 	ld	-2 (ix),a
   03A6 3Es00         [ 7]  601 	ld	a,#>(_scene)
   03A8 8C            [ 4]  602 	adc	a, h
   03A9 DD 77 FF      [19]  603 	ld	-1 (ix),a
   03AC 11 00 00      [10]  604 	ld	de,#0x0000
   03AF                     605 00115$:
                            606 ;src/main.c:105: memptr = cpct_getScreenPtr(VMEM, posX*5, posY*20); 
   03AF DD 7E FC      [19]  607 	ld	a,-4 (ix)
   03B2 4F            [ 4]  608 	ld	c,a
   03B3 87            [ 4]  609 	add	a, a
   03B4 87            [ 4]  610 	add	a, a
   03B5 81            [ 4]  611 	add	a, c
   03B6 87            [ 4]  612 	add	a, a
   03B7 87            [ 4]  613 	add	a, a
   03B8 47            [ 4]  614 	ld	b,a
   03B9 4B            [ 4]  615 	ld	c,e
   03BA 79            [ 4]  616 	ld	a,c
   03BB 87            [ 4]  617 	add	a, a
   03BC 87            [ 4]  618 	add	a, a
   03BD 81            [ 4]  619 	add	a, c
   03BE D5            [11]  620 	push	de
   03BF C5            [11]  621 	push	bc
   03C0 33            [ 6]  622 	inc	sp
   03C1 F5            [11]  623 	push	af
   03C2 33            [ 6]  624 	inc	sp
   03C3 21 00 C0      [10]  625 	ld	hl,#0xC000
   03C6 E5            [11]  626 	push	hl
   03C7 CDr00r00      [17]  627 	call	_cpct_getScreenPtr
   03CA D1            [10]  628 	pop	de
   03CB 33            [ 6]  629 	inc	sp
   03CC 33            [ 6]  630 	inc	sp
   03CD E5            [11]  631 	push	hl
                            632 ;src/main.c:106: if(scene[posY][posX] == 1){
   03CE DD 6E FE      [19]  633 	ld	l,-2 (ix)
   03D1 DD 66 FF      [19]  634 	ld	h,-1 (ix)
   03D4 4E            [ 7]  635 	ld	c,(hl)
   03D5 23            [ 6]  636 	inc	hl
   03D6 46            [ 7]  637 	ld	b,(hl)
   03D7 6B            [ 4]  638 	ld	l, e
   03D8 62            [ 4]  639 	ld	h, d
   03D9 29            [11]  640 	add	hl, hl
   03DA 09            [11]  641 	add	hl,bc
   03DB 46            [ 7]  642 	ld	b,(hl)
   03DC 23            [ 6]  643 	inc	hl
   03DD 66            [ 7]  644 	ld	h,(hl)
   03DE 10 17         [13]  645 	djnz	00116$
   03E0 7C            [ 4]  646 	ld	a,h
   03E1 B7            [ 4]  647 	or	a, a
   03E2 20 13         [12]  648 	jr	NZ,00116$
                            649 ;src/main.c:107: cpct_drawSolidBox(memptr, 3, 5, 20);
   03E4 C1            [10]  650 	pop	bc
   03E5 C5            [11]  651 	push	bc
   03E6 D5            [11]  652 	push	de
   03E7 21 05 14      [10]  653 	ld	hl,#0x1405
   03EA E5            [11]  654 	push	hl
   03EB 3E 03         [ 7]  655 	ld	a,#0x03
   03ED F5            [11]  656 	push	af
   03EE 33            [ 6]  657 	inc	sp
   03EF C5            [11]  658 	push	bc
   03F0 CDr00r00      [17]  659 	call	_cpct_drawSolidBox
   03F3 F1            [10]  660 	pop	af
   03F4 F1            [10]  661 	pop	af
   03F5 33            [ 6]  662 	inc	sp
   03F6 D1            [10]  663 	pop	de
   03F7                     664 00116$:
                            665 ;src/main.c:104: for(posX=0; posX<width;posX++){
   03F7 13            [ 6]  666 	inc	de
   03F8 7B            [ 4]  667 	ld	a,e
   03F9 D6 10         [ 7]  668 	sub	a, #0x10
   03FB 7A            [ 4]  669 	ld	a,d
   03FC 17            [ 4]  670 	rla
   03FD 3F            [ 4]  671 	ccf
   03FE 1F            [ 4]  672 	rra
   03FF DE 80         [ 7]  673 	sbc	a, #0x80
   0401 38 AC         [12]  674 	jr	C,00115$
                            675 ;src/main.c:103: for(posY=0; posY<height;posY++){
   0403 DD 34 FC      [23]  676 	inc	-4 (ix)
   0406 20 03         [12]  677 	jr	NZ,00163$
   0408 DD 34 FD      [23]  678 	inc	-3 (ix)
   040B                     679 00163$:
   040B DD 7E FC      [19]  680 	ld	a,-4 (ix)
   040E D6 0A         [ 7]  681 	sub	a, #0x0A
   0410 DD 7E FD      [19]  682 	ld	a,-3 (ix)
   0413 17            [ 4]  683 	rla
   0414 3F            [ 4]  684 	ccf
   0415 1F            [ 4]  685 	rra
   0416 DE 80         [ 7]  686 	sbc	a, #0x80
   0418 DAr9Br03      [10]  687 	jp	C,00126$
   041B DD F9         [10]  688 	ld	sp, ix
   041D DD E1         [14]  689 	pop	ix
   041F C9            [10]  690 	ret
                            691 ;src/main.c:116: void game(){
                            692 ;	---------------------------------
                            693 ; Function game
                            694 ; ---------------------------------
   0420                     695 _game::
   0420 DD E5         [15]  696 	push	ix
   0422 DD 21 00 00   [14]  697 	ld	ix,#0
   0426 DD 39         [15]  698 	add	ix,sp
   0428 21 F0 FF      [10]  699 	ld	hl,#-16
   042B 39            [11]  700 	add	hl,sp
                            701 ;src/main.c:117: TPlayer p = { 0,100 };
   042C F9            [ 6]  702 	ld	sp, hl
   042D 23            [ 6]  703 	inc	hl
   042E 23            [ 6]  704 	inc	hl
   042F 36 00         [10]  705 	ld	(hl),#0x00
   0431 21 02 00      [10]  706 	ld	hl,#0x0002
   0434 39            [11]  707 	add	hl,sp
   0435 DD 75 FC      [19]  708 	ld	-4 (ix),l
   0438 DD 74 FD      [19]  709 	ld	-3 (ix),h
   043B DD 7E FC      [19]  710 	ld	a,-4 (ix)
   043E C6 01         [ 7]  711 	add	a, #0x01
   0440 DD 77 FE      [19]  712 	ld	-2 (ix),a
   0443 DD 7E FD      [19]  713 	ld	a,-3 (ix)
   0446 CE 00         [ 7]  714 	adc	a, #0x00
   0448 DD 77 FF      [19]  715 	ld	-1 (ix),a
   044B DD 6E FE      [19]  716 	ld	l,-2 (ix)
   044E DD 66 FF      [19]  717 	ld	h,-1 (ix)
   0451 36 64         [10]  718 	ld	(hl),#0x64
                            719 ;src/main.c:119: int i =1;
   0453 21 01 00      [10]  720 	ld	hl,#0x0001
   0456 E3            [19]  721 	ex	(sp), hl
                            722 ;src/main.c:120: u8* sprite = gladis_quieto_dcha;
   0457 DD 36 F6r00   [19]  723 	ld	-10 (ix),#<(_gladis_quieto_dcha)
   045B DD 36 F7s00   [19]  724 	ld	-9 (ix),#>(_gladis_quieto_dcha)
                            725 ;src/main.c:121: cpct_clearScreen(0);
   045F 21 00 40      [10]  726 	ld	hl,#0x4000
   0462 E5            [11]  727 	push	hl
   0463 AF            [ 4]  728 	xor	a, a
   0464 F5            [11]  729 	push	af
   0465 33            [ 6]  730 	inc	sp
   0466 26 C0         [ 7]  731 	ld	h, #0xC0
   0468 E5            [11]  732 	push	hl
   0469 CDr00r00      [17]  733 	call	_cpct_memset
                            734 ;src/main.c:122: drawMap(i);
   046C 21 01 00      [10]  735 	ld	hl,#0x0001
   046F E5            [11]  736 	push	hl
   0470 CDr0Fr03      [17]  737 	call	_drawMap
   0473 F1            [10]  738 	pop	af
                            739 ;src/main.c:123: while (1){
   0474                     740 00118$:
                            741 ;src/main.c:126: cpct_waitVSYNC();
   0474 CDr00r00      [17]  742 	call	_cpct_waitVSYNC
                            743 ;src/main.c:129: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   0477 DD 6E FE      [19]  744 	ld	l,-2 (ix)
   047A DD 66 FF      [19]  745 	ld	h,-1 (ix)
   047D 46            [ 7]  746 	ld	b,(hl)
   047E DD 6E FC      [19]  747 	ld	l,-4 (ix)
   0481 DD 66 FD      [19]  748 	ld	h,-3 (ix)
   0484 4E            [ 7]  749 	ld	c, (hl)
   0485 C5            [11]  750 	push	bc
   0486 21 00 C0      [10]  751 	ld	hl,#0xC000
   0489 E5            [11]  752 	push	hl
   048A CDr00r00      [17]  753 	call	_cpct_getScreenPtr
   048D DD 74 F5      [19]  754 	ld	-11 (ix),h
   0490 DD 75 F4      [19]  755 	ld	-12 (ix), l
   0493 DD 75 FA      [19]  756 	ld	-6 (ix), l
   0496 DD 7E F5      [19]  757 	ld	a,-11 (ix)
   0499 DD 77 FB      [19]  758 	ld	-5 (ix),a
                            759 ;src/main.c:130: cpct_drawSolidBox(memptr,0,4,16);
   049C 21 04 10      [10]  760 	ld	hl,#0x1004
   049F E5            [11]  761 	push	hl
   04A0 AF            [ 4]  762 	xor	a, a
   04A1 F5            [11]  763 	push	af
   04A2 33            [ 6]  764 	inc	sp
   04A3 DD 6E FA      [19]  765 	ld	l,-6 (ix)
   04A6 DD 66 FB      [19]  766 	ld	h,-5 (ix)
   04A9 E5            [11]  767 	push	hl
   04AA CDr00r00      [17]  768 	call	_cpct_drawSolidBox
   04AD F1            [10]  769 	pop	af
   04AE F1            [10]  770 	pop	af
   04AF 33            [ 6]  771 	inc	sp
                            772 ;src/main.c:134: cpct_scanKeyboard_f();
   04B0 CDr00r00      [17]  773 	call	_cpct_scanKeyboard_f
                            774 ;src/main.c:135: if(cpct_isKeyPressed(Key_CursorRight) && p.x < 76 ){
   04B3 21 00 02      [10]  775 	ld	hl,#0x0200
   04B6 CDr00r00      [17]  776 	call	_cpct_isKeyPressed
   04B9 DD 75 FA      [19]  777 	ld	-6 (ix), l
   04BC 7D            [ 4]  778 	ld	a, l
   04BD B7            [ 4]  779 	or	a, a
   04BE 28 1E         [12]  780 	jr	Z,00114$
   04C0 DD 6E FC      [19]  781 	ld	l,-4 (ix)
   04C3 DD 66 FD      [19]  782 	ld	h,-3 (ix)
   04C6 56            [ 7]  783 	ld	d,(hl)
   04C7 7A            [ 4]  784 	ld	a,d
   04C8 D6 4C         [ 7]  785 	sub	a, #0x4C
   04CA 30 12         [12]  786 	jr	NC,00114$
                            787 ;src/main.c:136: p.x += 1;
   04CC 14            [ 4]  788 	inc	d
   04CD DD 6E FC      [19]  789 	ld	l,-4 (ix)
   04D0 DD 66 FD      [19]  790 	ld	h,-3 (ix)
   04D3 72            [ 7]  791 	ld	(hl),d
                            792 ;src/main.c:137: sprite = gladis_quieto_dcha;
   04D4 DD 36 F6r00   [19]  793 	ld	-10 (ix),#<(_gladis_quieto_dcha)
   04D8 DD 36 F7s00   [19]  794 	ld	-9 (ix),#>(_gladis_quieto_dcha)
   04DC 18 6A         [12]  795 	jr	00115$
   04DE                     796 00114$:
                            797 ;src/main.c:138: }else if(cpct_isKeyPressed(Key_CursorLeft) && p.x > 0 ){
   04DE 21 01 01      [10]  798 	ld	hl,#0x0101
   04E1 CDr00r00      [17]  799 	call	_cpct_isKeyPressed
   04E4 7D            [ 4]  800 	ld	a,l
   04E5 B7            [ 4]  801 	or	a, a
   04E6 28 1D         [12]  802 	jr	Z,00110$
   04E8 DD 6E FC      [19]  803 	ld	l,-4 (ix)
   04EB DD 66 FD      [19]  804 	ld	h,-3 (ix)
   04EE 7E            [ 7]  805 	ld	a,(hl)
   04EF B7            [ 4]  806 	or	a, a
   04F0 28 13         [12]  807 	jr	Z,00110$
                            808 ;src/main.c:139: p.x -= 1;
   04F2 C6 FF         [ 7]  809 	add	a,#0xFF
   04F4 DD 6E FC      [19]  810 	ld	l,-4 (ix)
   04F7 DD 66 FD      [19]  811 	ld	h,-3 (ix)
   04FA 77            [ 7]  812 	ld	(hl),a
                            813 ;src/main.c:140: sprite = gladis_quieto_izda;
   04FB DD 36 F6r00   [19]  814 	ld	-10 (ix),#<(_gladis_quieto_izda)
   04FF DD 36 F7s00   [19]  815 	ld	-9 (ix),#>(_gladis_quieto_izda)
   0503 18 43         [12]  816 	jr	00115$
   0505                     817 00110$:
                            818 ;src/main.c:141: }else  if(cpct_isKeyPressed(Key_Esc)){
   0505 21 08 04      [10]  819 	ld	hl,#0x0408
   0508 CDr00r00      [17]  820 	call	_cpct_isKeyPressed
   050B 7D            [ 4]  821 	ld	a,l
   050C B7            [ 4]  822 	or	a, a
                            823 ;src/main.c:142: return;
   050D C2rA0r05      [10]  824 	jp	NZ,00120$
                            825 ;src/main.c:143: }else if(cpct_isKeyPressed(Key_Space)){
   0510 21 05 80      [10]  826 	ld	hl,#0x8005
   0513 CDr00r00      [17]  827 	call	_cpct_isKeyPressed
   0516 7D            [ 4]  828 	ld	a,l
   0517 B7            [ 4]  829 	or	a, a
   0518 28 2E         [12]  830 	jr	Z,00115$
                            831 ;src/main.c:144: cpct_clearScreen(0);
   051A 21 00 40      [10]  832 	ld	hl,#0x4000
   051D E5            [11]  833 	push	hl
   051E AF            [ 4]  834 	xor	a, a
   051F F5            [11]  835 	push	af
   0520 33            [ 6]  836 	inc	sp
   0521 26 C0         [ 7]  837 	ld	h, #0xC0
   0523 E5            [11]  838 	push	hl
   0524 CDr00r00      [17]  839 	call	_cpct_memset
                            840 ;src/main.c:145: if(i ==1 ) {i++;}
   0527 DD 7E F0      [19]  841 	ld	a,-16 (ix)
   052A 3D            [ 4]  842 	dec	a
   052B 20 10         [12]  843 	jr	NZ,00102$
   052D DD 7E F1      [19]  844 	ld	a,-15 (ix)
   0530 B7            [ 4]  845 	or	a, a
   0531 20 0A         [12]  846 	jr	NZ,00102$
   0533 DD 34 F0      [23]  847 	inc	-16 (ix)
   0536 20 09         [12]  848 	jr	NZ,00103$
   0538 DD 34 F1      [23]  849 	inc	-15 (ix)
   053B 18 04         [12]  850 	jr	00103$
   053D                     851 00102$:
                            852 ;src/main.c:146: else {i--;}
   053D E1            [10]  853 	pop	hl
   053E E5            [11]  854 	push	hl
   053F 2B            [ 6]  855 	dec	hl
   0540 E3            [19]  856 	ex	(sp), hl
   0541                     857 00103$:
                            858 ;src/main.c:147: drawMap(i);
   0541 E1            [10]  859 	pop	hl
   0542 E5            [11]  860 	push	hl
   0543 E5            [11]  861 	push	hl
   0544 CDr0Fr03      [17]  862 	call	_drawMap
   0547 F1            [10]  863 	pop	af
   0548                     864 00115$:
                            865 ;src/main.c:152: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   0548 DD 6E FE      [19]  866 	ld	l,-2 (ix)
   054B DD 66 FF      [19]  867 	ld	h,-1 (ix)
   054E 56            [ 7]  868 	ld	d,(hl)
   054F DD 6E FC      [19]  869 	ld	l,-4 (ix)
   0552 DD 66 FD      [19]  870 	ld	h,-3 (ix)
   0555 46            [ 7]  871 	ld	b,(hl)
   0556 D5            [11]  872 	push	de
   0557 33            [ 6]  873 	inc	sp
   0558 C5            [11]  874 	push	bc
   0559 33            [ 6]  875 	inc	sp
   055A 21 00 C0      [10]  876 	ld	hl,#0xC000
   055D E5            [11]  877 	push	hl
   055E CDr00r00      [17]  878 	call	_cpct_getScreenPtr
   0561 DD 74 FB      [19]  879 	ld	-5 (ix),h
   0564 DD 75 FA      [19]  880 	ld	-6 (ix), l
   0567 DD 75 F4      [19]  881 	ld	-12 (ix), l
   056A DD 7E FB      [19]  882 	ld	a,-5 (ix)
   056D DD 77 F5      [19]  883 	ld	-11 (ix),a
                            884 ;src/main.c:153: cpct_drawSpriteMasked(sprite,memptr,4,16);
   0570 DD 7E F4      [19]  885 	ld	a,-12 (ix)
   0573 DD 77 FA      [19]  886 	ld	-6 (ix),a
   0576 DD 7E F5      [19]  887 	ld	a,-11 (ix)
   0579 DD 77 FB      [19]  888 	ld	-5 (ix),a
   057C DD 7E F6      [19]  889 	ld	a,-10 (ix)
   057F DD 77 F8      [19]  890 	ld	-8 (ix),a
   0582 DD 7E F7      [19]  891 	ld	a,-9 (ix)
   0585 DD 77 F9      [19]  892 	ld	-7 (ix),a
   0588 21 04 10      [10]  893 	ld	hl,#0x1004
   058B E5            [11]  894 	push	hl
   058C DD 6E FA      [19]  895 	ld	l,-6 (ix)
   058F DD 66 FB      [19]  896 	ld	h,-5 (ix)
   0592 E5            [11]  897 	push	hl
   0593 DD 6E F8      [19]  898 	ld	l,-8 (ix)
   0596 DD 66 F9      [19]  899 	ld	h,-7 (ix)
   0599 E5            [11]  900 	push	hl
   059A CDr00r00      [17]  901 	call	_cpct_drawSpriteMasked
   059D C3r74r04      [10]  902 	jp	00118$
   05A0                     903 00120$:
   05A0 DD F9         [10]  904 	ld	sp, ix
   05A2 DD E1         [14]  905 	pop	ix
   05A4 C9            [10]  906 	ret
                            907 ;src/main.c:164: void loadMap(){
                            908 ;	---------------------------------
                            909 ; Function loadMap
                            910 ; ---------------------------------
   05A5                     911 _loadMap::
                            912 ;src/main.c:166: }
   05A5 C9            [10]  913 	ret
                            914 ;src/main.c:171: void main(void) {
                            915 ;	---------------------------------
                            916 ; Function main
                            917 ; ---------------------------------
   05A6                     918 _main::
                            919 ;src/main.c:173: init();
   05A6 CDr00r00      [17]  920 	call	_init
                            921 ;src/main.c:177: while(1){
   05A9                     922 00102$:
                            923 ;src/main.c:178: menu();
   05A9 CDrA9r02      [17]  924 	call	_menu
                            925 ;src/main.c:180: game();
   05AC CDr20r04      [17]  926 	call	_game
   05AF 18 F8         [12]  927 	jr	00102$
                            928 	.area _CODE
                            929 	.area _INITIALIZER
                            930 	.area _CABS (ABS)
