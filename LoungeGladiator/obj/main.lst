                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Sep 22 2015) (CYGWIN)
                              4 ; This file was generated Tue Oct  6 12:40:57 2015
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _game
                             14 	.globl _drawVida
                             15 	.globl _drawFatiga
                             16 	.globl _checkSpriteFlecha
                             17 	.globl _checkSprite
                             18 	.globl _checkCollisions
                             19 	.globl _menu
                             20 	.globl _init
                             21 	.globl _cpct_getScreenPtr
                             22 	.globl _cpct_setPalette
                             23 	.globl _cpct_fw2hw
                             24 	.globl _cpct_waitVSYNC
                             25 	.globl _cpct_setVideoMode
                             26 	.globl _cpct_drawStringM0
                             27 	.globl _cpct_drawSolidBox
                             28 	.globl _cpct_drawSpriteMasked
                             29 	.globl _cpct_isKeyPressed
                             30 	.globl _cpct_scanKeyboard_f
                             31 	.globl _cpct_memset
                             32 	.globl _cpct_disableFirmware
                             33 	.globl _g_palette
                             34 ;--------------------------------------------------------
                             35 ; special function registers
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; ram data
                             39 ;--------------------------------------------------------
                             40 	.area _DATA
                             41 ;--------------------------------------------------------
                             42 ; ram data
                             43 ;--------------------------------------------------------
                             44 	.area _INITIALIZED
                             45 ;--------------------------------------------------------
                             46 ; absolute external ram data
                             47 ;--------------------------------------------------------
                             48 	.area _DABS (ABS)
                             49 ;--------------------------------------------------------
                             50 ; global & static initialisations
                             51 ;--------------------------------------------------------
                             52 	.area _HOME
                             53 	.area _GSINIT
                             54 	.area _GSFINAL
                             55 	.area _GSINIT
                             56 ;--------------------------------------------------------
                             57 ; Home
                             58 ;--------------------------------------------------------
                             59 	.area _HOME
                             60 	.area _HOME
                             61 ;--------------------------------------------------------
                             62 ; code
                             63 ;--------------------------------------------------------
                             64 	.area _CODE
                             65 ;src/main.c:50: void init(){
                             66 ;	---------------------------------
                             67 ; Function init
                             68 ; ---------------------------------
   0000                      69 _init::
                             70 ;src/main.c:51: cpct_disableFirmware();
   0000 CDr00r00      [17]   71 	call	_cpct_disableFirmware
                             72 ;src/main.c:52: cpct_setVideoMode(0);
   0003 AF            [ 4]   73 	xor	a, a
   0004 F5            [11]   74 	push	af
   0005 33            [ 6]   75 	inc	sp
   0006 CDr00r00      [17]   76 	call	_cpct_setVideoMode
   0009 33            [ 6]   77 	inc	sp
                             78 ;src/main.c:53: cpct_fw2hw(g_palette,4);
   000A 11r25r00      [10]   79 	ld	de,#_g_palette
   000D 3E 04         [ 7]   80 	ld	a,#0x04
   000F F5            [11]   81 	push	af
   0010 33            [ 6]   82 	inc	sp
   0011 D5            [11]   83 	push	de
   0012 CDr00r00      [17]   84 	call	_cpct_fw2hw
   0015 F1            [10]   85 	pop	af
   0016 33            [ 6]   86 	inc	sp
                             87 ;src/main.c:54: cpct_setPalette(g_palette,4);
   0017 11r25r00      [10]   88 	ld	de,#_g_palette
   001A 3E 04         [ 7]   89 	ld	a,#0x04
   001C F5            [11]   90 	push	af
   001D 33            [ 6]   91 	inc	sp
   001E D5            [11]   92 	push	de
   001F CDr00r00      [17]   93 	call	_cpct_setPalette
   0022 F1            [10]   94 	pop	af
   0023 33            [ 6]   95 	inc	sp
   0024 C9            [10]   96 	ret
   0025                      97 _g_palette:
   0025 00                   98 	.db #0x00	; 0
   0026 1A                   99 	.db #0x1A	; 26
   0027 06                  100 	.db #0x06	; 6
   0028 12                  101 	.db #0x12	; 18
                            102 ;src/main.c:58: void menu(){
                            103 ;	---------------------------------
                            104 ; Function menu
                            105 ; ---------------------------------
   0029                     106 _menu::
                            107 ;src/main.c:60: cpct_clearScreen(0);
   0029 21 00 40      [10]  108 	ld	hl,#0x4000
   002C E5            [11]  109 	push	hl
   002D AF            [ 4]  110 	xor	a, a
   002E F5            [11]  111 	push	af
   002F 33            [ 6]  112 	inc	sp
   0030 26 C0         [ 7]  113 	ld	h, #0xC0
   0032 E5            [11]  114 	push	hl
   0033 CDr00r00      [17]  115 	call	_cpct_memset
                            116 ;src/main.c:62: memptr = cpct_getScreenPtr(VMEM,20,10);
   0036 21 14 0A      [10]  117 	ld	hl,#0x0A14
   0039 E5            [11]  118 	push	hl
   003A 21 00 C0      [10]  119 	ld	hl,#0xC000
   003D E5            [11]  120 	push	hl
   003E CDr00r00      [17]  121 	call	_cpct_getScreenPtr
                            122 ;src/main.c:63: cpct_drawStringM0("Super Menu",memptr,2,3);
   0041 EB            [ 4]  123 	ex	de,hl
   0042 01r7Er00      [10]  124 	ld	bc,#___str_0+0
   0045 21 02 03      [10]  125 	ld	hl,#0x0302
   0048 E5            [11]  126 	push	hl
   0049 D5            [11]  127 	push	de
   004A C5            [11]  128 	push	bc
   004B CDr00r00      [17]  129 	call	_cpct_drawStringM0
   004E 21 06 00      [10]  130 	ld	hl,#6
   0051 39            [11]  131 	add	hl,sp
   0052 F9            [ 6]  132 	ld	sp,hl
                            133 ;src/main.c:65: memptr = cpct_getScreenPtr(VMEM,18,180);
   0053 21 12 B4      [10]  134 	ld	hl,#0xB412
   0056 E5            [11]  135 	push	hl
   0057 21 00 C0      [10]  136 	ld	hl,#0xC000
   005A E5            [11]  137 	push	hl
   005B CDr00r00      [17]  138 	call	_cpct_getScreenPtr
                            139 ;src/main.c:66: cpct_drawStringM0("Pulsa Intro",memptr,4,5);
   005E EB            [ 4]  140 	ex	de,hl
   005F 01r89r00      [10]  141 	ld	bc,#___str_1+0
   0062 21 04 05      [10]  142 	ld	hl,#0x0504
   0065 E5            [11]  143 	push	hl
   0066 D5            [11]  144 	push	de
   0067 C5            [11]  145 	push	bc
   0068 CDr00r00      [17]  146 	call	_cpct_drawStringM0
   006B 21 06 00      [10]  147 	ld	hl,#6
   006E 39            [11]  148 	add	hl,sp
   006F F9            [ 6]  149 	ld	sp,hl
                            150 ;src/main.c:68: do{
   0070                     151 00101$:
                            152 ;src/main.c:69: cpct_scanKeyboard_f();
   0070 CDr00r00      [17]  153 	call	_cpct_scanKeyboard_f
                            154 ;src/main.c:70: }while(!cpct_isKeyPressed(Key_Enter));
   0073 21 00 40      [10]  155 	ld	hl,#0x4000
   0076 CDr00r00      [17]  156 	call	_cpct_isKeyPressed
   0079 7D            [ 4]  157 	ld	a,l
   007A B7            [ 4]  158 	or	a, a
   007B 28 F3         [12]  159 	jr	Z,00101$
   007D C9            [10]  160 	ret
   007E                     161 ___str_0:
   007E 53 75 70 65 72 20   162 	.ascii "Super Menu"
        4D 65 6E 75
   0088 00                  163 	.db 0x00
   0089                     164 ___str_1:
   0089 50 75 6C 73 61 20   165 	.ascii "Pulsa Intro"
        49 6E 74 72 6F
   0094 00                  166 	.db 0x00
                            167 ;src/main.c:75: u8* checkCollisions(u8 pX, u8 pY, u8 eX, u8 eY, u8* dir, u8* atk, u8 mode){
                            168 ;	---------------------------------
                            169 ; Function checkCollisions
                            170 ; ---------------------------------
   0095                     171 _checkCollisions::
                            172 ;src/main.c:81: u8 eopY = eY + 16;
   0095 C9            [10]  173 	ret
                            174 ;src/main.c:86: u8* checkSprite(u8* atk, u8* dir){
                            175 ;	---------------------------------
                            176 ; Function checkSprite
                            177 ; ---------------------------------
   0096                     178 _checkSprite::
                            179 ;src/main.c:87: if(atk <= 20)
   0096 3E 14         [ 7]  180 	ld	a,#0x14
   0098 FD 21 02 00   [14]  181 	ld	iy,#2
   009C FD 39         [15]  182 	add	iy,sp
   009E FD BE 00      [19]  183 	cp	a, 0 (iy)
   00A1 3E 00         [ 7]  184 	ld	a,#0x00
   00A3 FD 9E 01      [19]  185 	sbc	a, 1 (iy)
   00A6 38 3B         [12]  186 	jr	C,00110$
                            187 ;src/main.c:88: switch((int)dir){
   00A8 FD 21 04 00   [14]  188 	ld	iy,#4
   00AC FD 39         [15]  189 	add	iy,sp
   00AE FD 5E 00      [19]  190 	ld	e,0 (iy)
   00B1 FD 56 01      [19]  191 	ld	d,1 (iy)
   00B4 CB 7A         [ 8]  192 	bit	7, d
   00B6 C0            [11]  193 	ret	NZ
   00B7 3E 03         [ 7]  194 	ld	a,#0x03
   00B9 BB            [ 4]  195 	cp	a, e
   00BA 3E 00         [ 7]  196 	ld	a,#0x00
   00BC 9A            [ 4]  197 	sbc	a, d
   00BD E2rC2r00      [10]  198 	jp	PO, 00130$
   00C0 EE 80         [ 7]  199 	xor	a, #0x80
   00C2                     200 00130$:
   00C2 F8            [11]  201 	ret	M
   00C3 16 00         [ 7]  202 	ld	d,#0x00
   00C5 21rCBr00      [10]  203 	ld	hl,#00131$
   00C8 19            [11]  204 	add	hl,de
   00C9 19            [11]  205 	add	hl,de
                            206 ;src/main.c:89: case 0:
   00CA E9            [ 4]  207 	jp	(hl)
   00CB                     208 00131$:
   00CB 18 06         [12]  209 	jr	00101$
   00CD 18 08         [12]  210 	jr	00102$
   00CF 18 0A         [12]  211 	jr	00103$
   00D1 18 0C         [12]  212 	jr	00104$
   00D3                     213 00101$:
                            214 ;src/main.c:90: return gladis_quieto_dcha;
   00D3 21r00r00      [10]  215 	ld	hl,#_gladis_quieto_dcha
   00D6 C9            [10]  216 	ret
                            217 ;src/main.c:92: case 1:
   00D7                     218 00102$:
                            219 ;src/main.c:93: return gladis_quieto_izda;
   00D7 21r00r00      [10]  220 	ld	hl,#_gladis_quieto_izda
   00DA C9            [10]  221 	ret
                            222 ;src/main.c:95: case 2:
   00DB                     223 00103$:
                            224 ;src/main.c:96: return gladis_quieto_dcha;
   00DB 21r00r00      [10]  225 	ld	hl,#_gladis_quieto_dcha
   00DE C9            [10]  226 	ret
                            227 ;src/main.c:98: case 3:
   00DF                     228 00104$:
                            229 ;src/main.c:99: return gladis_arriba_dcha;
   00DF 21r00r00      [10]  230 	ld	hl,#_gladis_arriba_dcha
   00E2 C9            [10]  231 	ret
                            232 ;src/main.c:100: }
   00E3                     233 00110$:
                            234 ;src/main.c:101: else if(dir == 0){
   00E3 21 05 00      [10]  235 	ld	hl, #4+1
   00E6 39            [11]  236 	add	hl, sp
   00E7 7E            [ 7]  237 	ld	a, (hl)
   00E8 2B            [ 6]  238 	dec	hl
   00E9 B6            [ 7]  239 	or	a,(hl)
   00EA 20 04         [12]  240 	jr	NZ,00107$
                            241 ;src/main.c:102: return gladis_atk_dcha;
   00EC 21r00r00      [10]  242 	ld	hl,#_gladis_atk_dcha
   00EF C9            [10]  243 	ret
   00F0                     244 00107$:
                            245 ;src/main.c:104: return gladis_atk_izda;
   00F0 21r00r00      [10]  246 	ld	hl,#_gladis_atk_izda
   00F3 C9            [10]  247 	ret
                            248 ;src/main.c:108: u8* checkSpriteFlecha(u8* dir){
                            249 ;	---------------------------------
                            250 ; Function checkSpriteFlecha
                            251 ; ---------------------------------
   00F4                     252 _checkSpriteFlecha::
                            253 ;src/main.c:109: switch((int)dir){
   00F4 C1            [10]  254 	pop	bc
   00F5 D1            [10]  255 	pop	de
   00F6 D5            [11]  256 	push	de
   00F7 C5            [11]  257 	push	bc
   00F8 CB 7A         [ 8]  258 	bit	7, d
   00FA C0            [11]  259 	ret	NZ
   00FB 3E 03         [ 7]  260 	ld	a,#0x03
   00FD BB            [ 4]  261 	cp	a, e
   00FE 3E 00         [ 7]  262 	ld	a,#0x00
   0100 9A            [ 4]  263 	sbc	a, d
   0101 E2r06r01      [10]  264 	jp	PO, 00116$
   0104 EE 80         [ 7]  265 	xor	a, #0x80
   0106                     266 00116$:
   0106 F8            [11]  267 	ret	M
   0107 16 00         [ 7]  268 	ld	d,#0x00
   0109 21r0Fr01      [10]  269 	ld	hl,#00117$
   010C 19            [11]  270 	add	hl,de
   010D 19            [11]  271 	add	hl,de
                            272 ;src/main.c:110: case 0:
   010E E9            [ 4]  273 	jp	(hl)
   010F                     274 00117$:
   010F 18 06         [12]  275 	jr	00101$
   0111 18 08         [12]  276 	jr	00102$
   0113 18 0A         [12]  277 	jr	00103$
   0115 18 0C         [12]  278 	jr	00104$
   0117                     279 00101$:
                            280 ;src/main.c:111: return flecha_dcha;
   0117 21r00r00      [10]  281 	ld	hl,#_flecha_dcha
   011A C9            [10]  282 	ret
                            283 ;src/main.c:113: case 1:
   011B                     284 00102$:
                            285 ;src/main.c:114: return flecha_izda;
   011B 21r00r00      [10]  286 	ld	hl,#_flecha_izda
   011E C9            [10]  287 	ret
                            288 ;src/main.c:116: case 2:
   011F                     289 00103$:
                            290 ;src/main.c:117: return flecha_abajo;
   011F 21r00r00      [10]  291 	ld	hl,#_flecha_abajo
   0122 C9            [10]  292 	ret
                            293 ;src/main.c:119: case 3:
   0123                     294 00104$:
                            295 ;src/main.c:120: return flecha_arriba;
   0123 21r00r00      [10]  296 	ld	hl,#_flecha_arriba
                            297 ;src/main.c:122: }
   0126 C9            [10]  298 	ret
                            299 ;src/main.c:126: void drawFatiga(u8* atk, u8* memptr, u8 col){
                            300 ;	---------------------------------
                            301 ; Function drawFatiga
                            302 ; ---------------------------------
   0127                     303 _drawFatiga::
   0127 DD E5         [15]  304 	push	ix
   0129 DD 21 00 00   [14]  305 	ld	ix,#0
   012D DD 39         [15]  306 	add	ix,sp
                            307 ;src/main.c:127: if(atk < 20)
   012F DD 7E 04      [19]  308 	ld	a,4 (ix)
   0132 D6 14         [ 7]  309 	sub	a, #0x14
   0134 DD 7E 05      [19]  310 	ld	a,5 (ix)
   0137 DE 00         [ 7]  311 	sbc	a, #0x00
   0139 30 04         [12]  312 	jr	NC,00102$
                            313 ;src/main.c:128: col = 2;
   013B DD 36 08 02   [19]  314 	ld	8 (ix),#0x02
   013F                     315 00102$:
                            316 ;src/main.c:129: if(atk > 30 || atk <= 20){
   013F 3E 14         [ 7]  317 	ld	a,#0x14
   0141 DD BE 04      [19]  318 	cp	a, 4 (ix)
   0144 3E 00         [ 7]  319 	ld	a,#0x00
   0146 DD 9E 05      [19]  320 	sbc	a, 5 (ix)
   0149 3E 00         [ 7]  321 	ld	a,#0x00
   014B 17            [ 4]  322 	rla
   014C 57            [ 4]  323 	ld	d,a
   014D 3E 1E         [ 7]  324 	ld	a,#0x1E
   014F DD BE 04      [19]  325 	cp	a, 4 (ix)
   0152 3E 00         [ 7]  326 	ld	a,#0x00
   0154 DD 9E 05      [19]  327 	sbc	a, 5 (ix)
   0157 38 04         [12]  328 	jr	C,00103$
   0159 7A            [ 4]  329 	ld	a,d
   015A B7            [ 4]  330 	or	a, a
   015B 20 27         [12]  331 	jr	NZ,00104$
   015D                     332 00103$:
                            333 ;src/main.c:130: memptr = cpct_getScreenPtr(VMEM,4,160);
   015D D5            [11]  334 	push	de
   015E 21 04 A0      [10]  335 	ld	hl,#0xA004
   0161 E5            [11]  336 	push	hl
   0162 21 00 C0      [10]  337 	ld	hl,#0xC000
   0165 E5            [11]  338 	push	hl
   0166 CDr00r00      [17]  339 	call	_cpct_getScreenPtr
   0169 D1            [10]  340 	pop	de
                            341 ;src/main.c:131: cpct_drawSolidBox(memptr, col, 2, 8);
   016A DD 75 06      [19]  342 	ld	6 (ix),l
   016D DD 74 07      [19]  343 	ld	7 (ix),h
   0170 4D            [ 4]  344 	ld	c,l
   0171 44            [ 4]  345 	ld	b,h
   0172 D5            [11]  346 	push	de
   0173 21 02 08      [10]  347 	ld	hl,#0x0802
   0176 E5            [11]  348 	push	hl
   0177 DD 7E 08      [19]  349 	ld	a,8 (ix)
   017A F5            [11]  350 	push	af
   017B 33            [ 6]  351 	inc	sp
   017C C5            [11]  352 	push	bc
   017D CDr00r00      [17]  353 	call	_cpct_drawSolidBox
   0180 F1            [10]  354 	pop	af
   0181 F1            [10]  355 	pop	af
   0182 33            [ 6]  356 	inc	sp
   0183 D1            [10]  357 	pop	de
   0184                     358 00104$:
                            359 ;src/main.c:133: if(atk > 40 || atk <= 20){
   0184 3E 28         [ 7]  360 	ld	a,#0x28
   0186 DD BE 04      [19]  361 	cp	a, 4 (ix)
   0189 3E 00         [ 7]  362 	ld	a,#0x00
   018B DD 9E 05      [19]  363 	sbc	a, 5 (ix)
   018E 38 04         [12]  364 	jr	C,00106$
   0190 7A            [ 4]  365 	ld	a,d
   0191 B7            [ 4]  366 	or	a, a
   0192 20 27         [12]  367 	jr	NZ,00107$
   0194                     368 00106$:
                            369 ;src/main.c:134: memptr = cpct_getScreenPtr(VMEM,7,160);
   0194 D5            [11]  370 	push	de
   0195 21 07 A0      [10]  371 	ld	hl,#0xA007
   0198 E5            [11]  372 	push	hl
   0199 21 00 C0      [10]  373 	ld	hl,#0xC000
   019C E5            [11]  374 	push	hl
   019D CDr00r00      [17]  375 	call	_cpct_getScreenPtr
   01A0 D1            [10]  376 	pop	de
                            377 ;src/main.c:135: cpct_drawSolidBox(memptr, col, 2, 8);
   01A1 DD 75 06      [19]  378 	ld	6 (ix),l
   01A4 DD 74 07      [19]  379 	ld	7 (ix),h
   01A7 4D            [ 4]  380 	ld	c,l
   01A8 44            [ 4]  381 	ld	b,h
   01A9 D5            [11]  382 	push	de
   01AA 21 02 08      [10]  383 	ld	hl,#0x0802
   01AD E5            [11]  384 	push	hl
   01AE DD 7E 08      [19]  385 	ld	a,8 (ix)
   01B1 F5            [11]  386 	push	af
   01B2 33            [ 6]  387 	inc	sp
   01B3 C5            [11]  388 	push	bc
   01B4 CDr00r00      [17]  389 	call	_cpct_drawSolidBox
   01B7 F1            [10]  390 	pop	af
   01B8 F1            [10]  391 	pop	af
   01B9 33            [ 6]  392 	inc	sp
   01BA D1            [10]  393 	pop	de
   01BB                     394 00107$:
                            395 ;src/main.c:137: if(atk <= 20){
   01BB 7A            [ 4]  396 	ld	a,d
   01BC B7            [ 4]  397 	or	a, a
   01BD 20 22         [12]  398 	jr	NZ,00111$
                            399 ;src/main.c:138: memptr = cpct_getScreenPtr(VMEM,10,160);
   01BF 21 0A A0      [10]  400 	ld	hl,#0xA00A
   01C2 E5            [11]  401 	push	hl
   01C3 21 00 C0      [10]  402 	ld	hl,#0xC000
   01C6 E5            [11]  403 	push	hl
   01C7 CDr00r00      [17]  404 	call	_cpct_getScreenPtr
                            405 ;src/main.c:139: cpct_drawSolidBox(memptr, col, 2, 8);
   01CA DD 75 06      [19]  406 	ld	6 (ix),l
   01CD DD 74 07      [19]  407 	ld	7 (ix),h
   01D0 EB            [ 4]  408 	ex	de,hl
   01D1 21 02 08      [10]  409 	ld	hl,#0x0802
   01D4 E5            [11]  410 	push	hl
   01D5 DD 7E 08      [19]  411 	ld	a,8 (ix)
   01D8 F5            [11]  412 	push	af
   01D9 33            [ 6]  413 	inc	sp
   01DA D5            [11]  414 	push	de
   01DB CDr00r00      [17]  415 	call	_cpct_drawSolidBox
   01DE F1            [10]  416 	pop	af
   01DF F1            [10]  417 	pop	af
   01E0 33            [ 6]  418 	inc	sp
   01E1                     419 00111$:
   01E1 DD E1         [14]  420 	pop	ix
   01E3 C9            [10]  421 	ret
                            422 ;src/main.c:144: void drawVida(u8* life, u8* memptr){
                            423 ;	---------------------------------
                            424 ; Function drawVida
                            425 ; ---------------------------------
   01E4                     426 _drawVida::
   01E4 DD E5         [15]  427 	push	ix
   01E6 DD 21 00 00   [14]  428 	ld	ix,#0
   01EA DD 39         [15]  429 	add	ix,sp
                            430 ;src/main.c:145: if(life >= 1){
   01EC DD 7E 04      [19]  431 	ld	a,4 (ix)
   01EF D6 01         [ 7]  432 	sub	a, #0x01
   01F1 DD 7E 05      [19]  433 	ld	a,5 (ix)
   01F4 DE 00         [ 7]  434 	sbc	a, #0x00
   01F6 38 1F         [12]  435 	jr	C,00102$
                            436 ;src/main.c:146: memptr = cpct_getScreenPtr(VMEM,55,160);
   01F8 21 37 A0      [10]  437 	ld	hl,#0xA037
   01FB E5            [11]  438 	push	hl
   01FC 21 00 C0      [10]  439 	ld	hl,#0xC000
   01FF E5            [11]  440 	push	hl
   0200 CDr00r00      [17]  441 	call	_cpct_getScreenPtr
                            442 ;src/main.c:147: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   0203 DD 75 06      [19]  443 	ld	6 (ix),l
   0206 DD 74 07      [19]  444 	ld	7 (ix),h
   0209 4D            [ 4]  445 	ld	c,l
   020A 44            [ 4]  446 	ld	b,h
   020B 11r00r00      [10]  447 	ld	de,#_corazon_lleno
   020E 21 04 08      [10]  448 	ld	hl,#0x0804
   0211 E5            [11]  449 	push	hl
   0212 C5            [11]  450 	push	bc
   0213 D5            [11]  451 	push	de
   0214 CDr00r00      [17]  452 	call	_cpct_drawSpriteMasked
   0217                     453 00102$:
                            454 ;src/main.c:149: memptr = cpct_getScreenPtr(VMEM,60,160);
   0217 21 3C A0      [10]  455 	ld	hl,#0xA03C
   021A E5            [11]  456 	push	hl
   021B 21 00 C0      [10]  457 	ld	hl,#0xC000
   021E E5            [11]  458 	push	hl
   021F CDr00r00      [17]  459 	call	_cpct_getScreenPtr
                            460 ;src/main.c:147: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   0222 DD 75 06      [19]  461 	ld	6 (ix),l
   0225 DD 74 07      [19]  462 	ld	7 (ix),h
   0228 4D            [ 4]  463 	ld	c,l
   0229 44            [ 4]  464 	ld	b,h
                            465 ;src/main.c:150: if(life >= 2)
   022A DD 7E 04      [19]  466 	ld	a,4 (ix)
   022D D6 02         [ 7]  467 	sub	a, #0x02
   022F DD 7E 05      [19]  468 	ld	a,5 (ix)
   0232 DE 00         [ 7]  469 	sbc	a, #0x00
   0234 38 0E         [12]  470 	jr	C,00104$
                            471 ;src/main.c:151: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   0236 11r00r00      [10]  472 	ld	de,#_corazon_lleno
   0239 21 04 08      [10]  473 	ld	hl,#0x0804
   023C E5            [11]  474 	push	hl
   023D C5            [11]  475 	push	bc
   023E D5            [11]  476 	push	de
   023F CDr00r00      [17]  477 	call	_cpct_drawSpriteMasked
   0242 18 0C         [12]  478 	jr	00105$
   0244                     479 00104$:
                            480 ;src/main.c:153: cpct_drawSpriteMasked(corazon_roto, memptr, 4, 8);
   0244 11r00r00      [10]  481 	ld	de,#_corazon_roto
   0247 21 04 08      [10]  482 	ld	hl,#0x0804
   024A E5            [11]  483 	push	hl
   024B C5            [11]  484 	push	bc
   024C D5            [11]  485 	push	de
   024D CDr00r00      [17]  486 	call	_cpct_drawSpriteMasked
   0250                     487 00105$:
                            488 ;src/main.c:154: memptr = cpct_getScreenPtr(VMEM,65,160);
   0250 21 41 A0      [10]  489 	ld	hl,#0xA041
   0253 E5            [11]  490 	push	hl
   0254 21 00 C0      [10]  491 	ld	hl,#0xC000
   0257 E5            [11]  492 	push	hl
   0258 CDr00r00      [17]  493 	call	_cpct_getScreenPtr
                            494 ;src/main.c:147: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   025B DD 75 06      [19]  495 	ld	6 (ix),l
   025E DD 74 07      [19]  496 	ld	7 (ix),h
   0261 EB            [ 4]  497 	ex	de,hl
                            498 ;src/main.c:155: if(life >= 3)
   0262 DD 7E 04      [19]  499 	ld	a,4 (ix)
   0265 D6 03         [ 7]  500 	sub	a, #0x03
   0267 DD 7E 05      [19]  501 	ld	a,5 (ix)
   026A DE 00         [ 7]  502 	sbc	a, #0x00
   026C 38 0E         [12]  503 	jr	C,00107$
                            504 ;src/main.c:156: cpct_drawSpriteMasked(corazon_lleno, memptr, 4, 8);
   026E 01r00r00      [10]  505 	ld	bc,#_corazon_lleno
   0271 21 04 08      [10]  506 	ld	hl,#0x0804
   0274 E5            [11]  507 	push	hl
   0275 D5            [11]  508 	push	de
   0276 C5            [11]  509 	push	bc
   0277 CDr00r00      [17]  510 	call	_cpct_drawSpriteMasked
   027A 18 0C         [12]  511 	jr	00109$
   027C                     512 00107$:
                            513 ;src/main.c:158: cpct_drawSpriteMasked(corazon_roto, memptr, 4, 8);
   027C 01r00r00      [10]  514 	ld	bc,#_corazon_roto+0
   027F 21 04 08      [10]  515 	ld	hl,#0x0804
   0282 E5            [11]  516 	push	hl
   0283 D5            [11]  517 	push	de
   0284 C5            [11]  518 	push	bc
   0285 CDr00r00      [17]  519 	call	_cpct_drawSpriteMasked
   0288                     520 00109$:
   0288 DD E1         [14]  521 	pop	ix
   028A C9            [10]  522 	ret
                            523 ;src/main.c:164: void game(){
                            524 ;	---------------------------------
                            525 ; Function game
                            526 ; ---------------------------------
   028B                     527 _game::
   028B DD E5         [15]  528 	push	ix
   028D DD 21 00 00   [14]  529 	ld	ix,#0
   0291 DD 39         [15]  530 	add	ix,sp
   0293 21 B1 FF      [10]  531 	ld	hl,#-79
   0296 39            [11]  532 	add	hl,sp
   0297 F9            [ 6]  533 	ld	sp,hl
                            534 ;src/main.c:165: TPlayer p = { 0,100,0,100,20,20,0,0,6,3 };
   0298 21 0A 00      [10]  535 	ld	hl,#0x000A
   029B 39            [11]  536 	add	hl,sp
   029C 36 00         [10]  537 	ld	(hl),#0x00
   029E 21 0A 00      [10]  538 	ld	hl,#0x000A
   02A1 39            [11]  539 	add	hl,sp
   02A2 DD 75 E5      [19]  540 	ld	-27 (ix),l
   02A5 DD 74 E6      [19]  541 	ld	-26 (ix),h
   02A8 DD 7E E5      [19]  542 	ld	a,-27 (ix)
   02AB C6 01         [ 7]  543 	add	a, #0x01
   02AD DD 77 FA      [19]  544 	ld	-6 (ix),a
   02B0 DD 7E E6      [19]  545 	ld	a,-26 (ix)
   02B3 CE 00         [ 7]  546 	adc	a, #0x00
   02B5 DD 77 FB      [19]  547 	ld	-5 (ix),a
   02B8 DD 6E FA      [19]  548 	ld	l,-6 (ix)
   02BB DD 66 FB      [19]  549 	ld	h,-5 (ix)
   02BE 36 64         [10]  550 	ld	(hl),#0x64
   02C0 DD 7E E5      [19]  551 	ld	a,-27 (ix)
   02C3 C6 02         [ 7]  552 	add	a, #0x02
   02C5 DD 77 FC      [19]  553 	ld	-4 (ix),a
   02C8 DD 7E E6      [19]  554 	ld	a,-26 (ix)
   02CB CE 00         [ 7]  555 	adc	a, #0x00
   02CD DD 77 FD      [19]  556 	ld	-3 (ix),a
   02D0 DD 6E FC      [19]  557 	ld	l,-4 (ix)
   02D3 DD 66 FD      [19]  558 	ld	h,-3 (ix)
   02D6 36 00         [10]  559 	ld	(hl),#0x00
   02D8 DD 7E E5      [19]  560 	ld	a,-27 (ix)
   02DB C6 03         [ 7]  561 	add	a, #0x03
   02DD DD 77 FE      [19]  562 	ld	-2 (ix),a
   02E0 DD 7E E6      [19]  563 	ld	a,-26 (ix)
   02E3 CE 00         [ 7]  564 	adc	a, #0x00
   02E5 DD 77 FF      [19]  565 	ld	-1 (ix),a
   02E8 DD 6E FE      [19]  566 	ld	l,-2 (ix)
   02EB DD 66 FF      [19]  567 	ld	h,-1 (ix)
   02EE 36 64         [10]  568 	ld	(hl),#0x64
   02F0 DD 7E E5      [19]  569 	ld	a,-27 (ix)
   02F3 C6 04         [ 7]  570 	add	a, #0x04
   02F5 DD 77 E3      [19]  571 	ld	-29 (ix),a
   02F8 DD 7E E6      [19]  572 	ld	a,-26 (ix)
   02FB CE 00         [ 7]  573 	adc	a, #0x00
   02FD DD 77 E4      [19]  574 	ld	-28 (ix),a
   0300 DD 6E E3      [19]  575 	ld	l,-29 (ix)
   0303 DD 66 E4      [19]  576 	ld	h,-28 (ix)
   0306 36 14         [10]  577 	ld	(hl),#0x14
   0308 23            [ 6]  578 	inc	hl
   0309 36 00         [10]  579 	ld	(hl),#0x00
   030B DD 7E E5      [19]  580 	ld	a,-27 (ix)
   030E C6 06         [ 7]  581 	add	a, #0x06
   0310 DD 77 E1      [19]  582 	ld	-31 (ix),a
   0313 DD 7E E6      [19]  583 	ld	a,-26 (ix)
   0316 CE 00         [ 7]  584 	adc	a, #0x00
   0318 DD 77 E2      [19]  585 	ld	-30 (ix),a
   031B DD 6E E1      [19]  586 	ld	l,-31 (ix)
   031E DD 66 E2      [19]  587 	ld	h,-30 (ix)
   0321 36 14         [10]  588 	ld	(hl),#0x14
   0323 23            [ 6]  589 	inc	hl
   0324 36 00         [10]  590 	ld	(hl),#0x00
   0326 DD 7E E5      [19]  591 	ld	a,-27 (ix)
   0329 C6 08         [ 7]  592 	add	a, #0x08
   032B DD 77 DF      [19]  593 	ld	-33 (ix),a
   032E DD 7E E6      [19]  594 	ld	a,-26 (ix)
   0331 CE 00         [ 7]  595 	adc	a, #0x00
   0333 DD 77 E0      [19]  596 	ld	-32 (ix),a
   0336 DD 6E DF      [19]  597 	ld	l,-33 (ix)
   0339 DD 66 E0      [19]  598 	ld	h,-32 (ix)
   033C AF            [ 4]  599 	xor	a, a
   033D 77            [ 7]  600 	ld	(hl), a
   033E 23            [ 6]  601 	inc	hl
   033F 77            [ 7]  602 	ld	(hl), a
   0340 DD 7E E5      [19]  603 	ld	a,-27 (ix)
   0343 C6 0A         [ 7]  604 	add	a, #0x0A
   0345 DD 77 DD      [19]  605 	ld	-35 (ix),a
   0348 DD 7E E6      [19]  606 	ld	a,-26 (ix)
   034B CE 00         [ 7]  607 	adc	a, #0x00
   034D DD 77 DE      [19]  608 	ld	-34 (ix),a
   0350 DD 6E DD      [19]  609 	ld	l,-35 (ix)
   0353 DD 66 DE      [19]  610 	ld	h,-34 (ix)
   0356 AF            [ 4]  611 	xor	a, a
   0357 77            [ 7]  612 	ld	(hl), a
   0358 23            [ 6]  613 	inc	hl
   0359 77            [ 7]  614 	ld	(hl), a
   035A DD 7E E5      [19]  615 	ld	a,-27 (ix)
   035D C6 0C         [ 7]  616 	add	a, #0x0C
   035F DD 77 DB      [19]  617 	ld	-37 (ix),a
   0362 DD 7E E6      [19]  618 	ld	a,-26 (ix)
   0365 CE 00         [ 7]  619 	adc	a, #0x00
   0367 DD 77 DC      [19]  620 	ld	-36 (ix),a
   036A DD 6E DB      [19]  621 	ld	l,-37 (ix)
   036D DD 66 DC      [19]  622 	ld	h,-36 (ix)
   0370 36 06         [10]  623 	ld	(hl),#0x06
   0372 23            [ 6]  624 	inc	hl
   0373 36 00         [10]  625 	ld	(hl),#0x00
   0375 DD 7E E5      [19]  626 	ld	a,-27 (ix)
   0378 C6 0E         [ 7]  627 	add	a, #0x0E
   037A DD 77 D9      [19]  628 	ld	-39 (ix),a
   037D DD 7E E6      [19]  629 	ld	a,-26 (ix)
   0380 CE 00         [ 7]  630 	adc	a, #0x00
   0382 DD 77 DA      [19]  631 	ld	-38 (ix),a
   0385 DD 6E D9      [19]  632 	ld	l,-39 (ix)
   0388 DD 66 DA      [19]  633 	ld	h,-38 (ix)
   038B 36 03         [10]  634 	ld	(hl),#0x03
   038D 23            [ 6]  635 	inc	hl
   038E 36 00         [10]  636 	ld	(hl),#0x00
                            637 ;src/main.c:166: TEnemy  e = { 55,100,55,100,0,0 };
   0390 21 1A 00      [10]  638 	ld	hl,#0x001A
   0393 39            [11]  639 	add	hl,sp
   0394 36 37         [10]  640 	ld	(hl),#0x37
   0396 21 1A 00      [10]  641 	ld	hl,#0x001A
   0399 39            [11]  642 	add	hl,sp
   039A DD 75 D7      [19]  643 	ld	-41 (ix),l
   039D DD 74 D8      [19]  644 	ld	-40 (ix),h
   03A0 DD 7E D7      [19]  645 	ld	a,-41 (ix)
   03A3 C6 01         [ 7]  646 	add	a, #0x01
   03A5 DD 77 D5      [19]  647 	ld	-43 (ix),a
   03A8 DD 7E D8      [19]  648 	ld	a,-40 (ix)
   03AB CE 00         [ 7]  649 	adc	a, #0x00
   03AD DD 77 D6      [19]  650 	ld	-42 (ix),a
   03B0 DD 6E D5      [19]  651 	ld	l,-43 (ix)
   03B3 DD 66 D6      [19]  652 	ld	h,-42 (ix)
   03B6 36 64         [10]  653 	ld	(hl),#0x64
   03B8 DD 6E D7      [19]  654 	ld	l,-41 (ix)
   03BB DD 66 D8      [19]  655 	ld	h,-40 (ix)
   03BE 23            [ 6]  656 	inc	hl
   03BF 23            [ 6]  657 	inc	hl
   03C0 36 37         [10]  658 	ld	(hl),#0x37
   03C2 DD 6E D7      [19]  659 	ld	l,-41 (ix)
   03C5 DD 66 D8      [19]  660 	ld	h,-40 (ix)
   03C8 23            [ 6]  661 	inc	hl
   03C9 23            [ 6]  662 	inc	hl
   03CA 23            [ 6]  663 	inc	hl
   03CB 36 64         [10]  664 	ld	(hl),#0x64
   03CD DD 7E D7      [19]  665 	ld	a,-41 (ix)
   03D0 C6 04         [ 7]  666 	add	a, #0x04
   03D2 DD 77 D3      [19]  667 	ld	-45 (ix),a
   03D5 DD 7E D8      [19]  668 	ld	a,-40 (ix)
   03D8 CE 00         [ 7]  669 	adc	a, #0x00
   03DA DD 77 D4      [19]  670 	ld	-44 (ix),a
   03DD DD 6E D3      [19]  671 	ld	l,-45 (ix)
   03E0 DD 66 D4      [19]  672 	ld	h,-44 (ix)
   03E3 AF            [ 4]  673 	xor	a, a
   03E4 77            [ 7]  674 	ld	(hl), a
   03E5 23            [ 6]  675 	inc	hl
   03E6 77            [ 7]  676 	ld	(hl), a
   03E7 DD 7E D7      [19]  677 	ld	a,-41 (ix)
   03EA C6 06         [ 7]  678 	add	a, #0x06
   03EC 6F            [ 4]  679 	ld	l,a
   03ED DD 7E D8      [19]  680 	ld	a,-40 (ix)
   03F0 CE 00         [ 7]  681 	adc	a, #0x00
   03F2 67            [ 4]  682 	ld	h,a
   03F3 AF            [ 4]  683 	xor	a, a
   03F4 77            [ 7]  684 	ld	(hl), a
   03F5 23            [ 6]  685 	inc	hl
   03F6 77            [ 7]  686 	ld	(hl), a
                            687 ;src/main.c:167: TEnemy pr = { 0,0,0,0,1,0 };
   03F7 21 02 00      [10]  688 	ld	hl,#0x0002
   03FA 39            [11]  689 	add	hl,sp
   03FB 36 00         [10]  690 	ld	(hl),#0x00
   03FD 21 02 00      [10]  691 	ld	hl,#0x0002
   0400 39            [11]  692 	add	hl,sp
   0401 DD 75 F8      [19]  693 	ld	-8 (ix),l
   0404 DD 74 F9      [19]  694 	ld	-7 (ix),h
   0407 DD 7E F8      [19]  695 	ld	a,-8 (ix)
   040A C6 01         [ 7]  696 	add	a, #0x01
   040C DD 77 F6      [19]  697 	ld	-10 (ix),a
   040F DD 7E F9      [19]  698 	ld	a,-7 (ix)
   0412 CE 00         [ 7]  699 	adc	a, #0x00
   0414 DD 77 F7      [19]  700 	ld	-9 (ix),a
   0417 DD 6E F6      [19]  701 	ld	l,-10 (ix)
   041A DD 66 F7      [19]  702 	ld	h,-9 (ix)
   041D 36 00         [10]  703 	ld	(hl),#0x00
   041F DD 7E F8      [19]  704 	ld	a,-8 (ix)
   0422 C6 02         [ 7]  705 	add	a, #0x02
   0424 DD 77 F4      [19]  706 	ld	-12 (ix),a
   0427 DD 7E F9      [19]  707 	ld	a,-7 (ix)
   042A CE 00         [ 7]  708 	adc	a, #0x00
   042C DD 77 F5      [19]  709 	ld	-11 (ix),a
   042F DD 6E F4      [19]  710 	ld	l,-12 (ix)
   0432 DD 66 F5      [19]  711 	ld	h,-11 (ix)
   0435 36 00         [10]  712 	ld	(hl),#0x00
   0437 DD 7E F8      [19]  713 	ld	a,-8 (ix)
   043A C6 03         [ 7]  714 	add	a, #0x03
   043C DD 77 F2      [19]  715 	ld	-14 (ix),a
   043F DD 7E F9      [19]  716 	ld	a,-7 (ix)
   0442 CE 00         [ 7]  717 	adc	a, #0x00
   0444 DD 77 F3      [19]  718 	ld	-13 (ix),a
   0447 DD 6E F2      [19]  719 	ld	l,-14 (ix)
   044A DD 66 F3      [19]  720 	ld	h,-13 (ix)
   044D 36 00         [10]  721 	ld	(hl),#0x00
   044F DD 7E F8      [19]  722 	ld	a,-8 (ix)
   0452 C6 04         [ 7]  723 	add	a, #0x04
   0454 DD 77 F0      [19]  724 	ld	-16 (ix),a
   0457 DD 7E F9      [19]  725 	ld	a,-7 (ix)
   045A CE 00         [ 7]  726 	adc	a, #0x00
   045C DD 77 F1      [19]  727 	ld	-15 (ix),a
   045F DD 6E F0      [19]  728 	ld	l,-16 (ix)
   0462 DD 66 F1      [19]  729 	ld	h,-15 (ix)
   0465 36 01         [10]  730 	ld	(hl),#0x01
   0467 23            [ 6]  731 	inc	hl
   0468 36 00         [10]  732 	ld	(hl),#0x00
   046A DD 7E F8      [19]  733 	ld	a,-8 (ix)
   046D C6 06         [ 7]  734 	add	a, #0x06
   046F DD 77 EE      [19]  735 	ld	-18 (ix),a
   0472 DD 7E F9      [19]  736 	ld	a,-7 (ix)
   0475 CE 00         [ 7]  737 	adc	a, #0x00
   0477 DD 77 EF      [19]  738 	ld	-17 (ix),a
   047A DD 6E EE      [19]  739 	ld	l,-18 (ix)
   047D DD 66 EF      [19]  740 	ld	h,-17 (ix)
   0480 36 00         [10]  741 	ld	(hl),#0x00
   0482 23            [ 6]  742 	inc	hl
   0483 36 00         [10]  743 	ld	(hl),#0x00
                            744 ;src/main.c:169: u8* sprite = gladis_quieto_dcha;
   0485 DD 36 B1r00   [19]  745 	ld	-79 (ix),#<(_gladis_quieto_dcha)
   0489 DD 36 B2s00   [19]  746 	ld	-78 (ix),#>(_gladis_quieto_dcha)
                            747 ;src/main.c:172: cpct_clearScreen(0);
   048D 21 00 40      [10]  748 	ld	hl,#0x4000
   0490 E5            [11]  749 	push	hl
   0491 AF            [ 4]  750 	xor	a, a
   0492 F5            [11]  751 	push	af
   0493 33            [ 6]  752 	inc	sp
   0494 26 C0         [ 7]  753 	ld	h, #0xC0
   0496 E5            [11]  754 	push	hl
   0497 CDr00r00      [17]  755 	call	_cpct_memset
                            756 ;src/main.c:174: while (1){
   049A                     757 00198$:
                            758 ;src/main.c:177: cpct_waitVSYNC();
   049A CDr00r00      [17]  759 	call	_cpct_waitVSYNC
                            760 ;src/main.c:180: memptr = cpct_getScreenPtr(VMEM,p.prevX,p.prevY);
   049D DD 6E FE      [19]  761 	ld	l,-2 (ix)
   04A0 DD 66 FF      [19]  762 	ld	h,-1 (ix)
   04A3 46            [ 7]  763 	ld	b,(hl)
   04A4 DD 6E FC      [19]  764 	ld	l,-4 (ix)
   04A7 DD 66 FD      [19]  765 	ld	h,-3 (ix)
   04AA 4E            [ 7]  766 	ld	c, (hl)
   04AB C5            [11]  767 	push	bc
   04AC 21 00 C0      [10]  768 	ld	hl,#0xC000
   04AF E5            [11]  769 	push	hl
   04B0 CDr00r00      [17]  770 	call	_cpct_getScreenPtr
   04B3 EB            [ 4]  771 	ex	de,hl
                            772 ;src/main.c:181: if(p.prevAtk <= 20)
   04B4 DD 6E E1      [19]  773 	ld	l,-31 (ix)
   04B7 DD 66 E2      [19]  774 	ld	h,-30 (ix)
   04BA 46            [ 7]  775 	ld	b,(hl)
   04BB 23            [ 6]  776 	inc	hl
   04BC 66            [ 7]  777 	ld	h,(hl)
                            778 ;src/main.c:182: cpct_drawSolidBox(memptr,0,4,16);
                            779 ;src/main.c:181: if(p.prevAtk <= 20)
   04BD 3E 14         [ 7]  780 	ld	a,#0x14
   04BF B8            [ 4]  781 	cp	a, b
   04C0 3E 00         [ 7]  782 	ld	a,#0x00
   04C2 9C            [ 4]  783 	sbc	a, h
   04C3 38 10         [12]  784 	jr	C,00102$
                            785 ;src/main.c:182: cpct_drawSolidBox(memptr,0,4,16);
   04C5 21 04 10      [10]  786 	ld	hl,#0x1004
   04C8 E5            [11]  787 	push	hl
   04C9 AF            [ 4]  788 	xor	a, a
   04CA F5            [11]  789 	push	af
   04CB 33            [ 6]  790 	inc	sp
   04CC D5            [11]  791 	push	de
   04CD CDr00r00      [17]  792 	call	_cpct_drawSolidBox
   04D0 F1            [10]  793 	pop	af
   04D1 F1            [10]  794 	pop	af
   04D2 33            [ 6]  795 	inc	sp
   04D3 18 0E         [12]  796 	jr	00103$
   04D5                     797 00102$:
                            798 ;src/main.c:184: cpct_drawSolidBox(memptr,0,5,16);
   04D5 21 05 10      [10]  799 	ld	hl,#0x1005
   04D8 E5            [11]  800 	push	hl
   04D9 AF            [ 4]  801 	xor	a, a
   04DA F5            [11]  802 	push	af
   04DB 33            [ 6]  803 	inc	sp
   04DC D5            [11]  804 	push	de
   04DD CDr00r00      [17]  805 	call	_cpct_drawSolidBox
   04E0 F1            [10]  806 	pop	af
   04E1 F1            [10]  807 	pop	af
   04E2 33            [ 6]  808 	inc	sp
   04E3                     809 00103$:
                            810 ;src/main.c:186: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   04E3 DD 6E FA      [19]  811 	ld	l,-6 (ix)
   04E6 DD 66 FB      [19]  812 	ld	h,-5 (ix)
   04E9 46            [ 7]  813 	ld	b,(hl)
   04EA DD 6E E5      [19]  814 	ld	l,-27 (ix)
   04ED DD 66 E6      [19]  815 	ld	h,-26 (ix)
   04F0 4E            [ 7]  816 	ld	c, (hl)
   04F1 C5            [11]  817 	push	bc
   04F2 21 00 C0      [10]  818 	ld	hl,#0xC000
   04F5 E5            [11]  819 	push	hl
   04F6 CDr00r00      [17]  820 	call	_cpct_getScreenPtr
   04F9 4D            [ 4]  821 	ld	c, l
   04FA 44            [ 4]  822 	ld	b, h
                            823 ;src/main.c:188: if(p.atk >= 21)
   04FB DD 6E E3      [19]  824 	ld	l,-29 (ix)
   04FE DD 66 E4      [19]  825 	ld	h,-28 (ix)
   0501 7E            [ 7]  826 	ld	a, (hl)
   0502 23            [ 6]  827 	inc	hl
   0503 6E            [ 7]  828 	ld	l,(hl)
   0504 67            [ 4]  829 	ld	h,a
                            830 ;src/main.c:182: cpct_drawSolidBox(memptr,0,4,16);
                            831 ;src/main.c:189: cpct_drawSpriteMasked(sprite, memptr, 5, 16);
   0505 D1            [10]  832 	pop	de
   0506 D5            [11]  833 	push	de
                            834 ;src/main.c:188: if(p.atk >= 21)
   0507 7C            [ 4]  835 	ld	a,h
   0508 D6 15         [ 7]  836 	sub	a, #0x15
   050A 7D            [ 4]  837 	ld	a,l
   050B DE 00         [ 7]  838 	sbc	a, #0x00
   050D 38 0B         [12]  839 	jr	C,00105$
                            840 ;src/main.c:189: cpct_drawSpriteMasked(sprite, memptr, 5, 16);
   050F 21 05 10      [10]  841 	ld	hl,#0x1005
   0512 E5            [11]  842 	push	hl
   0513 C5            [11]  843 	push	bc
   0514 D5            [11]  844 	push	de
   0515 CDr00r00      [17]  845 	call	_cpct_drawSpriteMasked
   0518 18 09         [12]  846 	jr	00106$
   051A                     847 00105$:
                            848 ;src/main.c:191: cpct_drawSpriteMasked(sprite, memptr, 4, 16);
   051A 21 04 10      [10]  849 	ld	hl,#0x1004
   051D E5            [11]  850 	push	hl
   051E C5            [11]  851 	push	bc
   051F D5            [11]  852 	push	de
   0520 CDr00r00      [17]  853 	call	_cpct_drawSpriteMasked
   0523                     854 00106$:
                            855 ;src/main.c:194: memptr = cpct_getScreenPtr(VMEM,60,160);
   0523 21 3C A0      [10]  856 	ld	hl,#0xA03C
   0526 E5            [11]  857 	push	hl
   0527 21 00 C0      [10]  858 	ld	hl,#0xC000
   052A E5            [11]  859 	push	hl
   052B CDr00r00      [17]  860 	call	_cpct_getScreenPtr
   052E 4D            [ 4]  861 	ld	c, l
   052F 44            [ 4]  862 	ld	b, h
                            863 ;src/main.c:195: cpct_drawSolidBox(memptr,0,10,16);
   0530 59            [ 4]  864 	ld	e, c
   0531 50            [ 4]  865 	ld	d, b
   0532 C5            [11]  866 	push	bc
   0533 21 0A 10      [10]  867 	ld	hl,#0x100A
   0536 E5            [11]  868 	push	hl
   0537 AF            [ 4]  869 	xor	a, a
   0538 F5            [11]  870 	push	af
   0539 33            [ 6]  871 	inc	sp
   053A D5            [11]  872 	push	de
   053B CDr00r00      [17]  873 	call	_cpct_drawSolidBox
   053E F1            [10]  874 	pop	af
   053F F1            [10]  875 	pop	af
   0540 33            [ 6]  876 	inc	sp
   0541 C1            [10]  877 	pop	bc
                            878 ;src/main.c:197: drawVida(p.life, memptr);
   0542 DD 6E D9      [19]  879 	ld	l,-39 (ix)
   0545 DD 66 DA      [19]  880 	ld	h,-38 (ix)
   0548 5E            [ 7]  881 	ld	e,(hl)
   0549 23            [ 6]  882 	inc	hl
   054A 56            [ 7]  883 	ld	d,(hl)
   054B C5            [11]  884 	push	bc
   054C D5            [11]  885 	push	de
   054D CDrE4r01      [17]  886 	call	_drawVida
   0550 F1            [10]  887 	pop	af
   0551 F1            [10]  888 	pop	af
                            889 ;src/main.c:200: memptr = cpct_getScreenPtr(VMEM,e.x,e.y);
   0552 DD 6E D5      [19]  890 	ld	l,-43 (ix)
   0555 DD 66 D6      [19]  891 	ld	h,-42 (ix)
   0558 46            [ 7]  892 	ld	b,(hl)
   0559 DD 6E D7      [19]  893 	ld	l,-41 (ix)
   055C DD 66 D8      [19]  894 	ld	h,-40 (ix)
   055F 4E            [ 7]  895 	ld	c, (hl)
   0560 C5            [11]  896 	push	bc
   0561 21 00 C0      [10]  897 	ld	hl,#0xC000
   0564 E5            [11]  898 	push	hl
   0565 CDr00r00      [17]  899 	call	_cpct_getScreenPtr
                            900 ;src/main.c:201: cpct_drawSolidBox(memptr,0,4,16);
   0568 EB            [ 4]  901 	ex	de,hl
   0569 21 04 10      [10]  902 	ld	hl,#0x1004
   056C E5            [11]  903 	push	hl
   056D AF            [ 4]  904 	xor	a, a
   056E F5            [11]  905 	push	af
   056F 33            [ 6]  906 	inc	sp
   0570 D5            [11]  907 	push	de
   0571 CDr00r00      [17]  908 	call	_cpct_drawSolidBox
   0574 F1            [10]  909 	pop	af
   0575 F1            [10]  910 	pop	af
   0576 33            [ 6]  911 	inc	sp
                            912 ;src/main.c:203: if(e.vivo == 0){
   0577 DD 6E D3      [19]  913 	ld	l,-45 (ix)
   057A DD 66 D4      [19]  914 	ld	h,-44 (ix)
   057D 4E            [ 7]  915 	ld	c,(hl)
   057E 23            [ 6]  916 	inc	hl
   057F 7E            [ 7]  917 	ld	a, (hl)
   0580 B1            [ 4]  918 	or	a,c
   0581 20 26         [12]  919 	jr	NZ,00108$
                            920 ;src/main.c:204: memptr = cpct_getScreenPtr(VMEM,e.x,e.y);
   0583 DD 6E D5      [19]  921 	ld	l,-43 (ix)
   0586 DD 66 D6      [19]  922 	ld	h,-42 (ix)
   0589 46            [ 7]  923 	ld	b,(hl)
   058A DD 6E D7      [19]  924 	ld	l,-41 (ix)
   058D DD 66 D8      [19]  925 	ld	h,-40 (ix)
   0590 4E            [ 7]  926 	ld	c, (hl)
   0591 C5            [11]  927 	push	bc
   0592 21 00 C0      [10]  928 	ld	hl,#0xC000
   0595 E5            [11]  929 	push	hl
   0596 CDr00r00      [17]  930 	call	_cpct_getScreenPtr
                            931 ;src/main.c:205: cpct_drawSolidBox(memptr, 18, 4, 16);
   0599 EB            [ 4]  932 	ex	de,hl
   059A 21 04 10      [10]  933 	ld	hl,#0x1004
   059D E5            [11]  934 	push	hl
   059E 3E 12         [ 7]  935 	ld	a,#0x12
   05A0 F5            [11]  936 	push	af
   05A1 33            [ 6]  937 	inc	sp
   05A2 D5            [11]  938 	push	de
   05A3 CDr00r00      [17]  939 	call	_cpct_drawSolidBox
   05A6 F1            [10]  940 	pop	af
   05A7 F1            [10]  941 	pop	af
   05A8 33            [ 6]  942 	inc	sp
   05A9                     943 00108$:
                            944 ;src/main.c:209: memptr = cpct_getScreenPtr(VMEM,pr.prevX,pr.prevY);
   05A9 DD 6E F2      [19]  945 	ld	l,-14 (ix)
   05AC DD 66 F3      [19]  946 	ld	h,-13 (ix)
   05AF 46            [ 7]  947 	ld	b,(hl)
   05B0 DD 6E F4      [19]  948 	ld	l,-12 (ix)
   05B3 DD 66 F5      [19]  949 	ld	h,-11 (ix)
   05B6 4E            [ 7]  950 	ld	c, (hl)
   05B7 C5            [11]  951 	push	bc
   05B8 21 00 C0      [10]  952 	ld	hl,#0xC000
   05BB E5            [11]  953 	push	hl
   05BC CDr00r00      [17]  954 	call	_cpct_getScreenPtr
   05BF DD 75 EC      [19]  955 	ld	-20 (ix),l
   05C2 DD 74 ED      [19]  956 	ld	-19 (ix),h
                            957 ;src/main.c:210: if((int)pr.dir < 2)
   05C5 DD 6E EE      [19]  958 	ld	l,-18 (ix)
   05C8 DD 66 EF      [19]  959 	ld	h,-17 (ix)
   05CB 4E            [ 7]  960 	ld	c,(hl)
   05CC 23            [ 6]  961 	inc	hl
   05CD 46            [ 7]  962 	ld	b,(hl)
                            963 ;src/main.c:182: cpct_drawSolidBox(memptr,0,4,16);
   05CE DD 5E EC      [19]  964 	ld	e,-20 (ix)
   05D1 DD 56 ED      [19]  965 	ld	d,-19 (ix)
                            966 ;src/main.c:210: if((int)pr.dir < 2)
   05D4 79            [ 4]  967 	ld	a,c
   05D5 D6 02         [ 7]  968 	sub	a, #0x02
   05D7 78            [ 4]  969 	ld	a,b
   05D8 17            [ 4]  970 	rla
   05D9 3F            [ 4]  971 	ccf
   05DA 1F            [ 4]  972 	rra
   05DB DE 80         [ 7]  973 	sbc	a, #0x80
   05DD 30 10         [12]  974 	jr	NC,00110$
                            975 ;src/main.c:211: cpct_drawSolidBox(memptr, 0, 4, 4);
   05DF 21 04 04      [10]  976 	ld	hl,#0x0404
   05E2 E5            [11]  977 	push	hl
   05E3 AF            [ 4]  978 	xor	a, a
   05E4 F5            [11]  979 	push	af
   05E5 33            [ 6]  980 	inc	sp
   05E6 D5            [11]  981 	push	de
   05E7 CDr00r00      [17]  982 	call	_cpct_drawSolidBox
   05EA F1            [10]  983 	pop	af
   05EB F1            [10]  984 	pop	af
   05EC 33            [ 6]  985 	inc	sp
   05ED 18 0E         [12]  986 	jr	00111$
   05EF                     987 00110$:
                            988 ;src/main.c:213: cpct_drawSolidBox(memptr, 0, 2, 8);
   05EF 21 02 08      [10]  989 	ld	hl,#0x0802
   05F2 E5            [11]  990 	push	hl
   05F3 AF            [ 4]  991 	xor	a, a
   05F4 F5            [11]  992 	push	af
   05F5 33            [ 6]  993 	inc	sp
   05F6 D5            [11]  994 	push	de
   05F7 CDr00r00      [17]  995 	call	_cpct_drawSolidBox
   05FA F1            [10]  996 	pop	af
   05FB F1            [10]  997 	pop	af
   05FC 33            [ 6]  998 	inc	sp
   05FD                     999 00111$:
                           1000 ;src/main.c:215: if(pr.vivo == 0){
   05FD DD 6E F0      [19] 1001 	ld	l,-16 (ix)
   0600 DD 66 F1      [19] 1002 	ld	h,-15 (ix)
   0603 4E            [ 7] 1003 	ld	c,(hl)
   0604 23            [ 6] 1004 	inc	hl
   0605 7E            [ 7] 1005 	ld	a, (hl)
   0606 B1            [ 4] 1006 	or	a,c
   0607 20 5C         [12] 1007 	jr	NZ,00116$
                           1008 ;src/main.c:216: memptr = cpct_getScreenPtr(VMEM,pr.x,pr.y);
   0609 DD 6E F6      [19] 1009 	ld	l,-10 (ix)
   060C DD 66 F7      [19] 1010 	ld	h,-9 (ix)
   060F 46            [ 7] 1011 	ld	b,(hl)
   0610 DD 6E F8      [19] 1012 	ld	l,-8 (ix)
   0613 DD 66 F9      [19] 1013 	ld	h,-7 (ix)
   0616 4E            [ 7] 1014 	ld	c, (hl)
   0617 C5            [11] 1015 	push	bc
   0618 21 00 C0      [10] 1016 	ld	hl,#0xC000
   061B E5            [11] 1017 	push	hl
   061C CDr00r00      [17] 1018 	call	_cpct_getScreenPtr
   061F DD 75 EC      [19] 1019 	ld	-20 (ix),l
   0622 DD 74 ED      [19] 1020 	ld	-19 (ix),h
                           1021 ;src/main.c:210: if((int)pr.dir < 2)
   0625 DD 6E EE      [19] 1022 	ld	l,-18 (ix)
   0628 DD 66 EF      [19] 1023 	ld	h,-17 (ix)
   062B 5E            [ 7] 1024 	ld	e,(hl)
   062C 23            [ 6] 1025 	inc	hl
   062D 56            [ 7] 1026 	ld	d,(hl)
                           1027 ;src/main.c:217: if((int)pr.dir < 2)
   062E 63            [ 4] 1028 	ld	h,e
   062F 6A            [ 4] 1029 	ld	l,d
                           1030 ;src/main.c:182: cpct_drawSolidBox(memptr,0,4,16);
   0630 DD 4E EC      [19] 1031 	ld	c,-20 (ix)
   0633 DD 46 ED      [19] 1032 	ld	b,-19 (ix)
                           1033 ;src/main.c:217: if((int)pr.dir < 2)
   0636 7C            [ 4] 1034 	ld	a,h
   0637 D6 02         [ 7] 1035 	sub	a, #0x02
   0639 7D            [ 4] 1036 	ld	a,l
   063A 17            [ 4] 1037 	rla
   063B 3F            [ 4] 1038 	ccf
   063C 1F            [ 4] 1039 	rra
   063D DE 80         [ 7] 1040 	sbc	a, #0x80
   063F 30 13         [12] 1041 	jr	NC,00113$
                           1042 ;src/main.c:218: cpct_drawSpriteMasked(checkSpriteFlecha(pr.dir), memptr, 4, 4);
   0641 C5            [11] 1043 	push	bc
   0642 D5            [11] 1044 	push	de
   0643 CDrF4r00      [17] 1045 	call	_checkSpriteFlecha
   0646 F1            [10] 1046 	pop	af
   0647 C1            [10] 1047 	pop	bc
   0648 EB            [ 4] 1048 	ex	de,hl
   0649 21 04 04      [10] 1049 	ld	hl,#0x0404
   064C E5            [11] 1050 	push	hl
   064D C5            [11] 1051 	push	bc
   064E D5            [11] 1052 	push	de
   064F CDr00r00      [17] 1053 	call	_cpct_drawSpriteMasked
   0652 18 11         [12] 1054 	jr	00116$
   0654                    1055 00113$:
                           1056 ;src/main.c:220: cpct_drawSpriteMasked(checkSpriteFlecha(pr.dir), memptr, 2, 8);
   0654 C5            [11] 1057 	push	bc
   0655 D5            [11] 1058 	push	de
   0656 CDrF4r00      [17] 1059 	call	_checkSpriteFlecha
   0659 F1            [10] 1060 	pop	af
   065A C1            [10] 1061 	pop	bc
   065B EB            [ 4] 1062 	ex	de,hl
   065C 21 02 08      [10] 1063 	ld	hl,#0x0802
   065F E5            [11] 1064 	push	hl
   0660 C5            [11] 1065 	push	bc
   0661 D5            [11] 1066 	push	de
   0662 CDr00r00      [17] 1067 	call	_cpct_drawSpriteMasked
   0665                    1068 00116$:
                           1069 ;src/main.c:188: if(p.atk >= 21)
   0665 DD 6E E3      [19] 1070 	ld	l,-29 (ix)
   0668 DD 66 E4      [19] 1071 	ld	h,-28 (ix)
   066B 5E            [ 7] 1072 	ld	e,(hl)
   066C 23            [ 6] 1073 	inc	hl
   066D 56            [ 7] 1074 	ld	d,(hl)
                           1075 ;src/main.c:224: if(p.atk < 20)
   066E 7B            [ 4] 1076 	ld	a,e
   066F D6 14         [ 7] 1077 	sub	a, #0x14
   0671 7A            [ 4] 1078 	ld	a,d
   0672 DE 00         [ 7] 1079 	sbc	a, #0x00
   0674 30 14         [12] 1080 	jr	NC,00121$
                           1081 ;src/main.c:225: drawFatiga(p.atk,memptr,2);
   0676 3E 02         [ 7] 1082 	ld	a,#0x02
   0678 F5            [11] 1083 	push	af
   0679 33            [ 6] 1084 	inc	sp
   067A DD 6E EC      [19] 1085 	ld	l,-20 (ix)
   067D DD 66 ED      [19] 1086 	ld	h,-19 (ix)
   0680 E5            [11] 1087 	push	hl
   0681 D5            [11] 1088 	push	de
   0682 CDr27r01      [17] 1089 	call	_drawFatiga
   0685 F1            [10] 1090 	pop	af
   0686 F1            [10] 1091 	pop	af
   0687 33            [ 6] 1092 	inc	sp
   0688 18 2D         [12] 1093 	jr	00122$
   068A                    1094 00121$:
                           1095 ;src/main.c:226: else if(p.atk > 20)
   068A 3E 14         [ 7] 1096 	ld	a,#0x14
   068C BB            [ 4] 1097 	cp	a, e
   068D 3E 00         [ 7] 1098 	ld	a,#0x00
   068F 9A            [ 4] 1099 	sbc	a, d
   0690 30 14         [12] 1100 	jr	NC,00118$
                           1101 ;src/main.c:227: drawFatiga(p.atk,memptr,16);
   0692 3E 10         [ 7] 1102 	ld	a,#0x10
   0694 F5            [11] 1103 	push	af
   0695 33            [ 6] 1104 	inc	sp
   0696 DD 6E EC      [19] 1105 	ld	l,-20 (ix)
   0699 DD 66 ED      [19] 1106 	ld	h,-19 (ix)
   069C E5            [11] 1107 	push	hl
   069D D5            [11] 1108 	push	de
   069E CDr27r01      [17] 1109 	call	_drawFatiga
   06A1 F1            [10] 1110 	pop	af
   06A2 F1            [10] 1111 	pop	af
   06A3 33            [ 6] 1112 	inc	sp
   06A4 18 11         [12] 1113 	jr	00122$
   06A6                    1114 00118$:
                           1115 ;src/main.c:229: drawFatiga(p.atk,memptr,0);
   06A6 AF            [ 4] 1116 	xor	a, a
   06A7 F5            [11] 1117 	push	af
   06A8 33            [ 6] 1118 	inc	sp
   06A9 DD 6E EC      [19] 1119 	ld	l,-20 (ix)
   06AC DD 66 ED      [19] 1120 	ld	h,-19 (ix)
   06AF E5            [11] 1121 	push	hl
   06B0 D5            [11] 1122 	push	de
   06B1 CDr27r01      [17] 1123 	call	_drawFatiga
   06B4 F1            [10] 1124 	pop	af
   06B5 F1            [10] 1125 	pop	af
   06B6 33            [ 6] 1126 	inc	sp
   06B7                    1127 00122$:
                           1128 ;src/main.c:231: p.prevX = p.x;
   06B7 DD 6E E5      [19] 1129 	ld	l,-27 (ix)
   06BA DD 66 E6      [19] 1130 	ld	h,-26 (ix)
   06BD 7E            [ 7] 1131 	ld	a,(hl)
   06BE DD 6E FC      [19] 1132 	ld	l,-4 (ix)
   06C1 DD 66 FD      [19] 1133 	ld	h,-3 (ix)
   06C4 77            [ 7] 1134 	ld	(hl),a
                           1135 ;src/main.c:232: p.prevY = p.y;
   06C5 DD 6E FA      [19] 1136 	ld	l,-6 (ix)
   06C8 DD 66 FB      [19] 1137 	ld	h,-5 (ix)
   06CB 7E            [ 7] 1138 	ld	a,(hl)
   06CC DD 6E FE      [19] 1139 	ld	l,-2 (ix)
   06CF DD 66 FF      [19] 1140 	ld	h,-1 (ix)
   06D2 77            [ 7] 1141 	ld	(hl),a
                           1142 ;src/main.c:233: p.prevAtk = p.atk;
   06D3 DD 6E E3      [19] 1143 	ld	l,-29 (ix)
   06D6 DD 66 E4      [19] 1144 	ld	h,-28 (ix)
   06D9 56            [ 7] 1145 	ld	d,(hl)
   06DA 23            [ 6] 1146 	inc	hl
   06DB 5E            [ 7] 1147 	ld	e,(hl)
   06DC DD 6E E1      [19] 1148 	ld	l,-31 (ix)
   06DF DD 66 E2      [19] 1149 	ld	h,-30 (ix)
   06E2 72            [ 7] 1150 	ld	(hl),d
   06E3 23            [ 6] 1151 	inc	hl
   06E4 73            [ 7] 1152 	ld	(hl),e
                           1153 ;src/main.c:235: if(p.col != 2){
   06E5 DD 6E DD      [19] 1154 	ld	l,-35 (ix)
   06E8 DD 66 DE      [19] 1155 	ld	h,-34 (ix)
   06EB 56            [ 7] 1156 	ld	d,(hl)
   06EC 23            [ 6] 1157 	inc	hl
   06ED 66            [ 7] 1158 	ld	h,(hl)
   06EE 7A            [ 4] 1159 	ld	a,d
   06EF D6 02         [ 7] 1160 	sub	a,#0x02
   06F1 20 04         [12] 1161 	jr	NZ,00370$
   06F3 B4            [ 4] 1162 	or	a,h
   06F4 CArECr08      [10] 1163 	jp	Z,00167$
   06F7                    1164 00370$:
                           1165 ;src/main.c:236: cpct_scanKeyboard_f();
   06F7 CDr00r00      [17] 1166 	call	_cpct_scanKeyboard_f
                           1167 ;src/main.c:237: if(cpct_isKeyPressed(Key_Space) && p.atk >= 20){
   06FA 21 05 80      [10] 1168 	ld	hl,#0x8005
   06FD CDr00r00      [17] 1169 	call	_cpct_isKeyPressed
   0700 DD 75 EC      [19] 1170 	ld	-20 (ix),l
                           1171 ;src/main.c:188: if(p.atk >= 21)
   0703 DD 6E E3      [19] 1172 	ld	l,-29 (ix)
   0706 DD 66 E4      [19] 1173 	ld	h,-28 (ix)
   0709 7E            [ 7] 1174 	ld	a,(hl)
   070A DD 77 EA      [19] 1175 	ld	-22 (ix),a
   070D 23            [ 6] 1176 	inc	hl
   070E 7E            [ 7] 1177 	ld	a,(hl)
   070F DD 77 EB      [19] 1178 	ld	-21 (ix),a
                           1179 ;src/main.c:224: if(p.atk < 20)
   0712 DD 7E EA      [19] 1180 	ld	a,-22 (ix)
   0715 D6 14         [ 7] 1181 	sub	a, #0x14
   0717 DD 7E EB      [19] 1182 	ld	a,-21 (ix)
   071A DE 00         [ 7] 1183 	sbc	a, #0x00
   071C 3E 00         [ 7] 1184 	ld	a,#0x00
   071E 17            [ 4] 1185 	rla
   071F DD 77 E9      [19] 1186 	ld	-23 (ix),a
                           1187 ;src/main.c:241: p.atk += 1;
   0722 DD 7E EA      [19] 1188 	ld	a,-22 (ix)
   0725 C6 01         [ 7] 1189 	add	a, #0x01
   0727 DD 77 E7      [19] 1190 	ld	-25 (ix),a
   072A DD 7E EB      [19] 1191 	ld	a,-21 (ix)
   072D CE 00         [ 7] 1192 	adc	a, #0x00
   072F DD 77 E8      [19] 1193 	ld	-24 (ix),a
                           1194 ;src/main.c:237: if(cpct_isKeyPressed(Key_Space) && p.atk >= 20){
   0732 DD 7E EC      [19] 1195 	ld	a,-20 (ix)
   0735 B7            [ 4] 1196 	or	a, a
   0736 28 5D         [12] 1197 	jr	Z,00161$
   0738 DD 7E E9      [19] 1198 	ld	a,-23 (ix)
   073B B7            [ 4] 1199 	or	a, a
   073C 20 57         [12] 1200 	jr	NZ,00161$
                           1201 ;src/main.c:238: if(p.atk >= 50)
   073E DD 7E EA      [19] 1202 	ld	a,-22 (ix)
   0741 D6 32         [ 7] 1203 	sub	a, #0x32
   0743 DD 7E EB      [19] 1204 	ld	a,-21 (ix)
   0746 DE 00         [ 7] 1205 	sbc	a, #0x00
   0748 38 0C         [12] 1206 	jr	C,00124$
                           1207 ;src/main.c:239: p.atk = 0;
   074A DD 6E E3      [19] 1208 	ld	l,-29 (ix)
   074D DD 66 E4      [19] 1209 	ld	h,-28 (ix)
   0750 AF            [ 4] 1210 	xor	a, a
   0751 77            [ 7] 1211 	ld	(hl), a
   0752 23            [ 6] 1212 	inc	hl
   0753 77            [ 7] 1213 	ld	(hl), a
   0754 18 0F         [12] 1214 	jr	00125$
   0756                    1215 00124$:
                           1216 ;src/main.c:241: p.atk += 1;
   0756 DD 6E E3      [19] 1217 	ld	l,-29 (ix)
   0759 DD 66 E4      [19] 1218 	ld	h,-28 (ix)
   075C DD 7E E7      [19] 1219 	ld	a,-25 (ix)
   075F 77            [ 7] 1220 	ld	(hl),a
   0760 23            [ 6] 1221 	inc	hl
   0761 DD 7E E8      [19] 1222 	ld	a,-24 (ix)
   0764 77            [ 7] 1223 	ld	(hl),a
   0765                    1224 00125$:
                           1225 ;src/main.c:242: if(cpct_isKeyPressed(Key_CursorRight))
   0765 21 00 02      [10] 1226 	ld	hl,#0x0200
   0768 CDr00r00      [17] 1227 	call	_cpct_isKeyPressed
   076B 7D            [ 4] 1228 	ld	a,l
   076C B7            [ 4] 1229 	or	a, a
   076D 28 0D         [12] 1230 	jr	Z,00129$
                           1231 ;src/main.c:243: p.dir = 0;
   076F DD 6E DF      [19] 1232 	ld	l,-33 (ix)
   0772 DD 66 E0      [19] 1233 	ld	h,-32 (ix)
   0775 AF            [ 4] 1234 	xor	a, a
   0776 77            [ 7] 1235 	ld	(hl), a
   0777 23            [ 6] 1236 	inc	hl
   0778 77            [ 7] 1237 	ld	(hl), a
   0779 C3r29r09      [10] 1238 	jp	00168$
   077C                    1239 00129$:
                           1240 ;src/main.c:244: else if(cpct_isKeyPressed(Key_CursorLeft))
   077C 21 01 01      [10] 1241 	ld	hl,#0x0101
   077F CDr00r00      [17] 1242 	call	_cpct_isKeyPressed
   0782 7D            [ 4] 1243 	ld	a,l
   0783 B7            [ 4] 1244 	or	a, a
   0784 CAr29r09      [10] 1245 	jp	Z,00168$
                           1246 ;src/main.c:245: p.dir = 1;
   0787 DD 6E DF      [19] 1247 	ld	l,-33 (ix)
   078A DD 66 E0      [19] 1248 	ld	h,-32 (ix)
   078D 36 01         [10] 1249 	ld	(hl),#0x01
   078F 23            [ 6] 1250 	inc	hl
   0790 36 00         [10] 1251 	ld	(hl),#0x00
   0792 C3r29r09      [10] 1252 	jp	00168$
   0795                    1253 00161$:
                           1254 ;src/main.c:247: if(p.atk < 20)
   0795 DD 7E E9      [19] 1255 	ld	a,-23 (ix)
   0798 B7            [ 4] 1256 	or	a, a
   0799 28 11         [12] 1257 	jr	Z,00132$
                           1258 ;src/main.c:248: p.atk += 1;
   079B DD 6E E3      [19] 1259 	ld	l,-29 (ix)
   079E DD 66 E4      [19] 1260 	ld	h,-28 (ix)
   07A1 DD 7E E7      [19] 1261 	ld	a,-25 (ix)
   07A4 77            [ 7] 1262 	ld	(hl),a
   07A5 23            [ 6] 1263 	inc	hl
   07A6 DD 7E E8      [19] 1264 	ld	a,-24 (ix)
   07A9 77            [ 7] 1265 	ld	(hl),a
   07AA 18 0B         [12] 1266 	jr	00133$
   07AC                    1267 00132$:
                           1268 ;src/main.c:250: p.atk = 20;
   07AC DD 6E E3      [19] 1269 	ld	l,-29 (ix)
   07AF DD 66 E4      [19] 1270 	ld	h,-28 (ix)
   07B2 36 14         [10] 1271 	ld	(hl),#0x14
   07B4 23            [ 6] 1272 	inc	hl
   07B5 36 00         [10] 1273 	ld	(hl),#0x00
   07B7                    1274 00133$:
                           1275 ;src/main.c:251: if(cpct_isKeyPressed(Key_CursorRight) && p.x < 76 ){
   07B7 21 00 02      [10] 1276 	ld	hl,#0x0200
   07BA CDr00r00      [17] 1277 	call	_cpct_isKeyPressed
   07BD 7D            [ 4] 1278 	ld	a,l
   07BE B7            [ 4] 1279 	or	a, a
   07BF 28 32         [12] 1280 	jr	Z,00157$
   07C1 DD 6E E5      [19] 1281 	ld	l,-27 (ix)
   07C4 DD 66 E6      [19] 1282 	ld	h,-26 (ix)
   07C7 56            [ 7] 1283 	ld	d,(hl)
   07C8 7A            [ 4] 1284 	ld	a,d
   07C9 D6 4C         [ 7] 1285 	sub	a, #0x4C
   07CB 30 26         [12] 1286 	jr	NC,00157$
                           1287 ;src/main.c:252: if(p.col != 2)
   07CD DD 6E DD      [19] 1288 	ld	l,-35 (ix)
   07D0 DD 66 DE      [19] 1289 	ld	h,-34 (ix)
   07D3 5E            [ 7] 1290 	ld	e,(hl)
   07D4 23            [ 6] 1291 	inc	hl
   07D5 66            [ 7] 1292 	ld	h,(hl)
   07D6 7B            [ 4] 1293 	ld	a,e
   07D7 D6 02         [ 7] 1294 	sub	a,#0x02
   07D9 20 03         [12] 1295 	jr	NZ,00371$
   07DB B4            [ 4] 1296 	or	a,h
   07DC 28 08         [12] 1297 	jr	Z,00135$
   07DE                    1298 00371$:
                           1299 ;src/main.c:253: p.x += 1;
   07DE 14            [ 4] 1300 	inc	d
   07DF DD 6E E5      [19] 1301 	ld	l,-27 (ix)
   07E2 DD 66 E6      [19] 1302 	ld	h,-26 (ix)
   07E5 72            [ 7] 1303 	ld	(hl),d
   07E6                    1304 00135$:
                           1305 ;src/main.c:254: p.dir = 0;
   07E6 DD 6E DF      [19] 1306 	ld	l,-33 (ix)
   07E9 DD 66 E0      [19] 1307 	ld	h,-32 (ix)
   07EC AF            [ 4] 1308 	xor	a, a
   07ED 77            [ 7] 1309 	ld	(hl), a
   07EE 23            [ 6] 1310 	inc	hl
   07EF 77            [ 7] 1311 	ld	(hl), a
   07F0 C3r29r09      [10] 1312 	jp	00168$
   07F3                    1313 00157$:
                           1314 ;src/main.c:255: }else if(cpct_isKeyPressed(Key_CursorLeft) && p.x > 0 ){
   07F3 21 01 01      [10] 1315 	ld	hl,#0x0101
   07F6 CDr00r00      [17] 1316 	call	_cpct_isKeyPressed
   07F9 7D            [ 4] 1317 	ld	a,l
   07FA B7            [ 4] 1318 	or	a, a
   07FB 28 32         [12] 1319 	jr	Z,00153$
   07FD DD 6E E5      [19] 1320 	ld	l,-27 (ix)
   0800 DD 66 E6      [19] 1321 	ld	h,-26 (ix)
   0803 56            [ 7] 1322 	ld	d,(hl)
   0804 7A            [ 4] 1323 	ld	a,d
   0805 B7            [ 4] 1324 	or	a, a
   0806 28 27         [12] 1325 	jr	Z,00153$
                           1326 ;src/main.c:256: if(p.col != 2)
   0808 DD 6E DD      [19] 1327 	ld	l,-35 (ix)
   080B DD 66 DE      [19] 1328 	ld	h,-34 (ix)
   080E 5E            [ 7] 1329 	ld	e,(hl)
   080F 23            [ 6] 1330 	inc	hl
   0810 66            [ 7] 1331 	ld	h,(hl)
   0811 7B            [ 4] 1332 	ld	a,e
   0812 D6 02         [ 7] 1333 	sub	a,#0x02
   0814 20 03         [12] 1334 	jr	NZ,00372$
   0816 B4            [ 4] 1335 	or	a,h
   0817 28 08         [12] 1336 	jr	Z,00137$
   0819                    1337 00372$:
                           1338 ;src/main.c:257: p.x -= 1;
   0819 15            [ 4] 1339 	dec	d
   081A DD 6E E5      [19] 1340 	ld	l,-27 (ix)
   081D DD 66 E6      [19] 1341 	ld	h,-26 (ix)
   0820 72            [ 7] 1342 	ld	(hl),d
   0821                    1343 00137$:
                           1344 ;src/main.c:258: p.dir = 1;
   0821 DD 6E DF      [19] 1345 	ld	l,-33 (ix)
   0824 DD 66 E0      [19] 1346 	ld	h,-32 (ix)
   0827 36 01         [10] 1347 	ld	(hl),#0x01
   0829 23            [ 6] 1348 	inc	hl
   082A 36 00         [10] 1349 	ld	(hl),#0x00
   082C C3r29r09      [10] 1350 	jp	00168$
   082F                    1351 00153$:
                           1352 ;src/main.c:259: }else if(cpct_isKeyPressed(Key_CursorDown) && p.y < 184 ){
   082F 21 00 04      [10] 1353 	ld	hl,#0x0400
   0832 CDr00r00      [17] 1354 	call	_cpct_isKeyPressed
   0835 7D            [ 4] 1355 	ld	a,l
   0836 B7            [ 4] 1356 	or	a, a
   0837 28 23         [12] 1357 	jr	Z,00149$
                           1358 ;src/main.c:186: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   0839 DD 6E FA      [19] 1359 	ld	l,-6 (ix)
   083C DD 66 FB      [19] 1360 	ld	h,-5 (ix)
   083F 56            [ 7] 1361 	ld	d,(hl)
                           1362 ;src/main.c:259: }else if(cpct_isKeyPressed(Key_CursorDown) && p.y < 184 ){
   0840 7A            [ 4] 1363 	ld	a,d
   0841 D6 B8         [ 7] 1364 	sub	a, #0xB8
   0843 30 17         [12] 1365 	jr	NC,00149$
                           1366 ;src/main.c:260: p.y += 2;
   0845 14            [ 4] 1367 	inc	d
   0846 14            [ 4] 1368 	inc	d
   0847 DD 6E FA      [19] 1369 	ld	l,-6 (ix)
   084A DD 66 FB      [19] 1370 	ld	h,-5 (ix)
   084D 72            [ 7] 1371 	ld	(hl),d
                           1372 ;src/main.c:261: p.dir = 2;
   084E DD 6E DF      [19] 1373 	ld	l,-33 (ix)
   0851 DD 66 E0      [19] 1374 	ld	h,-32 (ix)
   0854 36 02         [10] 1375 	ld	(hl),#0x02
   0856 23            [ 6] 1376 	inc	hl
   0857 36 00         [10] 1377 	ld	(hl),#0x00
   0859 C3r29r09      [10] 1378 	jp	00168$
   085C                    1379 00149$:
                           1380 ;src/main.c:262: }else if(cpct_isKeyPressed(Key_CursorUp) && p.y > 0 ){
   085C 21 00 01      [10] 1381 	ld	hl,#0x0100
   085F CDr00r00      [17] 1382 	call	_cpct_isKeyPressed
   0862 7D            [ 4] 1383 	ld	a,l
   0863 B7            [ 4] 1384 	or	a, a
   0864 28 21         [12] 1385 	jr	Z,00145$
                           1386 ;src/main.c:186: memptr = cpct_getScreenPtr(VMEM,p.x,p.y);
   0866 DD 6E FA      [19] 1387 	ld	l,-6 (ix)
   0869 DD 66 FB      [19] 1388 	ld	h,-5 (ix)
   086C 7E            [ 7] 1389 	ld	a,(hl)
                           1390 ;src/main.c:262: }else if(cpct_isKeyPressed(Key_CursorUp) && p.y > 0 ){
   086D B7            [ 4] 1391 	or	a, a
   086E 28 17         [12] 1392 	jr	Z,00145$
                           1393 ;src/main.c:263: p.y -= 2;
   0870 C6 FE         [ 7] 1394 	add	a,#0xFE
   0872 DD 6E FA      [19] 1395 	ld	l,-6 (ix)
   0875 DD 66 FB      [19] 1396 	ld	h,-5 (ix)
   0878 77            [ 7] 1397 	ld	(hl),a
                           1398 ;src/main.c:264: p.dir = 3;
   0879 DD 6E DF      [19] 1399 	ld	l,-33 (ix)
   087C DD 66 E0      [19] 1400 	ld	h,-32 (ix)
   087F 36 03         [10] 1401 	ld	(hl),#0x03
   0881 23            [ 6] 1402 	inc	hl
   0882 36 00         [10] 1403 	ld	(hl),#0x00
   0884 C3r29r09      [10] 1404 	jp	00168$
   0887                    1405 00145$:
                           1406 ;src/main.c:265: }else if(cpct_isKeyPressed(Key_X) && pr.vivo == 1){
   0887 21 07 80      [10] 1407 	ld	hl,#0x8007
   088A CDr00r00      [17] 1408 	call	_cpct_isKeyPressed
   088D 7D            [ 4] 1409 	ld	a,l
   088E B7            [ 4] 1410 	or	a, a
   088F 28 4E         [12] 1411 	jr	Z,00141$
   0891 DD 6E F0      [19] 1412 	ld	l,-16 (ix)
   0894 DD 66 F1      [19] 1413 	ld	h,-15 (ix)
   0897 56            [ 7] 1414 	ld	d,(hl)
   0898 23            [ 6] 1415 	inc	hl
   0899 66            [ 7] 1416 	ld	h,(hl)
   089A 15            [ 4] 1417 	dec	d
   089B 20 42         [12] 1418 	jr	NZ,00141$
   089D 7C            [ 4] 1419 	ld	a,h
   089E B7            [ 4] 1420 	or	a, a
   089F 20 3E         [12] 1421 	jr	NZ,00141$
                           1422 ;src/main.c:266: pr.vivo = 0;
   08A1 DD 6E F0      [19] 1423 	ld	l,-16 (ix)
   08A4 DD 66 F1      [19] 1424 	ld	h,-15 (ix)
   08A7 AF            [ 4] 1425 	xor	a, a
   08A8 77            [ 7] 1426 	ld	(hl), a
   08A9 23            [ 6] 1427 	inc	hl
   08AA 77            [ 7] 1428 	ld	(hl), a
                           1429 ;src/main.c:267: pr.dir = p.dir;
   08AB DD 6E DF      [19] 1430 	ld	l,-33 (ix)
   08AE DD 66 E0      [19] 1431 	ld	h,-32 (ix)
   08B1 56            [ 7] 1432 	ld	d,(hl)
   08B2 23            [ 6] 1433 	inc	hl
   08B3 5E            [ 7] 1434 	ld	e,(hl)
   08B4 DD 6E EE      [19] 1435 	ld	l,-18 (ix)
   08B7 DD 66 EF      [19] 1436 	ld	h,-17 (ix)
   08BA 72            [ 7] 1437 	ld	(hl),d
   08BB 23            [ 6] 1438 	inc	hl
   08BC 73            [ 7] 1439 	ld	(hl),e
                           1440 ;src/main.c:268: pr.x = p.x+4;
   08BD DD 6E E5      [19] 1441 	ld	l,-27 (ix)
   08C0 DD 66 E6      [19] 1442 	ld	h,-26 (ix)
   08C3 7E            [ 7] 1443 	ld	a,(hl)
   08C4 C6 04         [ 7] 1444 	add	a, #0x04
   08C6 DD 6E F8      [19] 1445 	ld	l,-8 (ix)
   08C9 DD 66 F9      [19] 1446 	ld	h,-7 (ix)
   08CC 77            [ 7] 1447 	ld	(hl),a
                           1448 ;src/main.c:269: pr.y = p.y+8;
   08CD DD 6E FA      [19] 1449 	ld	l,-6 (ix)
   08D0 DD 66 FB      [19] 1450 	ld	h,-5 (ix)
   08D3 7E            [ 7] 1451 	ld	a,(hl)
   08D4 C6 08         [ 7] 1452 	add	a, #0x08
   08D6 DD 6E F6      [19] 1453 	ld	l,-10 (ix)
   08D9 DD 66 F7      [19] 1454 	ld	h,-9 (ix)
   08DC 77            [ 7] 1455 	ld	(hl),a
   08DD 18 4A         [12] 1456 	jr	00168$
   08DF                    1457 00141$:
                           1458 ;src/main.c:270: }else  if(cpct_isKeyPressed(Key_Esc)){
   08DF 21 08 04      [10] 1459 	ld	hl,#0x0408
   08E2 CDr00r00      [17] 1460 	call	_cpct_isKeyPressed
   08E5 7D            [ 4] 1461 	ld	a,l
   08E6 B7            [ 4] 1462 	or	a, a
   08E7 28 40         [12] 1463 	jr	Z,00168$
                           1464 ;src/main.c:271: return;
   08E9 C3r16r0B      [10] 1465 	jp	00200$
   08EC                    1466 00167$:
                           1467 ;src/main.c:275: p.x -= 2;
   08EC DD 6E E5      [19] 1468 	ld	l,-27 (ix)
   08EF DD 66 E6      [19] 1469 	ld	h,-26 (ix)
   08F2 7E            [ 7] 1470 	ld	a,(hl)
   08F3 C6 FE         [ 7] 1471 	add	a,#0xFE
   08F5 DD 6E E5      [19] 1472 	ld	l,-27 (ix)
   08F8 DD 66 E6      [19] 1473 	ld	h,-26 (ix)
   08FB 77            [ 7] 1474 	ld	(hl),a
                           1475 ;src/main.c:276: p.rebote -= 2;
   08FC DD 6E DB      [19] 1476 	ld	l,-37 (ix)
   08FF DD 66 DC      [19] 1477 	ld	h,-36 (ix)
   0902 5E            [ 7] 1478 	ld	e,(hl)
   0903 23            [ 6] 1479 	inc	hl
   0904 56            [ 7] 1480 	ld	d,(hl)
   0905 1B            [ 6] 1481 	dec	de
   0906 1B            [ 6] 1482 	dec	de
   0907 DD 6E DB      [19] 1483 	ld	l,-37 (ix)
   090A DD 66 DC      [19] 1484 	ld	h,-36 (ix)
   090D 73            [ 7] 1485 	ld	(hl),e
   090E 23            [ 6] 1486 	inc	hl
   090F 72            [ 7] 1487 	ld	(hl),d
                           1488 ;src/main.c:277: if(p.rebote == 0){
   0910 7A            [ 4] 1489 	ld	a,d
   0911 B3            [ 4] 1490 	or	a,e
   0912 20 15         [12] 1491 	jr	NZ,00168$
                           1492 ;src/main.c:278: p.rebote = 6;
   0914 DD 6E DB      [19] 1493 	ld	l,-37 (ix)
   0917 DD 66 DC      [19] 1494 	ld	h,-36 (ix)
   091A 36 06         [10] 1495 	ld	(hl),#0x06
   091C 23            [ 6] 1496 	inc	hl
   091D 36 00         [10] 1497 	ld	(hl),#0x00
                           1498 ;src/main.c:279: p.col = 0;
   091F DD 6E DD      [19] 1499 	ld	l,-35 (ix)
   0922 DD 66 DE      [19] 1500 	ld	h,-34 (ix)
   0925 AF            [ 4] 1501 	xor	a, a
   0926 77            [ 7] 1502 	ld	(hl), a
   0927 23            [ 6] 1503 	inc	hl
   0928 77            [ 7] 1504 	ld	(hl), a
   0929                    1505 00168$:
                           1506 ;src/main.c:284: sprite = checkSprite(p.atk,p.dir);
   0929 DD 6E DF      [19] 1507 	ld	l,-33 (ix)
   092C DD 66 E0      [19] 1508 	ld	h,-32 (ix)
   092F 4E            [ 7] 1509 	ld	c,(hl)
   0930 23            [ 6] 1510 	inc	hl
   0931 46            [ 7] 1511 	ld	b,(hl)
   0932 DD 6E E3      [19] 1512 	ld	l,-29 (ix)
   0935 DD 66 E4      [19] 1513 	ld	h,-28 (ix)
   0938 5E            [ 7] 1514 	ld	e,(hl)
   0939 23            [ 6] 1515 	inc	hl
   093A 56            [ 7] 1516 	ld	d,(hl)
   093B C5            [11] 1517 	push	bc
   093C D5            [11] 1518 	push	de
   093D CDr96r00      [17] 1519 	call	_checkSprite
   0940 F1            [10] 1520 	pop	af
   0941 F1            [10] 1521 	pop	af
   0942 33            [ 6] 1522 	inc	sp
   0943 33            [ 6] 1523 	inc	sp
   0944 E5            [11] 1524 	push	hl
                           1525 ;src/main.c:286: if(pr.vivo == 0){
   0945 DD 6E F0      [19] 1526 	ld	l,-16 (ix)
   0948 DD 66 F1      [19] 1527 	ld	h,-15 (ix)
   094B 7E            [ 7] 1528 	ld	a,(hl)
   094C DD 77 E7      [19] 1529 	ld	-25 (ix),a
   094F 23            [ 6] 1530 	inc	hl
   0950 7E            [ 7] 1531 	ld	a,(hl)
   0951 DD 77 E8      [19] 1532 	ld	-24 (ix), a
   0954 DD B6 E7      [19] 1533 	or	a,-25 (ix)
   0957 C2r46r0A      [10] 1534 	jp	NZ,00187$
                           1535 ;src/main.c:287: pr.prevX = pr.x;
   095A DD 6E F8      [19] 1536 	ld	l,-8 (ix)
   095D DD 66 F9      [19] 1537 	ld	h,-7 (ix)
   0960 7E            [ 7] 1538 	ld	a,(hl)
   0961 DD 77 E7      [19] 1539 	ld	-25 (ix),a
   0964 DD 6E F4      [19] 1540 	ld	l,-12 (ix)
   0967 DD 66 F5      [19] 1541 	ld	h,-11 (ix)
   096A DD 7E E7      [19] 1542 	ld	a,-25 (ix)
   096D 77            [ 7] 1543 	ld	(hl),a
                           1544 ;src/main.c:288: pr.prevY = pr.y;
   096E DD 6E F6      [19] 1545 	ld	l,-10 (ix)
   0971 DD 66 F7      [19] 1546 	ld	h,-9 (ix)
   0974 7E            [ 7] 1547 	ld	a,(hl)
   0975 DD 77 E7      [19] 1548 	ld	-25 (ix),a
   0978 DD 6E F2      [19] 1549 	ld	l,-14 (ix)
   097B DD 66 F3      [19] 1550 	ld	h,-13 (ix)
   097E DD 7E E7      [19] 1551 	ld	a,-25 (ix)
   0981 77            [ 7] 1552 	ld	(hl),a
                           1553 ;src/main.c:289: switch((int)pr.dir){
   0982 DD 6E EE      [19] 1554 	ld	l,-18 (ix)
   0985 DD 66 EF      [19] 1555 	ld	h,-17 (ix)
   0988 7E            [ 7] 1556 	ld	a,(hl)
   0989 DD 77 E7      [19] 1557 	ld	-25 (ix),a
   098C 23            [ 6] 1558 	inc	hl
   098D 7E            [ 7] 1559 	ld	a,(hl)
   098E DD 77 E8      [19] 1560 	ld	-24 (ix),a
   0991 DD CB E8 7E   [20] 1561 	bit	7, -24 (ix)
   0995 C2r46r0A      [10] 1562 	jp	NZ,00187$
   0998 3E 03         [ 7] 1563 	ld	a,#0x03
   099A DD BE E7      [19] 1564 	cp	a, -25 (ix)
   099D 3E 00         [ 7] 1565 	ld	a,#0x00
   099F DD 9E E8      [19] 1566 	sbc	a, -24 (ix)
   09A2 E2rA7r09      [10] 1567 	jp	PO, 00375$
   09A5 EE 80         [ 7] 1568 	xor	a, #0x80
   09A7                    1569 00375$:
   09A7 FAr46r0A      [10] 1570 	jp	M,00187$
   09AA DD 5E E7      [19] 1571 	ld	e,-25 (ix)
   09AD 16 00         [ 7] 1572 	ld	d,#0x00
   09AF 21rB5r09      [10] 1573 	ld	hl,#00376$
   09B2 19            [11] 1574 	add	hl,de
   09B3 19            [11] 1575 	add	hl,de
                           1576 ;src/main.c:290: case 0:
   09B4 E9            [ 4] 1577 	jp	(hl)
   09B5                    1578 00376$:
   09B5 18 06         [12] 1579 	jr	00169$
   09B7 18 27         [12] 1580 	jr	00173$
   09B9 18 47         [12] 1581 	jr	00177$
   09BB 18 69         [12] 1582 	jr	00181$
   09BD                    1583 00169$:
                           1584 ;src/main.c:291: if(pr.x<74)
   09BD DD 6E F8      [19] 1585 	ld	l,-8 (ix)
   09C0 DD 66 F9      [19] 1586 	ld	h,-7 (ix)
   09C3 56            [ 7] 1587 	ld	d,(hl)
   09C4 7A            [ 4] 1588 	ld	a,d
   09C5 D6 4A         [ 7] 1589 	sub	a, #0x4A
   09C7 30 0A         [12] 1590 	jr	NC,00171$
                           1591 ;src/main.c:292: pr.x++;
   09C9 14            [ 4] 1592 	inc	d
   09CA DD 6E F8      [19] 1593 	ld	l,-8 (ix)
   09CD DD 66 F9      [19] 1594 	ld	h,-7 (ix)
   09D0 72            [ 7] 1595 	ld	(hl),d
   09D1 18 73         [12] 1596 	jr	00187$
   09D3                    1597 00171$:
                           1598 ;src/main.c:294: pr.vivo = 1;
   09D3 DD 6E F0      [19] 1599 	ld	l,-16 (ix)
   09D6 DD 66 F1      [19] 1600 	ld	h,-15 (ix)
   09D9 36 01         [10] 1601 	ld	(hl),#0x01
   09DB 23            [ 6] 1602 	inc	hl
   09DC 36 00         [10] 1603 	ld	(hl),#0x00
                           1604 ;src/main.c:295: break;
   09DE 18 66         [12] 1605 	jr	00187$
                           1606 ;src/main.c:296: case 1:
   09E0                    1607 00173$:
                           1608 ;src/main.c:297: if(pr.x > 0)
   09E0 DD 6E F8      [19] 1609 	ld	l,-8 (ix)
   09E3 DD 66 F9      [19] 1610 	ld	h,-7 (ix)
   09E6 7E            [ 7] 1611 	ld	a,(hl)
   09E7 B7            [ 4] 1612 	or	a, a
   09E8 28 0B         [12] 1613 	jr	Z,00175$
                           1614 ;src/main.c:298: pr.x--;
   09EA C6 FF         [ 7] 1615 	add	a,#0xFF
   09EC DD 6E F8      [19] 1616 	ld	l,-8 (ix)
   09EF DD 66 F9      [19] 1617 	ld	h,-7 (ix)
   09F2 77            [ 7] 1618 	ld	(hl),a
   09F3 18 51         [12] 1619 	jr	00187$
   09F5                    1620 00175$:
                           1621 ;src/main.c:300: pr.vivo = 1;
   09F5 DD 6E F0      [19] 1622 	ld	l,-16 (ix)
   09F8 DD 66 F1      [19] 1623 	ld	h,-15 (ix)
   09FB 36 01         [10] 1624 	ld	(hl),#0x01
   09FD 23            [ 6] 1625 	inc	hl
   09FE 36 00         [10] 1626 	ld	(hl),#0x00
                           1627 ;src/main.c:301: break;
   0A00 18 44         [12] 1628 	jr	00187$
                           1629 ;src/main.c:302: case 2:
   0A02                    1630 00177$:
                           1631 ;src/main.c:216: memptr = cpct_getScreenPtr(VMEM,pr.x,pr.y);
   0A02 DD 6E F6      [19] 1632 	ld	l,-10 (ix)
   0A05 DD 66 F7      [19] 1633 	ld	h,-9 (ix)
   0A08 56            [ 7] 1634 	ld	d,(hl)
                           1635 ;src/main.c:303: if(pr.y < 192)
   0A09 7A            [ 4] 1636 	ld	a,d
   0A0A D6 C0         [ 7] 1637 	sub	a, #0xC0
   0A0C 30 0B         [12] 1638 	jr	NC,00179$
                           1639 ;src/main.c:304: pr.y+=2;
   0A0E 14            [ 4] 1640 	inc	d
   0A0F 14            [ 4] 1641 	inc	d
   0A10 DD 6E F6      [19] 1642 	ld	l,-10 (ix)
   0A13 DD 66 F7      [19] 1643 	ld	h,-9 (ix)
   0A16 72            [ 7] 1644 	ld	(hl),d
   0A17 18 2D         [12] 1645 	jr	00187$
   0A19                    1646 00179$:
                           1647 ;src/main.c:306: pr.vivo = 1;
   0A19 DD 6E F0      [19] 1648 	ld	l,-16 (ix)
   0A1C DD 66 F1      [19] 1649 	ld	h,-15 (ix)
   0A1F 36 01         [10] 1650 	ld	(hl),#0x01
   0A21 23            [ 6] 1651 	inc	hl
   0A22 36 00         [10] 1652 	ld	(hl),#0x00
                           1653 ;src/main.c:307: break;
   0A24 18 20         [12] 1654 	jr	00187$
                           1655 ;src/main.c:308: case 3:
   0A26                    1656 00181$:
                           1657 ;src/main.c:216: memptr = cpct_getScreenPtr(VMEM,pr.x,pr.y);
   0A26 DD 6E F6      [19] 1658 	ld	l,-10 (ix)
   0A29 DD 66 F7      [19] 1659 	ld	h,-9 (ix)
   0A2C 7E            [ 7] 1660 	ld	a,(hl)
                           1661 ;src/main.c:309: if(pr.y > 0)
   0A2D B7            [ 4] 1662 	or	a, a
   0A2E 28 0B         [12] 1663 	jr	Z,00183$
                           1664 ;src/main.c:310: pr.y-=2;
   0A30 C6 FE         [ 7] 1665 	add	a,#0xFE
   0A32 DD 6E F6      [19] 1666 	ld	l,-10 (ix)
   0A35 DD 66 F7      [19] 1667 	ld	h,-9 (ix)
   0A38 77            [ 7] 1668 	ld	(hl),a
   0A39 18 0B         [12] 1669 	jr	00187$
   0A3B                    1670 00183$:
                           1671 ;src/main.c:312: pr.vivo = 1;
   0A3B DD 6E F0      [19] 1672 	ld	l,-16 (ix)
   0A3E DD 66 F1      [19] 1673 	ld	h,-15 (ix)
   0A41 36 01         [10] 1674 	ld	(hl),#0x01
   0A43 23            [ 6] 1675 	inc	hl
   0A44 36 00         [10] 1676 	ld	(hl),#0x00
                           1677 ;src/main.c:314: }
   0A46                    1678 00187$:
                           1679 ;src/main.c:317: if(p.col != 2 && e.vivo == 0){
   0A46 DD 6E DD      [19] 1680 	ld	l,-35 (ix)
   0A49 DD 66 DE      [19] 1681 	ld	h,-34 (ix)
   0A4C 56            [ 7] 1682 	ld	d,(hl)
   0A4D 23            [ 6] 1683 	inc	hl
   0A4E 66            [ 7] 1684 	ld	h,(hl)
   0A4F 7A            [ 4] 1685 	ld	a,d
   0A50 D6 02         [ 7] 1686 	sub	a,#0x02
   0A52 20 04         [12] 1687 	jr	NZ,00377$
   0A54 B4            [ 4] 1688 	or	a,h
   0A55 CArF6r0A      [10] 1689 	jp	Z,00193$
   0A58                    1690 00377$:
   0A58 DD 6E D3      [19] 1691 	ld	l,-45 (ix)
   0A5B DD 66 D4      [19] 1692 	ld	h,-44 (ix)
   0A5E 56            [ 7] 1693 	ld	d,(hl)
   0A5F 23            [ 6] 1694 	inc	hl
   0A60 7E            [ 7] 1695 	ld	a, (hl)
   0A61 B2            [ 4] 1696 	or	a,d
   0A62 C2rF6r0A      [10] 1697 	jp	NZ,00193$
                           1698 ;src/main.c:318: p.col = checkCollisions(p.x,p.y,e.x,e.y,p.dir,p.atk,0);
   0A65 DD 6E E3      [19] 1699 	ld	l,-29 (ix)
   0A68 DD 66 E4      [19] 1700 	ld	h,-28 (ix)
   0A6B 4E            [ 7] 1701 	ld	c,(hl)
   0A6C 23            [ 6] 1702 	inc	hl
   0A6D 46            [ 7] 1703 	ld	b,(hl)
   0A6E DD 6E DF      [19] 1704 	ld	l,-33 (ix)
   0A71 DD 66 E0      [19] 1705 	ld	h,-32 (ix)
   0A74 7E            [ 7] 1706 	ld	a,(hl)
   0A75 DD 77 E7      [19] 1707 	ld	-25 (ix),a
   0A78 23            [ 6] 1708 	inc	hl
   0A79 7E            [ 7] 1709 	ld	a,(hl)
   0A7A DD 77 E8      [19] 1710 	ld	-24 (ix),a
   0A7D DD 6E D5      [19] 1711 	ld	l,-43 (ix)
   0A80 DD 66 D6      [19] 1712 	ld	h,-42 (ix)
   0A83 5E            [ 7] 1713 	ld	e,(hl)
   0A84 DD 6E D7      [19] 1714 	ld	l,-41 (ix)
   0A87 DD 66 D8      [19] 1715 	ld	h,-40 (ix)
   0A8A 7E            [ 7] 1716 	ld	a,(hl)
   0A8B DD 77 E9      [19] 1717 	ld	-23 (ix),a
   0A8E DD 6E FA      [19] 1718 	ld	l,-6 (ix)
   0A91 DD 66 FB      [19] 1719 	ld	h,-5 (ix)
   0A94 7E            [ 7] 1720 	ld	a,(hl)
   0A95 DD 77 EA      [19] 1721 	ld	-22 (ix),a
   0A98 DD 6E E5      [19] 1722 	ld	l,-27 (ix)
   0A9B DD 66 E6      [19] 1723 	ld	h,-26 (ix)
   0A9E 56            [ 7] 1724 	ld	d,(hl)
   0A9F AF            [ 4] 1725 	xor	a, a
   0AA0 F5            [11] 1726 	push	af
   0AA1 33            [ 6] 1727 	inc	sp
   0AA2 C5            [11] 1728 	push	bc
   0AA3 DD 6E E7      [19] 1729 	ld	l,-25 (ix)
   0AA6 DD 66 E8      [19] 1730 	ld	h,-24 (ix)
   0AA9 E5            [11] 1731 	push	hl
   0AAA 7B            [ 4] 1732 	ld	a,e
   0AAB F5            [11] 1733 	push	af
   0AAC 33            [ 6] 1734 	inc	sp
   0AAD DD 7E E9      [19] 1735 	ld	a,-23 (ix)
   0AB0 F5            [11] 1736 	push	af
   0AB1 33            [ 6] 1737 	inc	sp
   0AB2 DD 7E EA      [19] 1738 	ld	a,-22 (ix)
   0AB5 F5            [11] 1739 	push	af
   0AB6 33            [ 6] 1740 	inc	sp
   0AB7 D5            [11] 1741 	push	de
   0AB8 33            [ 6] 1742 	inc	sp
   0AB9 CDr95r00      [17] 1743 	call	_checkCollisions
   0ABC FD 21 09 00   [14] 1744 	ld	iy,#9
   0AC0 FD 39         [15] 1745 	add	iy,sp
   0AC2 FD F9         [10] 1746 	ld	sp,iy
   0AC4 55            [ 4] 1747 	ld	d,l
   0AC5 5C            [ 4] 1748 	ld	e,h
   0AC6 DD 6E DD      [19] 1749 	ld	l,-35 (ix)
   0AC9 DD 66 DE      [19] 1750 	ld	h,-34 (ix)
   0ACC 72            [ 7] 1751 	ld	(hl),d
   0ACD 23            [ 6] 1752 	inc	hl
   0ACE 73            [ 7] 1753 	ld	(hl),e
                           1754 ;src/main.c:319: if(p.col == 2)
   0ACF 7A            [ 4] 1755 	ld	a,d
   0AD0 D6 02         [ 7] 1756 	sub	a,#0x02
   0AD2 20 16         [12] 1757 	jr	NZ,00189$
   0AD4 B3            [ 4] 1758 	or	a,e
   0AD5 20 13         [12] 1759 	jr	NZ,00189$
                           1760 ;src/main.c:320: p.life--;
   0AD7 DD 6E D9      [19] 1761 	ld	l,-39 (ix)
   0ADA DD 66 DA      [19] 1762 	ld	h,-38 (ix)
   0ADD 5E            [ 7] 1763 	ld	e,(hl)
   0ADE 23            [ 6] 1764 	inc	hl
   0ADF 56            [ 7] 1765 	ld	d,(hl)
   0AE0 1B            [ 6] 1766 	dec	de
   0AE1 DD 6E D9      [19] 1767 	ld	l,-39 (ix)
   0AE4 DD 66 DA      [19] 1768 	ld	h,-38 (ix)
   0AE7 73            [ 7] 1769 	ld	(hl),e
   0AE8 23            [ 6] 1770 	inc	hl
   0AE9 72            [ 7] 1771 	ld	(hl),d
   0AEA                    1772 00189$:
                           1773 ;src/main.c:321: if(p.life == 0)
   0AEA DD 6E D9      [19] 1774 	ld	l,-39 (ix)
   0AED DD 66 DA      [19] 1775 	ld	h,-38 (ix)
   0AF0 56            [ 7] 1776 	ld	d,(hl)
   0AF1 23            [ 6] 1777 	inc	hl
   0AF2 7E            [ 7] 1778 	ld	a, (hl)
   0AF3 B2            [ 4] 1779 	or	a,d
                           1780 ;src/main.c:322: return;
   0AF4 28 20         [12] 1781 	jr	Z,00200$
   0AF6                    1782 00193$:
                           1783 ;src/main.c:324: if(p.col == 1)
   0AF6 DD 6E DD      [19] 1784 	ld	l,-35 (ix)
   0AF9 DD 66 DE      [19] 1785 	ld	h,-34 (ix)
   0AFC 56            [ 7] 1786 	ld	d,(hl)
   0AFD 23            [ 6] 1787 	inc	hl
   0AFE 66            [ 7] 1788 	ld	h,(hl)
   0AFF 15            [ 4] 1789 	dec	d
   0B00 C2r9Ar04      [10] 1790 	jp	NZ,00198$
   0B03 7C            [ 4] 1791 	ld	a,h
   0B04 B7            [ 4] 1792 	or	a, a
   0B05 C2r9Ar04      [10] 1793 	jp	NZ,00198$
                           1794 ;src/main.c:325: e.vivo = 1;
   0B08 DD 6E D3      [19] 1795 	ld	l,-45 (ix)
   0B0B DD 66 D4      [19] 1796 	ld	h,-44 (ix)
   0B0E 36 01         [10] 1797 	ld	(hl),#0x01
   0B10 23            [ 6] 1798 	inc	hl
   0B11 36 00         [10] 1799 	ld	(hl),#0x00
   0B13 C3r9Ar04      [10] 1800 	jp	00198$
   0B16                    1801 00200$:
   0B16 DD F9         [10] 1802 	ld	sp, ix
   0B18 DD E1         [14] 1803 	pop	ix
   0B1A C9            [10] 1804 	ret
                           1805 ;src/main.c:332: void main(void) {
                           1806 ;	---------------------------------
                           1807 ; Function main
                           1808 ; ---------------------------------
   0B1B                    1809 _main::
                           1810 ;src/main.c:334: init();
   0B1B CDr00r00      [17] 1811 	call	_init
                           1812 ;src/main.c:337: while(1){
   0B1E                    1813 00102$:
                           1814 ;src/main.c:338: menu();
   0B1E CDr29r00      [17] 1815 	call	_menu
                           1816 ;src/main.c:339: game();
   0B21 CDr8Br02      [17] 1817 	call	_game
   0B24 18 F8         [12] 1818 	jr	00102$
                           1819 	.area _CODE
                           1820 	.area _INITIALIZER
                           1821 	.area _CABS (ABS)
